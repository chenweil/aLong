<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aLong Blog</title><link>https://blog.51ai.vip/</link><description>Recent content on aLong Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 31 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.51ai.vip/index.xml" rel="self" type="application/rss+xml"/><item><title>Raycast新版AI功能Custom Providers体验</title><link>https://blog.51ai.vip/posts/raycast%E6%96%B0%E7%89%88ai%E5%8A%9F%E8%83%BD%E4%BD%93%E9%AA%8C/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/raycast%E6%96%B0%E7%89%88ai%E5%8A%9F%E8%83%BD%E4%BD%93%E9%AA%8C/</guid><description>&lt;p>之前使用第三方的转发体验了三方API的接入。现在最新版支持&lt;strong>Custom Providers&lt;/strong> 功能了。&lt;/p>
&lt;h1 id="通过custom-providers-接入api">通过Custom Providers 接入API&lt;/h1>
&lt;p>在 Raycast 中，添加自定义模型（Custom Providers）的具体位置如下：&lt;/p>
&lt;ol>
&lt;li>打开 &lt;strong>Raycast&lt;/strong>。&lt;/li>
&lt;li>进入 &lt;strong>Settings&lt;/strong>（设置）。&lt;/li>
&lt;li>点击左侧的 &lt;strong>AI&lt;/strong> 选项卡。&lt;/li>
&lt;li>第一次需要在&lt;strong>AI&lt;/strong>选项最底下的&lt;strong>Experiments&lt;/strong>中开启&lt;strong>Custom Providers&lt;/strong>。&lt;/li>
&lt;li>在 &lt;strong>AI&lt;/strong> 选项卡页面，找到 &lt;strong>Custom Providers&lt;/strong>（自定义提供商）部分。&lt;/li>
&lt;li>点击 &lt;strong>Reveal Providers Config&lt;/strong>（显示提供商配置）按钮，这会在 Finder 中打开配置文件目录。
&lt;img src="https://s2.loli.net/2025/07/31/1R924KJNLPbcVsd.png" alt="">
点击后会跳转到具体目录中。默认是有一个&lt;strong>providers.template.yaml&lt;/strong>名字的文件。这个文件是一个模板，根据模板创建一个名称为&lt;strong>providers.yaml&lt;/strong> 。&lt;img src="https://s2.loli.net/2025/07/31/g87S5cBZOD4GyaW.png" alt="g87S5cBZOD4GyaW.png">
通过dia 我询问了一下，可能 &lt;strong>raycast仅加载此文件。&lt;/strong> 其他名称的我没做测试。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://s2.loli.net/2025/07/31/crWPpLFKUyfD9g1.png" alt="">&lt;/p>
&lt;h2 id="配置providers">配置providers&lt;/h2>
&lt;p>我这里偷个懒，直接使用claude code进行配置，告诉他一些参数。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/07/31/tPGJzpgR3xjWinU.png" alt="">
他呱唧呱唧的写完了大致的配置，我在base_url 加入了/v1，不加实际测试不正常。
api_key 我也改写成真实的(之前告诉他的是一个假的为了隐私)。&lt;/p>
&lt;p>通过测试没问题，可以使用。但有些能力限制。&lt;/p>
&lt;h1 id="custum-providers-体验">custum providers 体验&lt;/h1>
&lt;p>接入后，对话是没问题的。gemini 2.5 支持联网搜索，但实际体验下来不可以。
可以打开本地的一些程序，比如浏览器，apple music等等。
MCP支持有问题，我不知道是模型的事还是什么。比如通过exa搜索会返回error。 这是我在其他工具中没遇到的。
&lt;img src="https://s2.loli.net/2025/07/31/xlNQVyZiCwe4PEU.png" alt="">
使用raycast支持的模型，比如填写gemini key 的模型支持联网，调用MCP都OK。
如图：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/07/31/dNvUeG8r3li1yZY.png" alt="">
在raycast可以判断你接入的模型支持什么：
&lt;img src="https://s2.loli.net/2025/07/31/qugM3Ep9HzT8thJ.png" alt="">&lt;/p>
&lt;p>我在dia询问大致也是类似的回答吧：
&lt;img src="https://s2.loli.net/2025/07/31/kqPXLbI2u3TxKhi.png" alt="">&lt;/p>
&lt;p>以上就是大致的体验。Custom Providers给接入第三方接入提供了便利，让我不需要在本机开启其他proxy。 直接使用自定义的API，期待这方面后续的发展。&lt;/p>
&lt;p>完结
祝好
🍀&lt;/p></description></item><item><title>一站式解决多API管理痛点</title><link>https://blog.51ai.vip/posts/%E4%B8%80%E7%AB%99%E5%BC%8F%E8%A7%A3%E5%86%B3%E5%A4%9Aapi%E7%AE%A1%E7%90%86%E7%97%9B%E7%82%B9/</link><pubDate>Mon, 21 Jul 2025 02:31:11 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E4%B8%80%E7%AB%99%E5%BC%8F%E8%A7%A3%E5%86%B3%E5%A4%9Aapi%E7%AE%A1%E7%90%86%E7%97%9B%E7%82%B9/</guid><description>&lt;p>虽然许多平台提供丰富的API福利，但大多数被闲置了：有些有效期短暂，有些注册后就被遗忘。更麻烦的是不同平台的模型命名混乱、接入方式各异。&lt;/p>
&lt;p>最近发现&lt;strong>LiteLLM&lt;/strong>这个项目深得我心——它能统一管理所有AI模型API！通过搭建代理网关，只需一个URL和Key就能调用任意模型，就像把法宝都装进乾坤袋✨&lt;/p>
&lt;blockquote>
&lt;p>📌 &lt;strong>解决的核心问题：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>自动容错&lt;/strong>：API失效时自动冷却重试，避免手动切换&lt;/li>
&lt;li>&lt;strong>福利整合&lt;/strong>：集中管理所有API Key，告别Cherry Studio重复注册&lt;/li>
&lt;li>&lt;strong>名称统一&lt;/strong>：自定义模型组名（如&lt;code>gemini-2.5-flash&lt;/code>兼容多版本）&lt;/li>
&lt;li>&lt;strong>跨工具兼容&lt;/strong>：通过统一接口接入ChatGPT/Claude等客户端&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-搭建实录本地版">🛠 搭建实录（本地版）&lt;/h3>
&lt;blockquote>
&lt;p>因代理环境在本地，选择本地部署。服务器部署需注意规避网络限制问题&lt;/p>&lt;/blockquote>
&lt;h4 id="-目录结构">📂 目录结构&lt;/h4>
&lt;pre tabindex="0">&lt;code>.
├── docker-compose.yml
├── .env # 密钥管理
└── config/
 ├── config.yaml # 主配置
 ├── router.yaml # 路由策略
 └── models/ # 模型配置集
&lt;/code>&lt;/pre>&lt;h4 id="-关键配置">⚙️ 关键配置&lt;/h4>
&lt;p>&lt;strong>1. Docker-Compose&lt;/strong>（精简版）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">litellm&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">ghcr.io/berriai/litellm:main-stable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./config:/app/config &lt;/span> &lt;span style="color:#75715e"># 挂载整个配置目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: --&lt;span style="color:#ae81ff">config=/app/config/config.yaml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;4000:4000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env_file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">.env &lt;/span> &lt;span style="color:#75715e"># 安全加载密钥&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2. 配置分层设计&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>config.yaml&lt;/code> 引用子配置，核心参数示例：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">include&lt;/span>: [&lt;span style="color:#ae81ff">models.yaml, router.yaml]&lt;/span> &lt;span style="color:#75715e"># 模块化加载&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">litellm_settings&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">num_retries&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#75715e"># 失败重试&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">request_timeout&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">drop_params&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#75715e"># 清理冗余参数&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>router.yaml&lt;/code> 路由策略（关键！）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">router_settings&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">routing_strategy&lt;/span>: &lt;span style="color:#ae81ff">latency-based-routing&lt;/span> &lt;span style="color:#75715e"># 延迟优先&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">fallbacks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">&amp;#34;*&amp;#34;: &lt;/span>[&lt;span style="color:#e6db74">&amp;#34;gemini-2.5-flash&amp;#34;&lt;/span>] &lt;span style="color:#75715e"># 全局备用模型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">model_groups&lt;/span>: &lt;span style="color:#75715e"># !!!模型名称标准化!!!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">model_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;claude-3-5-sonnet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">model_list&lt;/span>: &lt;span style="color:#75715e"># 聚合不同命名格式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;claude-3-5-sonnet-20241022&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;claude-3.5-sonnet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>模型配置&lt;/strong>
&lt;img src="https://s2.loli.net/2025/07/22/YMwVufQy5nqioSm.png" alt="">
每个模型单独文件，通过&lt;code>models.yaml&lt;/code>加载&lt;/li>
&lt;li>&lt;strong>密钥安全&lt;/strong>
&lt;img src="https://s2.loli.net/2025/07/22/3ua7dzSUEcp1GHl.png" alt="">
用&lt;code>.env&lt;/code>隔离敏感信息，避免Git泄露&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-客户端接入实战">🔌 客户端接入实战&lt;/h3>
&lt;h4 id="1-cherry-studio">1. Cherry Studio&lt;/h4>
&lt;p>配置时注意URL补全问题：
&lt;img src="https://s2.loli.net/2025/07/22/6GbOwiNZPMRxnmL.png" alt="">
✅ 推荐填写 &lt;code>http://localhost:4000&lt;/code> 或 &lt;code>http://localhost:4000/v1/&lt;/code>&lt;/p></description></item><item><title>Fellou浏览器体验记录</title><link>https://blog.51ai.vip/posts/fellou%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BD%93%E9%AA%8C%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/fellou%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BD%93%E9%AA%8C%E8%AE%B0%E5%BD%95/</guid><description>&lt;p>上一篇水文写了&lt;a href="https://blog.51ai.vip/posts/dia%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BD%93%E9%AA%8C%E8%AE%B0%E5%BD%95/">Dia浏览器的体验&lt;/a>，佬友问我是否可以使用Fellou浏览器。我开始不知道他是什么。 佬友私信给我一个邀请码，我注册了账号，体验了一下，感觉还不错。所以我记录一下体验。在此感谢佬友分享🫰。&lt;/p>
&lt;h1 id="fellou是什么-agentic是什么">Fellou是什么， Agentic是什么&lt;/h1>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/cEw23JO8DkqQHVI.png" alt="">&lt;/p>
&lt;p>在看到Fellou的官网，世界首款Agentic浏览器。 这么说我还真不了解什么是agentic。&lt;/p>
&lt;p>询问llama4 得知：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/fIoukdHZzcUPrYG.png" alt="">&lt;/p>
&lt;p>原来Agentic是Fellou浏览器的特色之一，它是一种基于人工智能的浏览器，可以自动识别和处理网页上的各种元素，如文本、图片、视频等，从而提供更加智能和高效的浏览体验。&lt;/p>
&lt;p>我感觉可能AI浏览器就像安装了插件，智能识别内容、总结和帮你生成内容。虽然Dia内置了一些功能。但他还没有实现类似Fellou的Agentic。&lt;/p>
&lt;p>Agentic浏览器可以自动识别和处理网页上的各种元素，如文本、图片、视频等，从而提供更加智能和高效的浏览体验。简单理解为，他帮你做了一些事情使你更加方便。&lt;/p>
&lt;ul>
&lt;li>例子1:
我让他打开百度地图，然后给我从国贸到团结湖的骑行路线。结果是：&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/Wg61FIsmUoy7hV4.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/EzyJ7Wfcq6VCia8.png" alt="">&lt;/p>
&lt;p>这目前Dia是完成不了啊，这就是AI和Agentic的区别之一吧。&lt;/p>
&lt;ul>
&lt;li>例子2:
访问论坛时，看到一个提问。 *这时候在底下询问我需要我帮你查找有关的资料吗？ *&lt;/li>
&lt;/ul>
&lt;p>点开这个，右侧就开始DeepSearch了。
&lt;img src="https://s2.loli.net/2025/06/16/CZzWeBu68dHhOvF.png" alt="">&lt;/p>
&lt;p>看这个搜索的内容可不是简单的OP标题，是理解后进行的理解问题再规划查询。&lt;/p>
&lt;p>右侧能看到结果：值得注意在最底下有个run，你点击他就开始执行了。
&lt;img src="https://s2.loli.net/2025/06/16/NPsv6tLpankRmux.png" alt="">&lt;/p>
&lt;p>点击run就在浏览器单开一个tab开始执行了。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/1VWzZdEucHwrFMj.png" alt="">&lt;/p>
&lt;p>直到他完成返回结果。&lt;/p>
&lt;p>生成搜索结果时的界面：&lt;/p>
&lt;p>左侧正在生成一个HTML的报告页面，右侧的对话中进行了报告内容的摘要信息。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/A6dHzqMRU2YrEfJ.png" alt="">&lt;/p>
&lt;p>最终结果😱，一个问题让他一搞变成了一大篇。好在能分享 &lt;a href="https://chat.fellou.ai/report/7833279e-8ae7-4e69-9500-236044c7f263">结果太恐怖点这看&lt;/a>
够deep，够search，够cool！&lt;/p>
&lt;ul>
&lt;li>例子3:
我还是想对比一下Dia和Fellou的话题总结。 结果好坏老友们自品一下，我个人感觉Fellou比Dia总结的好些。&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Dia内容里还能看到一个神奇的qq新闻地址。😨&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/Jpdl3QoxhTPU5FI.png" alt="">&lt;/p>
&lt;ul>
&lt;li>例子4：
类似Dia的水贴回复，我就是举个例子我可没真水啊🥹。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/jFSDikUyYldgJWa.png" alt="">&lt;/p>
&lt;p>这又体现他Agentic的特性了。他不仅帮你生成了内容，还给你回复了🤩。 自动水贴成功啊。就是慢点，他规划好怎么去做这个事，通过截屏寻找要操作的位置按步骤最后执行成功。 🎊 但我改了，他那句不太好，也为了避免老友举报，我编辑人工调整了。&lt;/p>
&lt;p>类似像YTB视频总结，文章总结等等都OK的。&lt;/p>
&lt;ul>
&lt;li>录制一个短视频体现他Agentic的特性&lt;/li>
&lt;/ul>
&lt;p>🔗 &lt;a href="https://watch.wave.video/JgizvBqMzroXHFN1">点击查看Fellou浏览器Agentic特性演示视频&lt;/a>&lt;/p>
&lt;p>通过以上几个例子，我想佬友们会体会到agentic是什么感觉。和Dia的区别是什么。&lt;/p>
&lt;h1 id="ui交互">UI、交互&lt;/h1>
&lt;p>Dia我很喜欢，他的UI，交互等等。这里页简单对Fellou进行一些观察吧。&lt;/p>
&lt;p>打开主界面看起还也是简约的：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/Qn8ULShMmga6JYj.png" alt="">&lt;/p>
&lt;p>操作类似的，在中间的input框或地址栏，会弹出来一个黑色input框神奇🤨。
输入可以可以进行对话、访问网站或其他指令。&lt;/p>
&lt;p>当使用浏览的起Deep Action是，窗口会像类似苹果那种窗口边框变换颜色的效果。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>输入&lt;code>/&lt;/code>各种搜索
&lt;img src="https://s2.loli.net/2025/06/16/VvJkU7HtWif5DSq.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>输入&lt;code>@&lt;/code> 选择上下文&lt;/p>
&lt;/li>
&lt;li>
&lt;p>输入&lt;code>tab&lt;/code> 切换到Fellou搜索&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/E6lKrv1ewgdXfUj.gif" alt="">&lt;/p>
&lt;h2 id="设置简洁支持多profiles">设置简洁，支持多Profiles&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/16/Es2WYeGALXy5FNo.png" alt="">&lt;/p></description></item><item><title>Dia浏览器体验记录</title><link>https://blog.51ai.vip/posts/dia%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BD%93%E9%AA%8C%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/dia%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BD%93%E9%AA%8C%E8%AE%B0%E5%BD%95/</guid><description>&lt;p>早在论坛拿到邀请🐎，下载打开一看，这啥啊这事？ 这么简约？&lt;/p>
&lt;h1 id="当个ai提问">&lt;strong>当个AI提问&lt;/strong>&lt;/h1>
&lt;p>最开始就用它来当个AI，做一些简单事情。 比如打开一个文章、帖子，问他讲了什么。 根据内容再提出其他问题。&lt;/p>
&lt;p>在浏览的内容点击 &lt;code>chat&lt;/code> 按钮或者快捷键 &lt;code>command(ctrl) + e&lt;/code>。&lt;/p>
&lt;p>也可以在地址栏输入 选择chat。&lt;/p>
&lt;p>对话支持文件上传。&lt;/p>
&lt;p>例子：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/13/8CAzPBVKm2Hvxl3.png" alt="">
&lt;em>演示图片瑕疵，我后面又看了其他主题。截图时没注意。 &amp;#x1f92b;&lt;/em>&lt;/p>
&lt;h1 id="生成内容">&lt;strong>生成内容&lt;/strong>&lt;/h1>
&lt;p>好看完了帖子，想表达却又不知道怎么说呢？ 让他搞吧。&lt;/p>
&lt;p>此时输出内容UI不同，这个insert按钮需要你在网页定位到能输入的地方。&lt;/p>
&lt;p>另一个例子：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/13/RCmoUHdLqVfFDxI.png" alt="">&lt;/p>
&lt;h1 id="个性化设置">&lt;strong>个性化设置&lt;/strong>&lt;/h1>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/13/aH5LtABcV8P47f1.png" alt="">&lt;/p>
&lt;h2 id="personalize-四个选项我的理解">Personalize 四个选项我的理解&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>第一项看起来是品味。 我不太理解，大概是你喜欢什么品牌、作家等的风格吧。比如鲁迅分、川普风。🐒&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第二项那里，如果你常看见他时不时出来英文，也可以在这里提醒他 speak chinese。 具体描述你喜欢什么形式内容更容易接受。比如分段落展示、脑图、图标等等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第三项 我理解是输出的风格、形式等吧。比如加不加emoji。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第四项是关于编程偏好的设定，比如你用什么语言、什么架构、什么框架等等等。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>每个选项不一样，我这里演示第三个 关于 &lt;strong>Wirte&lt;/strong> 的风格。&lt;/p>
&lt;p>这里我需要提醒他，如果我访问的内容是英文时，你输入内容也相同。&lt;/p>
&lt;p>这样才能与世界通话嘛。 😂&lt;/p>
&lt;p>🔔提示内容：
&lt;code>If the tab content is in English, please generate content that is also in English.&lt;/code>&lt;/p>
&lt;p>输出：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/13/3IhGqwVxMu4X1id.png" alt="">&lt;/p>
&lt;p>如果没有这句提示，他会根据对话语言，输出中文夸赞内容。😮‍💨&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/13/iPckQz3Ajgpl9eS.png" alt="">&lt;/p>
&lt;h1 id="多标签对话">&lt;strong>多标签对话&lt;/strong>&lt;/h1>
&lt;p>比如以Hugo 文档为例，他有四个页面。 抛出quick start 还有三个。如果我直接问模型可能他会告诉我内容，但我想自己再去看看文档又不知道再哪段（比如内容多很多）时。 可以都打他 用&lt;code>@&lt;/code>去选择这些tab页。&lt;/p></description></item><item><title>RaycastAI Proxy</title><link>https://blog.51ai.vip/posts/raycastai-proxy/</link><pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/raycastai-proxy/</guid><description>&lt;p>一直在重度使用Raycast，AI方面之前一直使用chatGPT插件但是他有个缺点，不能继续对话。&lt;/p>
&lt;p>前天reddit发现一个项目： &lt;a href="https://github.com/miikkaylisiurunen/raycast-ai-openrouter-proxy.git">raycast-ai-openrouter-proxy&lt;/a>&lt;/p>
&lt;p>就是直接使用官方的AI功能，通过一个服务来实现接入其他平台的LLM API。&lt;/p>
&lt;p>&lt;em>也有个缺点就是不展示思考信息。&lt;/em>&lt;/p>
&lt;p>看图：
输入内容 tab&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/11/fLgcZpzUxAyRt7X.png" alt="">&lt;/p>
&lt;p>继续对话：
command+J &lt;em>切换模型有提示&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/06/11/at6ZRziu3hwfGec.png" alt="">&lt;/p>
&lt;p>选择模型和配置prompt：
&lt;img src="https://s2.loli.net/2025/06/11/LgIF2jqBhVPcZ3U.png" alt="">&lt;/p>
&lt;h2 id="部署配置">部署+配置&lt;/h2>
&lt;h3 id="克隆项目后">克隆项目后&lt;/h3>
&lt;p>我稍微调整了一下compose&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-compose" data-lang="compose">services:
 raycast-ai-proxy:
 restart: unless-stopped
 build: .
 ports:
 - &amp;#39;11435:3000&amp;#39;
 volumes:
 - ./models.json:/app/models.json:ro
 environment:
	 # 配置通过 .env 导入
 - API_KEY=${API_KEY}
 - BASE_URL=${BASE_URL}
&lt;/code>&lt;/pre>&lt;h3 id="配置参数">配置参数&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-.env" data-lang=".env">&lt;span style="display:flex;">&lt;span>API_KEY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sk-xxx&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 你的key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BASE_URL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://ark.cn-beijing.volces.com/api/v3&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 我这里配置的火山&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BASE_URL=&amp;#34;https://openrouter.ai/api/v1&amp;#34; # 默认写的 openrouter&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置模型-modeljson">配置模型 model.json&lt;/h3>
&lt;p>默认model.json提供了一些案例。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Doubao-1.5-vision-pro-32k&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ep-xxx-xxx&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;contextLength&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">10240&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;capabilities&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;vision&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;tools&amp;#34;&lt;/span>], &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">支持多模态和tools&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;temperature&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#960050;background-color:#1e0010">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;DeepSeek-V3-0324&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ep-xxx-xxx&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;contextLength&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">10240&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;capabilities&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;tools&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;temperature&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0.6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="启动服务">启动服务&lt;/h3>
&lt;p>这些搞定后启动服务： &lt;code>docker compose up -d&lt;/code>&lt;/p></description></item><item><title>Gemini制作AppleScritp一次过</title><link>https://blog.51ai.vip/posts/gemini%E5%88%B6%E4%BD%9Capplescritp%E4%B8%80%E6%AC%A1%E8%BF%87/</link><pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/gemini%E5%88%B6%E4%BD%9Capplescritp%E4%B8%80%E6%AC%A1%E8%BF%87/</guid><description>&lt;h1 id="前提">前提&lt;/h1>
&lt;p>我喜欢使用Arc浏览器，自从同厂出的Dia出来后体验AI部分功能不错。但用它当作主力还是有点Chrome的感觉。我还是喜欢使用Arc，我想能否使用插件或者脚本来实现这个功能呢。没写过插件、脚本我问了大模型告诉我 &lt;code>open -a &amp;quot;Dia&amp;quot; &amp;quot;https://example.com&amp;quot;&lt;/code> 能实现我的想法💡。 哈哈，没错可以的。&lt;/p>
&lt;h2 id="处理过程">处理过程&lt;/h2>
&lt;p>但当我问怎么通过Arc浏览器去实现时，大模型就说法不一了。我测试了qwen3、claude3.7还有gemini2.5 pro。国内qwen3、扣子空间都是拒绝回答这个，提示违规😓。&lt;/p>
&lt;p>结果是：&lt;/p>
&lt;p>一开始都说插件能搞定，但通过cursor没实现成功。&lt;/p>
&lt;p>zed我也试了试效果也不对。 他们确实制作了一个浏览器插件，我从网上生成能了icon本地加载一看，我靠他们那个插件有个按钮，点击下载了一个sh文件，打开一看 是我上面的那条命令。 🤔 这么忽悠我啊？&lt;/p>
&lt;p>再去问问，她们说权限不行，浏览器不支持执行脚本等等等。我没开发过不懂，继续告诉他我使用的笔记本是macOS系统，能否通过系统实现这个功能。模型说可以使用Apple Script。 嗯，我没用过，那请开始你的表演。 由于其他模型回答都是写了个脚本，没说清楚具体怎么使用。我最终选择了一个不错的答案，Gemini 3.5 pro的结果。&lt;/p>
&lt;p>👉&lt;a href="https://aistudio.google.com/app/prompts?state=%7B%22ids%22:%5B%221V9-dOuaNeFmDoqJJIe7NUeOaxDBJrFTr%22%5D,%22action%22:%22open%22,%22userId%22:%22112999297973691289741%22,%22resourceKeys%22:%7B%7D%7D&amp;amp;usp=sharing">对话分享链接&lt;/a>&lt;/p>
&lt;p>如果链接看不了，下面插入图片：
问题：
&lt;img src="https://s2.loli.net/2025/05/20/gcnzFGdf3OUXVob.png" alt="">
思考内容：
&lt;img src="https://s2.loli.net/2025/05/20/PbYlIsUd4VfJXRG.png" alt="">&lt;/p>
&lt;p>返回的内容：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/05/20/xSNXMKgJbyh5ZD9.png" alt="">&lt;/p>
&lt;p>实验结果： 按照模型的回答，按照方法二一次成功。方法二中对于我完全没用过的小白来说，按照文字就能操作了，很强👍。那其他模型由于没有这么细致我就待过不提了😟。&lt;/p>
&lt;p>最后在Arc上加入快捷键：&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/05/20/58EMKd1Gua4OBqW.png" alt="">&lt;/p>
&lt;p>配置快捷键的具体过程是：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>在Arc 点&lt;code>Services&lt;/code>， &lt;code>Services Seetings&lt;/code> 。
&lt;img src="https://s2.loli.net/2025/05/20/6yRTsEQvBrWY3H2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在Services 中找到 你的脚本，在右侧双击录入快捷键。
&lt;img src="https://s2.loli.net/2025/05/20/8IGzlHOQtcU2Em6.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>我从来没用过Apple Script，也没开发过浏览器插件。 功能看起来在熟练的大佬眼里这就是个小功能，手到擒来。对于我就是作大山，我的心智是抵抗学习这些东西的，越不会越不想学。&lt;/p>
&lt;p>在模型的能力下，让我通过想法到实现目的只需要1个小时左右。前期我一直考虑是否能通过插件实现，试了三次插件都没实现，其他模型会提示没办法执行脚本。也有模型提示使用&lt;code>dia://xxx.com&lt;/code> 方式，我在dia浏览器测试不可以❌。实现后同样结果。&lt;/p>
&lt;p>最后我选择在Google Al Studio的&lt;code>Gemini 2.5 Pro Preview 05-06&lt;/code>实现此功能。让我对开发一些小玩意儿增强了自信。&lt;/p>
&lt;p>同时在国内的体验中，都是拒绝回答这话题，我不知道哪句话是敏感性的😓。
&lt;img src="https://s2.loli.net/2025/05/20/phoFP3KxR2ZgyLt.png" alt="">
&lt;img src="https://s2.loli.net/2025/05/20/4yKYGNmlougqkhe.png" alt="">&lt;/p>
&lt;p>完结
祝好
～&lt;/p></description></item><item><title>通过gitlog用AI整理项目记录</title><link>https://blog.51ai.vip/posts/%E9%80%9A%E8%BF%87gitlog%E7%94%A8ai%E6%95%B4%E7%90%86%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</link><pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E9%80%9A%E8%BF%87gitlog%E7%94%A8ai%E6%95%B4%E7%90%86%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</guid><description>&lt;h1 id="git-log-列出时间段内容">git log 列出时间段内容&lt;/h1>
&lt;p>导出2024全年内容到文本： &lt;code>git log --since=&amp;quot;2024-01-01&amp;quot; --until=&amp;quot;2024-12-30&amp;quot; --pretty=format:&amp;quot;%h - %an, %ad : %s&amp;quot; --date=iso &amp;gt; commits_2024.txt&lt;/code>&lt;/p>
&lt;h1 id="讲这个文件加入单独的知识库中">讲这个文件加入单独的知识库中&lt;/h1>
&lt;p>此处使用&lt;a href="">cherry studio&lt;/a>进行知识库添加操作。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/02/19/t9unavDreIF3q8h.png" alt="">&lt;/p>
&lt;p>但文件直接加入，模型我选的 &lt;code>baai/bge-m3&lt;/code>。&lt;/p>
&lt;h1 id="使用模型对导出的内容进行处理">使用模型对导出的内容进行处理&lt;/h1>
&lt;p>&lt;code>请根据提供的gitcommitlog进行总结。 总结的内容是2024年1月1日至2024年12月31日一共开发多少新功能，主要功能名称是什么，修复或优化多少功能点其中调整优化次数多的top3。&lt;/code>&lt;/p>
&lt;p>总结内容如下：
&lt;img src="https://s2.loli.net/2025/02/19/G586pqHcAFCornu.png" alt="">&lt;/p>
&lt;p>通过总结，我们可以将此段内容加入总结中或者用来PPT内容的中。&lt;/p></description></item><item><title>观《李继刚：当我们说「提示词」时，到底在说什么？》所感</title><link>https://blog.51ai.vip/posts/%E8%A7%82%E6%9D%8E%E7%BB%A7%E5%88%9A%E5%BD%93%E6%88%91%E4%BB%AC%E8%AF%B4%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%97%B6%E5%88%B0%E5%BA%95%E5%9C%A8%E8%AF%B4%E4%BB%80%E4%B9%88%E6%89%80%E6%84%9F/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E8%A7%82%E6%9D%8E%E7%BB%A7%E5%88%9A%E5%BD%93%E6%88%91%E4%BB%AC%E8%AF%B4%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%97%B6%E5%88%B0%E5%BA%95%E5%9C%A8%E8%AF%B4%E4%BB%80%E4%B9%88%E6%89%80%E6%84%9F/</guid><description>&lt;p>文中看到一两句觉得不错的话:&lt;/p>
&lt;blockquote>
&lt;p>能让提示词产生惊艳效果的往往是，让模型不按照训练时候的权重、参数结构等既定的默认路径输出，人类的提示词要能唤醒模型与之『共振』。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>AI 来了。……人类的宇宙是什么？是我脑海中的认知宇宙。AI 的宇宙是什么？是参数宇宙。现在这两个宇宙要产生交流，这个交流的宇宙语，我们把它定义为提示词。&lt;/p>&lt;/blockquote>
&lt;p>我没有美丽的词汇去描述那些,正巧前几天看到有话题再提这个. 也看到不少佬友跟帖在说是与非.&lt;/p>
&lt;p>别人怎么看都是别人的,我要考虑是对方是否说明什么,我能理解到什么地步.我要学习那些内容.&lt;/p>
&lt;p>有些好的 提示词、提示片段就是能达到一定预期.这说明效果是有的,但也别像短视频那种傻吹就好. 各厂家也在发布模型的prompt文档内容.&lt;/p>
&lt;p>从中我想到自己记住的几句:&lt;/p>
&lt;p>*「万物本虚，万法本无，得虚无之窍者，知法术之要乎！」&lt;/p>
&lt;p>*「法本无祖，术本无状，师之于心，得之于象。」&lt;/p>
&lt;p>原文: &lt;a href="https://mp.weixin.qq.com/s/c4RRQP7UfdgZiVDvaN4LwA">https://mp.weixin.qq.com/s/c4RRQP7UfdgZiVDvaN4LwA&lt;/a>&lt;/p></description></item><item><title>11.19日记</title><link>https://blog.51ai.vip/posts/11.19%E6%97%A5%E8%AE%B0/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/11.19%E6%97%A5%E8%AE%B0/</guid><description>&lt;p>&lt;img src="https://s2.loli.net/2024/11/22/bV25J43Bxa8XfkP.png" alt="">&lt;/p>
&lt;p>因为针灸，我需要下班后吃完饭再去。然而，针灸附近不仅没什么好吃的，连炒菜都没有。每次下班，我习惯去老乡鸡，选菜简单，通常是西红柿鸡蛋加上其他随意的搭配。今天写这段笔记是因为我又见到了她。几乎每次去都能遇见她，不免让我注意到她的存在。&lt;/p>
&lt;p>我发现她吃饭时总是很忙活。每当我都已经吃完，她还在餐区来回穿梭，拿这个拿那个。我不禁疑惑，她是不是有什么问题？转念一想，嗐，我自己没病也不会在这儿吃饭了。或许，每个人心里都有那么一点点小问题吧。&lt;/p></description></item><item><title>Obsidian插件使用</title><link>https://blog.51ai.vip/posts/obsidian%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/obsidian%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="场景">场景&lt;/h1>
&lt;p>一直使用Obsidian进行记录内容,网页上很多内容觉得不错想摘录一下. 之前使用过的内容是简悦和一个Safari的脚本.&lt;/p>
&lt;p>前阵子看到有人分享Obsidian的插件,装上一直没用,本周体验完记录一下.&lt;/p>
&lt;p>本次记录时演示的浏览器是 &lt;code>zen browser&lt;/code> .&lt;/p>
&lt;h1 id="安装插件">安装插件&lt;/h1>
&lt;p>下面是支持浏览器的地址:&lt;/p>
&lt;p>&lt;a href="https://chromewebstore.google.com/detail/obsidian-web-clipper/cnjifjpddelmedmihgijeibhnjfabmlf">hrome Web Store&lt;/a> for Chrome, Brave, Edge, Arc, Orion, and other Chromium-based browsers.&lt;/p>
&lt;p>&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/web-clipper-obsidian/">Firefox Add-Ons&lt;/a> for Firefox and Firefox Mobile.&lt;/p>
&lt;p>&lt;a href="https://apps.apple.com/us/app/obsidian-web-clipper/id6720708363">Safari Extensions&lt;/a> for macOS, iOS, and iPadOS.&lt;/p>
&lt;h1 id="使用">使用&lt;/h1>
&lt;p>安装完再浏览器上可以看到插件图标.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/NUjCu9ZJ2rwm7LT.png" alt="">&lt;/p>
&lt;p>在使用之前我们先进行一些配置,点击图标后点击设置按钮:&lt;/p>
&lt;h2 id="基本设置">基本设置&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/BTVvyZdahUwWQSF.png" alt="">&lt;/p>
&lt;p>基本设置中,最需要设置的是 Vaults 目录,可以配置一个或多个,当在插件上保存时可以切换不同的 Vault 进行保存.&lt;/p>
&lt;p>输入Vault名字,回车添加.&lt;/p>
&lt;h2 id="属性配置">属性配置&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/69vpVCsSYlARt1q.png" alt="">&lt;/p>
&lt;p>属性我没有调整,使用的默认值.等需要进阶或者修改时候再考虑.&lt;/p>
&lt;h2 id="荧光笔配置">荧光笔配置&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/1GdZfazujbJRBCD.png" alt="">&lt;/p>
&lt;p>荧光笔目前用起来不是很好用. 他能给网页进行高亮,通知在配置时是否显示,已经再导出内容是,是否用高亮的内容替换原文.&lt;/p>
&lt;p>白话就是仅导出高亮内容.看你选择,我选择默认替换原文.&lt;/p>
&lt;h2 id="模版配置">模版配置&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/X5tsYpaM3GK7WLV.png" alt="">&lt;/p>
&lt;p>模版我修改的地方不多,我仅把Vault设置了默认的名字,没有选择LastUsed. 如果多个库可以用lastUsed更合适.&lt;/p>
&lt;p>模版有一处配置会影响导出结果:&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/kfPMwS8hQOURaXJ.png" alt="">&lt;/p>
&lt;p>默认是创建新文件. 如果需要进行同名称追加和日记可以自行选择测试.&lt;/p>
&lt;h1 id="导出测试">导出测试&lt;/h1>
&lt;p>插件图标上也有些按钮,下面进行简单介绍:&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/11/01/93d1LTeYuZv5mjQ.png" alt="">&lt;/p>
&lt;p>在Add to obsidian 按钮上面是选择输出的&lt;code>vault&lt;/code>,后面的输入是指定输出目录, 默认是&lt;strong>Clippings&lt;/strong> .&lt;/p></description></item><item><title>zabbix6.0+docker-compose部署</title><link>https://blog.51ai.vip/posts/zabbix6.0docker-compose%E9%83%A8%E7%BD%B2/</link><pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/zabbix6.0docker-compose%E9%83%A8%E7%BD%B2/</guid><description>&lt;p>zabbix6.0 已是新LTS版本。根据zabbix-docker上的trunk版本来搭建zabbix6.0。&lt;/p>
&lt;p>根据踩坑，记录docker-compose 执行后遇到的一些问题。&lt;/p>
&lt;h2 id="zabbix-60-lts已发布">zabbix 6.0 LTS已发布&lt;/h2>
&lt;p>本文中的镜像为当时为zabbix6.0预发布版本（trunk）。目前zabbix6.0LTS版本已发布。
请结合 &lt;a href="https://hub.docker.com/u/zabbix">官方镜像&lt;/a>&lt;/p>
&lt;h2 id="部署">部署&lt;/h2>
&lt;p>主机安装好docker、docker-compose。&lt;/p>
&lt;p>文件包含:&lt;a href="https://url21.ctfile.com/f/2802921-534381915-0158c8">env_vars&lt;/a> ,&lt;/p>
&lt;p>&lt;a href="https://url21.ctfile.com/f/2802921-534383227-cb4ab7">docker-compose.yml&lt;/a>。&lt;/p>
&lt;p>&lt;em>密码6387&lt;/em>&lt;/p>
&lt;p>下载完成后解压到同一目录， 并执行&lt;code>docker-compose up -d&lt;/code>&lt;/p>
&lt;p>这时候可以看到各服务拉取镜像并启动。&lt;/p>
&lt;h2 id="docker-compose-文件内容">docker-compose 文件内容&lt;/h2>
&lt;pre tabindex="0">&lt;code>version: &amp;#39;3.5&amp;#39;
services:
 m-server:
 container_name: m-server
 image: zabbix/zabbix-server-mysql:alpine-trunk
 restart: always
 ports:
 - &amp;#34;10051:10051&amp;#34;
 volumes:
 - /etc/localtime:/etc/localtime:ro
 - /etc/timezone:/etc/timezone:ro
 - ./zbx_env/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro
 - ./zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
 - ./zbx_env/var/lib/zabbix/export:/var/lib/zabbix/export:rw
 - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
 - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
 - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
 - ./zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro
 env_file:
 - ./env_vars/.env_db_mysql
 - ./env_vars/.env_srv
 secrets:
 - MYSQL_USER
 - MYSQL_PASSWORD
 - MYSQL_ROOT_PASSWORD
 # - client-key.pem
 # - client-cert.pem
 # - root-ca.pem
 depends_on:
 - mysql-server
 networks:
 zbx_net_backend:
 aliases:
 - m-erver
 - m-server-mysql
 - m-server-alpine-mysql
 - m-server-mysql-alpine
 zbx_net_frontend: null
 # devices:
 # - &amp;#34;/dev/ttyUSB0:/dev/ttyUSB0&amp;#34;
 stop_grace_period: 30s
 sysctls:
 - net.ipv4.ip_local_port_range=1024 65000
 - net.ipv4.conf.all.accept_redirects=0
 - net.ipv4.conf.all.secure_redirects=0
 - net.ipv4.conf.all.send_redirects=0
 labels:
 com.zabbix.description: &amp;#34;Zabbix server with MySQL database support&amp;#34;
 com.zabbix.company: &amp;#34;Zabbix LLC&amp;#34;
 com.zabbix.component: &amp;#34;m-server&amp;#34;
 com.zabbix.dbtype: &amp;#34;mysql&amp;#34;
 com.zabbix.os: &amp;#34;alpine&amp;#34;
 m-web-nginx-mysql:
 container_name: m-web-nginx-mysql
 # image: zabbix/zabbix-web-nginx-mysql:alpine-trunk
 image: chenwl2016/m-web-nginx-mysql:v1-alpine-trunk
 ports:
 - &amp;#34;8082:8080&amp;#34;
 - &amp;#34;8443:8443&amp;#34;
 volumes:
 - /etc/localtime:/etc/localtime:ro
 - /etc/timezone:/etc/timezone:ro
 - ./zbx_env/etc/ssl/nginx:/etc/ssl/nginx:ro
 - ./zbx_env/usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro
 env_file:
 - ./env_vars/.env_db_mysql
 - ./env_vars/.env_web
 secrets:
 - MYSQL_USER
 - MYSQL_PASSWORD
 # - client-key.pem
 # - client-cert.pem
 # - root-ca.pem
 depends_on:
 - mysql-server
 - m-server
 healthcheck:
 test: [ &amp;#34;CMD&amp;#34;, &amp;#34;curl&amp;#34;, &amp;#34;-f&amp;#34;, &amp;#34;http://localhost:8080/&amp;#34; ]
 interval: 10s
 timeout: 5s
 retries: 3
 start_period: 30s
 networks:
 zbx_net_backend:
 aliases:
 - m-web-nginx-mysql
 - m-web-nginx-alpine-mysql
 - m-web-nginx-mysql-alpine
 zbx_net_frontend: null
 stop_grace_period: 10s
 sysctls:
 - net.core.somaxconn=65535
 labels:
 com.zabbix.description: &amp;#34;Zabbix frontend on Nginx web-server with MySQL database support&amp;#34;
 com.zabbix.company: &amp;#34;Zabbix LLC&amp;#34;
 com.zabbix.component: &amp;#34;m-frontend&amp;#34;
 com.zabbix.webserver: &amp;#34;nginx&amp;#34;
 com.zabbix.dbtype: &amp;#34;mysql&amp;#34;
 com.zabbix.os: &amp;#34;alpine&amp;#34;
 m-agent:
 container_name: m-agent
 image: zabbix/zabbix-agent:alpine-trunk
 restart: always
 ports:
 - &amp;#34;10050:10050&amp;#34;
 volumes:
 - /etc/localtime:/etc/localtime:ro
 - /etc/timezone:/etc/timezone:ro
 - ./zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
 - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
 - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
 - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
 env_file:
 - ./env_vars/.env_agent
 privileged: true
 pid: &amp;#34;host&amp;#34;
 networks:
 zbx_net_backend:
 aliases:
 - zabbix-agent
 - zabbix-agent-passive
 - zabbix-agent-alpine
 stop_grace_period: 5s
 labels:
 com.zabbix.description: &amp;#34;Zabbix agent&amp;#34;
 com.zabbix.company: &amp;#34;Zabbix LLC&amp;#34;
 com.zabbix.component: &amp;#34;zabbix-agentd&amp;#34;
 com.zabbix.os: &amp;#34;alpine&amp;#34;
 mysql-server:
 container_name: mysql-server
 image: mysql:8.0
 restart: always
 security_opt:
 - seccomp:unconfined
 ports:
 - &amp;#34;3316:3306&amp;#34;
 command:
 - mysqld
 - --character-set-client=utf8mb4
 - --character-set-connection=utf8mb4
 - --character-set-results=utf8mb4
 - --character-set-server=utf8mb4
 - --collation-server=utf8mb4_bin
 - --default-authentication-plugin=mysql_native_password
 # - --require-secure-transport
 # - --ssl-ca=/run/secrets/root-ca.pem
 # - --ssl-cert=/run/secrets/server-cert.pem
 # - --ssl-key=/run/secrets/server-key.pem
 volumes:
 - ./zbx_env/var/lib/mysql:/var/lib/mysql:rw
 env_file:
 - ./env_vars/.env_db_mysql
 secrets:
 - MYSQL_USER
 - MYSQL_PASSWORD
 - MYSQL_ROOT_PASSWORD
 # - server-key.pem
 # - server-cert.pem
 # - root-ca.pem
 stop_grace_period: 1m
 networks:
 zbx_net_backend:
 aliases:
 - mysql-server
 - m-database
 - mysql-database
 db_data_mysql:
 image: busybox
 volumes:
 - ./zbx_env/var/lib/mysql:/var/lib/mysql:rw

networks:
 zbx_net_frontend:
 driver: bridge
 driver_opts:
 com.docker.network.enable_ipv6: &amp;#34;false&amp;#34;
 ipam:
 driver: default
 config:
 - subnet: 172.16.238.0/24
 zbx_net_backend:
 driver: bridge
 driver_opts:
 com.docker.network.enable_ipv6: &amp;#34;false&amp;#34;
 internal: true
 ipam:
 driver: default
 config:
 - subnet: 172.16.239.0/24
secrets:
 MYSQL_USER:
 file: ./env_vars/.MYSQL_USER
 MYSQL_PASSWORD:
 file: ./env_vars/.MYSQL_PASSWORD
 MYSQL_ROOT_PASSWORD:
 file: ./env_vars/.MYSQL_ROOT_PASSWORD

# client-key.pem:
# file: ./env_vars/.ZBX_DB_KEY_FILE
# client-cert.pem:
# file: ./env_vars/.ZBX_DB_CERT_FILE
# root-ca.pem:
# file: ./env_vars/.ZBX_DB_CA_FILE
# server-cert.pem:
# file: ./env_vars/.DB_CERT_FILE
# server-key.pem:
# file: ./env_vars/.DB_KEY_FILE
&lt;/code>&lt;/pre>&lt;p>其中有基础更改，主要是使用的镜像非zabbix镜像。数据库考虑暴露3316端口（但是这里没有成功）
使用非官方容器的目的是遇到一些情况。&lt;/p></description></item><item><title>Arc Search小记</title><link>https://blog.51ai.vip/posts/arc-search%E5%B0%8F%E8%AE%B0/</link><pubDate>Sat, 19 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/arc-search%E5%B0%8F%E8%AE%B0/</guid><description>&lt;h1 id="起因">起因&lt;/h1>
&lt;p>由于safari访问论坛或者网页提示版本低,所以就升级了iOS系统.
升级到了iOS17.7,舍弃了巨魔老弟啊. 拥抱一些之前装不上的APP.&lt;/p>
&lt;h1 id="基本功能介绍">基本功能介绍&lt;/h1>
&lt;p>在macOS上已经使用了几个月的arc浏览器了,之前在手机安装过一个arc手机版除了能同步标签好像没啥新鲜玩意儿就卸载了.&lt;/p>
&lt;p>现在新的 Arc Search有一些新功能.下面简单记录一下.&lt;/p>
&lt;h2 id="界面很简约">界面很简约&lt;/h2>
&lt;p>🎬: &lt;a href="https://watch.wave.video/Z84ahCqYM5UO97hl">https://watch.wave.video/Z84ahCqYM5UO97hl&lt;/a>&lt;/p>
&lt;p>打开App后很简约,上面有个大大的logo. 这玩意儿可以拖拽,旋转.拿来解闷的吗?
底部三个按钮,左侧是同步的电脑标签(提前已经登陆与电脑版账号).中间➕号快速启动,长按这个可以呼出arc那个小助手.右侧是设置按钮.&lt;/p>
&lt;p>底栏上划和➕号功能一样.&lt;/p>
&lt;p>输入右侧支持语音助手和快速切换隐私模式👀. 这个👀切换相当丝滑.&lt;/p>
&lt;p>这个页面可以pin一些常用的网页.便于快速打开. 最顶部的搜索输入默认是走搜索引擎,输入的同时下面会有提示,这些提示功能是通过AI帮你返回搜索信息内容.&lt;/p>
&lt;h2 id="网页总结">网页总结&lt;/h2>
&lt;p>🎬: &lt;a href="https://watch.wave.video/wjieIYr66NLni9YG">https://watch.wave.video/wjieIYr66NLni9YG&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/10/21/z8bCDf1pVjEI6KU.png" alt="">&lt;/p>
&lt;p>网页总结有一个手势,双指捏合网页缩小后开始总结.&lt;/p>
&lt;h2 id="pin">Pin&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/10/21/EqzNLCnTQvxm3Vi.jpg" alt="">&lt;/p>
&lt;p>和PC功能一样,支持pin到pc同步的空间.第一个&lt;code>Favorite in App&lt;/code> 是钉在App的启动页上,当点击下栏+号或者上划是能看到钉的链接.&lt;/p>
&lt;h2 id="翻译">翻译&lt;/h2>
&lt;p>🎬: &lt;a href="https://watch.wave.video/wLN3YbdOkwouKosc">https://watch.wave.video/wLN3YbdOkwouKosc&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/10/21/aEqjQkBb3pT7JDs.png" alt="">&lt;/p>
&lt;p>翻译和chrome体验是类似的,可能就是一个功能.我不清楚,单我发现一个不错的看书方式,就是之前提到过的Flow加载书,用它来翻译.有个缺点是字体颜色不知道为什么会变色. 翻译速度挺快的.&lt;/p>
&lt;h2 id="设置">设置&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/10/21/Fz1jbEVpcX2AfHg.png" alt="">&lt;/p>
&lt;p>其他设置中有个 &lt;code>Raise to Call Arc&lt;/code> 这个功能有点意思,当你打开arc,拿起手机像打电话一样可以呼出来助手,你说话它去处理(播放🎵),最后播放处理结果.&lt;/p>
&lt;h2 id="站点设置">站点设置&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/10/21/IO5T8t4eivjCDNB.jpg" alt="">&lt;/p>
&lt;p>广告,禁提示cookie,禁止跟踪这些默认开启.&lt;/p>
&lt;h2 id="ui交互">UI交互&lt;/h2>
&lt;p>🎬: &lt;a href="https://watch.wave.video/0u8ckdJkSUejvaPc">https://watch.wave.video/0u8ckdJkSUejvaPc&lt;/a>&lt;/p>
&lt;p>底栏左侧按钮上划时快速切换打开的网页,点击打开打开页面的预览,上划关闭网页.长按打开PC同步的&lt;code>space&lt;/code>内容.&lt;/p>
&lt;p>大概就这些,感谢浏览.&lt;/p>
&lt;p>完结
祝好&lt;/p></description></item><item><title>Snapbox</title><link>https://blog.51ai.vip/posts/snapbox/</link><pubDate>Sat, 14 Sep 2024 10:42:26 +0800</pubDate><guid>https://blog.51ai.vip/posts/snapbox/</guid><description>&lt;h1 id="一款macos的app">一款macOS的APP&lt;/h1>
&lt;p>app网站 : &lt;a href="https://snapbox.app/">https://snapbox.app/&lt;/a>&lt;/p>
&lt;p>我在&lt;a href="https://www.v2ex.com/t/1062087">v2ex&lt;/a>上看到此贴.&lt;/p>
&lt;p>作者3.5天的时间通过Claude 3.5 Sonnet协助开发的macOS App.需要M系列芯片的设备.&lt;/p>
&lt;p>看起来像是&lt;code>spotlight&lt;/code>,&lt;code>raycast&lt;/code>这种工具的方式启动,调出后实现与AI的一系列操作.
比如翻译、对话、优化内容等工作.&lt;/p>
&lt;p>支持ollama和服务提供商API.&lt;/p>
&lt;p>配置内容简单,支持prompt.&lt;/p>
&lt;h1 id="接入配置">接入配置&lt;/h1>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/14/z83RnpaOZh56Hwu.png" alt="">&lt;/p>
&lt;p>呼出主界面时,进入 &lt;code>settings&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/14/CpLyGafc6xA7eRm.png" alt="">&lt;/p>
&lt;p>设置界面中的 &lt;strong>SELECT PROVIDER&lt;/strong>中选择模型的厂商.&lt;/p>
&lt;p>我这里配置过&lt;code>Ollama&lt;/code>和&lt;code>Custom Endpoint&lt;/code>.&lt;code>Custom Endpoint&lt;/code>我选择了 &lt;strong>siliconflow&lt;/strong>.&lt;/p>
&lt;p>配置时,输入完 &lt;strong>CUSTOM ENDPOINT URL&lt;/strong> 和 ** CUSTOM ENDPOINT API KEY**后可以获取模型.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/14/itNTZsmAGuX17Ik.png" alt="">&lt;/p>
&lt;p>勾选自己使用的模型名字即可.如果API服务商不支持获取可以自己点击&lt;code>+&lt;/code>号添加.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/14/Gmbf93cek286JBT.png" alt="">&lt;/p>
&lt;h1 id="功能演示">功能演示&lt;/h1>
&lt;p>我觉得此软件的特色是:&lt;/p>
&lt;p>此软件支持全局快捷键,呼出程序,快捷进入某特定prompt等.&lt;/p>
&lt;p>选择文字后会被程序捕获. 免去了复制粘贴.&lt;/p>
&lt;ul>
&lt;li>常规对话&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/14/jAsTeFm9kKUSqGV.png" alt="">&lt;/p>
&lt;p>复制粘贴、打字与AI交互. 快捷上支持重新生成、继续、继续输入.&lt;/p>
&lt;p>放个视频演示:&lt;/p>
&lt;p>&lt;a href="https://watch.wave.video/6UP7usIlnYJ9vC0B">https://watch.wave.video/6UP7usIlnYJ9vC0B&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Reactor 模式&lt;/li>
&lt;/ul>
&lt;p>此模式是监听你的指针选择,剪切板内容.快速响应.&lt;/p>
&lt;p>放个视频演示:&lt;/p>
&lt;p>&lt;a href="https://watch.wave.video/KRjgWJQ5nJmSj0yX">https://watch.wave.video/KRjgWJQ5nJmSj0yX&lt;/a>&lt;/p>
&lt;h1 id="最后">最后&lt;/h1>
&lt;p>看到作者仅用几天时间借助大模型开发出一个功能丰富的app，令人惊叹。&lt;/p>
&lt;p>既体现了大模型的强大能力，也展示了作者高超的开发技巧和创新思维。&lt;/p>
&lt;p>反思自己也在日常工作中尝试利用AI模型来优化脚本编写和项目代码调整，确实感受到了效率的提升。&lt;/p>
&lt;p>展望未来，AI辅助开发很可能成为主流趋势。but我们仍需谨慎对待，在享受AI带来便利的同时，也要注意培养自身解决问题的能力，而不是过度依赖AI。&lt;/p>
&lt;p>完结~
感谢观看&lt;/p></description></item><item><title>Arc</title><link>https://blog.51ai.vip/posts/arc/</link><pubDate>Fri, 13 Sep 2024 14:23:51 +0800</pubDate><guid>https://blog.51ai.vip/posts/arc/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>使用arc浏览器作为主力之前,更喜欢chrome.&lt;/p>
&lt;p>也考虑edge替代朴素的chrome.事与愿违,在后面使用中edge变越越来越不喜欢的东西.&lt;/p>
&lt;p>加入了很多我不喜欢、不去用的功能展示在界面上. 后面我就没继续使用了,不评价edge的好坏.我不喜欢用它.&lt;/p>
&lt;p>后面看到arc,也是简单尝试了一下,后面我觉得不错的菜就换成了主力.&lt;/p>
&lt;h1 id="喜欢的功能">喜欢的功能&lt;/h1>
&lt;p>下面我介绍一下我使用这个arc浏览器喜欢的点.&lt;/p>
&lt;h2 id="space">space&lt;/h2>
&lt;p>在每个Space可放不同的标签,做到了管理和分类. 同时还可以定制颜色,样式.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/hU8qgeYufw4FO1Z.png" alt="">&lt;/p>
&lt;p>可以根据不同账号(profile)分配不同的&lt;strong>会话信息&lt;/strong>. 也就是一个浏览器不同space区分账号.满足挂小号、测试等需要多身份在同一个浏览器访问.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/HP3ZGCYNQDEjoFe.png" alt="">&lt;/p>
&lt;p>如上图,我新建了一个along的profile,创建了一个space.
在访问linux.do时,如图.如果我有小号就可以这么搞拉.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/VGZ7zqwAcmxr5kR.png" alt="">&lt;/p>
&lt;h2 id="easel">Easel&lt;/h2>
&lt;p>我用这个功能很简单,就是看下动态信息.
比如你想一些动态信息,但又不需要整个页面,是不是想把局部拿出来. 白板可以的,你截取某网页部分放到白板里,开启就可以实现.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/olkLjYzgICXZR5y.png" alt="">
&lt;img src="https://s2.loli.net/2024/09/13/dAZMsg9fh7xcSXW.png" alt="">&lt;/p>
&lt;p>上面是我自己创建的两个页面. 这俩一个是没事看看模型排行. 另一个是关注自己的其他信息.&lt;/p>
&lt;p>可能图片不能直观解释这个用途.放个动图,看那个时间的变化:&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/l8gcuOXb7v2QU3B.gif" alt="">&lt;/p>
&lt;p>当我想看周刊我就直接在这里点就好了,不需要单独打开此网站去查看这个列表,美滋滋.&lt;/p>
&lt;p>我能想到画架的用途还有: 头脑风暴、协作、笔记、可视化信息、素材灵感搜集、整理内容、组织结构.&lt;/p>
&lt;p>这些做完可以分享.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/hjCG9XRnslwztSo.png" alt="">&lt;/p>
&lt;h2 id="boost">Boost&lt;/h2>
&lt;p>这个功能可更改网页一些元素的颜色，字体类型、字体大小等.
还是以佬友为例:&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/XScBNmgVJFWzdUC.png" alt="">&lt;/p>
&lt;p>主题是默认,我通过boost功能将颜色、字体、英文文字是蛇形、全大写、全小写的配置来自定义一下.&lt;/p>
&lt;p>boost中我最喜欢的是zap.
可以隐藏掉自己不喜欢的页面元素.&lt;/p>
&lt;p>继续以佬友为例:
点击zap后,可以选择页面元素.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/Ahv7iQMr49Dd1Vt.png" alt="">&lt;/p>
&lt;p>当选择元素后点击 zap this 就可以干掉他.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/F3lUHbRMhV8qmcD.png" alt="">&lt;/p>
&lt;p>这是隐藏掉一些页面元素后的样子.&lt;/p>
&lt;h2 id="favorite">Favorite&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/UoHBwWDEJAt1ZQP.png" alt="">&lt;/p>
&lt;p>这是左上角那部分内容,做多可以放12个块.块支持split的组合tab.特定适配过的还有奇效,比如gmail、outlook、slack等等等. 我把常用的网站放在这里,佬友有消息提示,这icon上会有标记的.以便我打开查看消息.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/tBoPcZLpj1lVADx.png" alt="">&lt;/p>
&lt;h2 id="split">Split&lt;/h2>
&lt;p>通过简单拖拽,可实现tab的分屏.
新打开一个网页想和当前tab做分屏,点击链接时按住&lt;code>option&lt;/code>就实现了分屏.&lt;/p>
&lt;p>能分能拆,用起来体验不错.但有一点不太好,就是在分屏中关闭的tab就没了.只能重新pinned.&lt;/p>
&lt;h2 id="搜索">搜索&lt;/h2>
&lt;p>默认地址栏输入内容能搜索,或者自己访问搜索引擎.&lt;/p>
&lt;p>我更喜欢在&lt;code>command + T&lt;/code> 弹出来的对话框里进行搜索. 他像 &lt;code>raycast&lt;/code> 功能那样快捷搜索.&lt;/p>
&lt;p>GitHub:&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/09/13/aQN8Z9GPMEFWfnY.gif" alt="">&lt;/p>
&lt;p>linux.do:&lt;/p></description></item><item><title>LLM_fine Tuning</title><link>https://blog.51ai.vip/posts/llm_fine-tuning/</link><pubDate>Thu, 15 Aug 2024 13:39:15 +0800</pubDate><guid>https://blog.51ai.vip/posts/llm_fine-tuning/</guid><description>&lt;h1 id="微调-fine-tuning">微调 fine-tuning&lt;/h1>
&lt;p>微调是一种监督学习过程,在这个过程中可以使用一组带标签的示例数据来更新LLM的权重.使其为特定任务生成良好完成的能力.&lt;/p>
&lt;p>指令微调特别擅长提高模型在各种任务中的性能.
&lt;img src="https://s2.loli.net/2024/08/15/zdjLFeb17cpSwvO.png" alt="image.png">&lt;/p>
&lt;p>比如想让模型翻译能力增强,那就给他一些示例是包括翻译这句话之类的说明.即时完成示例允许模型学习生成遵循给定说明的响应.&lt;/p>
&lt;h2 id="微调大致步骤">微调大致步骤&lt;/h2>
&lt;ol>
&lt;li>准备训练数据,需要特定的格式. 也可以通过数据集+模版来处理使其既是模版又是数据集(指令数据集).&lt;/li>
&lt;li>将数据集划分为训练验证和测试.然后使用计算出的损失来更新标准反向传播中的模型权重(standard backpropagation)。多批次重复操作.
&lt;img src="https://s2.loli.net/2024/08/15/NnuGVBHyRJAmeSQ.png" alt="image.png">&lt;/li>
&lt;li>更新完进行最终的性能评估.通过测试得出精度.
&lt;img src="https://s2.loli.net/2024/08/15/7V1TbfgcANhPyk5.png" alt="image.png">&lt;/li>
&lt;li>最终得到一个微调模型(Instruct LLM).
&lt;img src="https://s2.loli.net/2024/08/15/4dINakbHTDw2WRJ.png" alt="image.png">&lt;/li>
&lt;/ol></description></item><item><title>Nightingle夜莺Docker版SNMP监控</title><link>https://blog.51ai.vip/posts/nightingle%E5%A4%9C%E8%8E%BAdocker%E7%89%88snmp%E7%9B%91%E6%8E%A7/</link><pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/nightingle%E5%A4%9C%E8%8E%BAdocker%E7%89%88snmp%E7%9B%91%E6%8E%A7/</guid><description>&lt;h2 id="起因">起因&lt;/h2>
&lt;p>对夜莺很感兴趣，想使用一下。我看官方提供了v6版本的docker-compose。而且我之前有使用过promtheus和grafana，虽然很好但是总觉得还是得二开。总有一天有人去搞一个不错的玩意儿出来。&lt;a href="https://flashcat.cloud/docs/">官方文档地址&lt;/a>&lt;/p>
&lt;h2 id="安装与配置">安装与配置&lt;/h2>
&lt;p>直接运行docker版本的demo，启动后，我发现有prometheus和categraf。但我想根据官方文档使用VictoriaMetrics单机版本。&lt;/p>
&lt;h3 id="使用victoriametrics">使用VictoriaMetrics&lt;/h3>
&lt;p>我在compose中去掉了prometheus，然后在主机安装了VictoriaMetrics。我没用在compose中添加，我懒改了。直接看官当文档多香。&lt;/p>
&lt;p>后面启动后修改数据源：
&lt;img src="https://img-blog.csdnimg.cn/img_convert/13af579a7f90bfb9a5d197de818b08ab.png" alt="ZviA7j7">&lt;/p>
&lt;p>添加好数据源后，看下是否正常：
时序指标随便敲敲看有没指标
&lt;img src="https://img-blog.csdnimg.cn/img_convert/3cb79c47b991fef817056f3dc5bab48c.png" alt="WxPg5Rs">
看到有指标我很自信的说成了。&lt;/p>
&lt;p>后面我加了两个Ping，发现可以没问题的。&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/img_convert/60fd758e67e9dc0fd712bae376735e00.png" alt="JoY5v64">
使用内置的展示仪表盘美滋滋。&lt;/p>
&lt;h3 id="snmp部分">SNMP部分&lt;/h3>
&lt;p>之后我想测试SNMP部分，这是我工作需要的内容。&lt;/p>
&lt;p>首先默认的官方demo没有提供相关categraf插件配置。他的插件都是在github上面的。下载一份放到demo的categraf/conf目录下。
我的路径： &lt;code>home/xxx/nightingate/docker/categraf/conf&lt;/code>&lt;/p>
&lt;p>我这里用到snmp， 就拷贝input.snmp 这个目录到上面路径内。&lt;/p>
&lt;p>进入这个&lt;code>input.snmp&lt;/code>,里面有两个文件,一个 &lt;code>snmp.toml&lt;/code>另一个是&lt;code>snmp.toml.example&lt;/code> 。实际使用的是第一个，在里面编辑内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[[&lt;span style="color:#a6e22e">instances&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">agents&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;udp://10.10.10.2:161&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">timeout&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;5s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">version&lt;/span> = &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;/usr/share/snmp/mibs&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">community&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">agent_host_tag&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;switch&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">retries&lt;/span> = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[[&lt;span style="color:#a6e22e">instances&lt;/span>.&lt;span style="color:#a6e22e">field&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">oid&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;.1.3.6.1.2.1.1.3.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;uptime&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[[&lt;span style="color:#a6e22e">instances&lt;/span>.&lt;span style="color:#a6e22e">field&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">oid&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;.1.3.6.1.2.1.1.5.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;source&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">is_tag&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[[&lt;span style="color:#a6e22e">instances&lt;/span>.&lt;span style="color:#a6e22e">table&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">oid&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;IF-MIB::ifTable&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;interface&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">inherit_tags&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;source&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">index_as_tag&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">include_filter&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;ifIndex:2&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;ifIndex:4&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[[&lt;span style="color:#a6e22e">instances&lt;/span>.&lt;span style="color:#a6e22e">table&lt;/span>.&lt;span style="color:#a6e22e">field&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">oid&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;IF-MIB::ifDescr&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ifDescr&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">is_tag&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[[&lt;span style="color:#a6e22e">instances&lt;/span>.&lt;span style="color:#a6e22e">table&lt;/span>.&lt;span style="color:#a6e22e">field&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">oid&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;IF-MIB::ifPhysAddress&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ifPhysAddress&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">is_tag&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="遇到问题">遇到问题&lt;/h3>
&lt;p>保存重启categraf后，我只看到了一个指标&lt;code>snmp_uptime&lt;/code>。我单独取&lt;code>uptime&lt;/code>这个是有的，就好像没办法执行&lt;code>snmpwalk&lt;/code> 只能搞&lt;code>snmpget&lt;/code>。&lt;/p></description></item><item><title>Roadmap&amp;Go</title><link>https://blog.51ai.vip/posts/roadmapgo/</link><pubDate>Mon, 15 May 2023 14:53:11 +0800</pubDate><guid>https://blog.51ai.vip/posts/roadmapgo/</guid><description>&lt;p>技术类的Roadmap（路线图）具有许多好处，下面是其中几个主要的好处：&lt;/p>
&lt;ol>
&lt;li>明确目标：Roadmap可以帮助技术团队明确目标和愿景。它提供了一个清晰的计划，使团队成员知道他们正在朝着什么方向前进，并且可以更好地集中精力和资源。&lt;/li>
&lt;li>规划优先级：Roadmap可以帮助团队确定优先级和时间表。通过将不同的功能、项目和任务安排在时间轴上，团队可以了解何时开始和完成每个任务，从而更好地分配资源和人力。&lt;/li>
&lt;li>沟通和协作：Roadmap是与团队成员、管理层和利益相关者进行沟通和协作的重要工具。它提供了一个共同的视觉框架，帮助各方理解技术发展的方向和计划，从而促进更好的合作和决策制定。&lt;/li>
&lt;li>风险管理：Roadmap有助于识别和管理潜在的风险和挑战。通过在Roadmap中考虑外部因素、技术依赖关系和风险因素，团队可以更好地规划和应对可能的问题，降低项目失败的风险。&lt;/li>
&lt;li>激励和动力：Roadmap可以为团队提供激励和动力。清晰的目标和规划可以激发团队成员的工作热情和投入，使他们感到对项目和组织的价值和重要性。&lt;/li>
&lt;/ol>
&lt;p>我之前保存过&lt;a href="https://github.com/Alikhll/golang-developer-roadmap">GitHub: Alikhll/golang-developer-roadmap&lt;/a>的roadmap。正好在上周末想看看自己找一块内容来学习学习。我发现作者还是2021年的版本，后面也没有更新什么。那我想在obsidian中把这个图复刻一个，然后根据内容去做计划去学习。后来我又想到另一个roadmap也不错。正好两个整合一下。那么就有了一个我魔改的内容。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/IkaIOP6.jpg" alt="IkaIOP6">
此图是通过Obsidian的canvas 功能进行的制作。并且我后面打算通过双链来完成此图中部分内容的笔记。&lt;/p>
&lt;p>此图整体可以看到通过颜色来区分了一些作者划分的知识点优先级，以便确定哪些内容应优先进行。此图我觉得有个遗憾就是没能够持续进行更新。后面还好我找到另一个认为不错的&lt;a href="https://roadmap.sh/">roadmap&lt;/a>进行补充和完善。&lt;/p>
&lt;p>主体还是&lt;a href="https://github.com/Alikhll/golang-developer-roadmap">golang-developer-roadmap&lt;/a>，顺便在前后加入了 &lt;a href="https://roadmap.sh/backend">Backend Developer&lt;/a> ,后面加入了&lt;a href="https://roadmap.sh/full-stack">Full Stack Developer&lt;/a>。 其实还有很多roadmap相关，比如&lt;code>devops&lt;/code>，&lt;code>docker&lt;/code>，&lt;code>Frontend Developer&lt;/code>等等吧都会涉及到一些内容。并且这个&lt;a href="https://roadmap.sh/">roadmap&lt;/a>还可以在图中交互，我觉得不错。&lt;/p>
&lt;p>主要不错地方包含：&lt;/p>
&lt;ol>
&lt;li>可交互。&lt;/li>
&lt;li>此roadmap是持续更新的。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/E4QRa5M.png" alt="E4QRa5M">
比如这个后端内容中，你点击 &lt;code>What is HTTP？&lt;/code> 在右侧弹出内容中，可以看到具体内容，并有相关的链接可以去访问。 最上面还有个状态，可通过状态编辑此内容是否已经达到目的。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/dLk2tVY.png" alt="dLk2tVY">
点击&lt;code>Update Status&lt;/code>后可以看到有三个选项。&lt;/p>
&lt;p>点击&lt;code>Done&lt;/code>之后，图中将做出变化：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/krk3YT0.png" alt="krk3YT0">&lt;/p>
&lt;p>个人认为是个不错的方式。&lt;/p>
&lt;p>个人认为技术类的Roadmap可以帮助团队提高效率、降低风险、改善沟通和协作，并为实现技术目标提供清晰的指导。它是一个重要的管理工具，有助于组织和规划技术团队的工作，使其能够更好地满足业务需求并取得成功。&lt;/p>
&lt;p>完结
祝好
～&lt;/p></description></item><item><title>Colima MacOS最小的设置运行容器运行时,替换Docker Desktop方案</title><link>https://blog.51ai.vip/posts/colima-macos%E6%9C%80%E5%B0%8F%E7%9A%84%E8%AE%BE%E7%BD%AE%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9B%BF%E6%8D%A2docker-desktop%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 07 Apr 2023 19:33:25 +0800</pubDate><guid>https://blog.51ai.vip/posts/colima-macos%E6%9C%80%E5%B0%8F%E7%9A%84%E8%AE%BE%E7%BD%AE%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9B%BF%E6%8D%A2docker-desktop%E6%96%B9%E6%A1%88/</guid><description>&lt;h1 id="colima">Colima&lt;/h1>
&lt;p>&lt;a href="https://github.com/abiosoft/colima">GitHub&lt;/a>&lt;/p>
&lt;p>Colima 是一个轻量级的容器运行时，专门针对开发者在本地环境中运行容器应用。它的目标是提供一种比 Docker Desktop 更简单、更快速、更安全的容器运行时解决方案。&lt;/p>
&lt;p>Colima 基于 Moby 和 LinuxKit 构建，具有以下特点：&lt;/p>
&lt;p>由于它只是一个容器运行时，因此相对于 Docker Desktop，它的安装和启动速度更快，所需的资源更少。
它使用了轻量级的虚拟化技术，例如 HyperKit 和 VPNKit，以提高容器的性能和安全性。
Colima 提供了一组简单的 CLI 命令，使得用户可以轻松地启动、停止、删除容器，以及执行其他常见操作。
它还提供了一些有用的功能，例如在本地浏览器中打开容器中运行的应用程序、自动重启容器等。
总的来说，Colima 是一个轻量级、易于使用的容器运行时，旨在为开发者提供一种更快、更安全的容器环境，使得开发和测试容器应用程序变得更加轻松。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>在 macOS 上安装 Colima 很简单，只需要执行以下几个步骤：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>首先，您需要打开终端并使用 Homebrew 包管理器安装 Colima。如果您没有安装 Homebrew，请先安装 Homebrew：
&lt;code>/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装 Colima：
&lt;code>brew install colima&lt;/code>&lt;/p>
&lt;p>安装完成后，您可以使用 colima 命令来启动 Colima：
&lt;code>colima start&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>如果您想停止 Colima，可以使用以下命令：
&lt;code>colima stop&lt;/code>&lt;/p>
&lt;ul>
&lt;li>要卸载 Colima，请运行以下命令：&lt;/li>
&lt;/ul>
&lt;p>&lt;code>brew uninstall colima&lt;/code>&lt;/p>
&lt;p>安装完成后，您就可以使用 Colima 运行和管理容器应用程序了。&lt;/p>
&lt;h2 id="docker交互">docker交互&lt;/h2>
&lt;p>启动 Colima 后，您可以使用 Docker CLI 与容器交互。在 Colima 中，Docker CLI 已经预先安装了，所以您可以直接使用 &lt;code>docker&lt;/code> 命令来管理容器。&lt;/p></description></item><item><title>Ubuntu22.04安装kubeadm</title><link>https://blog.51ai.vip/posts/ubuntu22.04%E5%AE%89%E8%A3%85kubeadm/</link><pubDate>Wed, 11 Jan 2023 16:30:47 +0800</pubDate><guid>https://blog.51ai.vip/posts/ubuntu22.04%E5%AE%89%E8%A3%85kubeadm/</guid><description>&lt;h1 id="学习k8s">学习k8s&lt;/h1>
&lt;p>学习k8s做笔记，通过kubeadm搭建1master、2node。网络插件：flannel。系统Ubuntu22.04&lt;/p>
&lt;h2 id="系统安装docker">系统安装docker&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/install/ubuntu/">Docker官方手册&lt;/a>&lt;/p>
&lt;p>master、node设备各安装docker、kubelet、 kubeadm、 kubectl。&lt;/p>
&lt;h2 id="为kubeadm准备">为kubeadm准备&lt;/h2>
&lt;p>master、node进行准备工作：&lt;/p>
&lt;ol>
&lt;li>将cgroup处理改成systemd&lt;/li>
&lt;/ol>
&lt;p>nano /etc/docker/daemon.json&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;exec-opts&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;native.cgroupdriver=systemd&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log-driver&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;json-file&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log-opts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;max-size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;100m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;storage-driver&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;overlay2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>sudo systemctl enable docker&lt;/code>
&lt;code>sudo systemctl daemon-reload&lt;/code>
&lt;code>sudo systemctl restart docker&lt;/code>&lt;/p>
&lt;ol start="2">
&lt;li>为了让 Kubernetes 能够检查、转发网络流量，你需要修改 iptables 的配置，启用“br_netfilter”模块&lt;/li>
&lt;/ol>
&lt;p>&lt;code>nano /etc/modules-load.d/k8s.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">br_netfilter&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>nano /etc/sysctl.d/k8s.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">net.bridge.bridge-nf-call-ip6tables&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">net.bridge.bridge-nf-call-iptables&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">net.ipv4.ip_forward&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>sudo sysctl --system&lt;/code>&lt;/p>
&lt;ol start="3">
&lt;li>修改“/etc/fstab”，关闭 Linux 的 swap 分区，提升 Kubernetes 的性能&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sudo swapoff -a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sudo sed -ri &amp;#39;/\sswap\s/s/^#?/#/&amp;#39; /etc/fstab&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装kubeadm">安装kubeadm&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">Kuneadm官方手册&lt;/a>
&lt;strong>在master、node上都需要安装&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>更新 &lt;code>apt&lt;/code> 包索引并安装使用 Kubernetes &lt;code>apt&lt;/code> 仓库所需要的包：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install -y apt-transport-https ca-certificates curl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>(有条件)下载 Google Cloud 公开签名秘钥：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果上面访问不到，可选择其他,例如&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/help/kubernetes/">清华源&lt;/a>提供：
导入gpg key&lt;/p></description></item><item><title>通过minikube部署K8S学习环境</title><link>https://blog.51ai.vip/posts/%E9%80%9A%E8%BF%87minikube%E9%83%A8%E7%BD%B2k8s%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</link><pubDate>Fri, 06 Jan 2023 15:35:43 +0800</pubDate><guid>https://blog.51ai.vip/posts/%E9%80%9A%E8%BF%87minikube%E9%83%A8%E7%BD%B2k8s%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>Minikube 是本地 Kubernetes，专注于让 Kubernetes 易于学习和开发。&lt;/p>
&lt;h1 id="macos部署方式">MacOS部署方式:&lt;/h1>
&lt;p>&lt;a href="https://minikube.sigs.k8s.io/docs/start/">官方教程&lt;/a>&lt;/p>
&lt;p>本次使用的驱动是 parallels驱动。所以本机需要安装此软件。
安装kubectl：&lt;code>brew install kubectl&lt;/code>
安装minikube：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo install minikube-darwin-amd64 /usr/local/bin/minikube
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="通过minikube启动集群">通过minikube启动集群&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>minikube start &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--kubernetes-version&lt;span style="color:#f92672">=&lt;/span>v1.23.9 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--image-mirror-country&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;cn&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--registry-mirror&lt;span style="color:#f92672">=&lt;/span>https://？？？？？.mirror.aliyuncs.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因为是国内，所以&lt;code>--image-mirror-country='cn'&lt;/code>。通过&lt;code>--registry-mirror&lt;/code>为 Docker daemon 配置镜像加速。例如上面是阿里云镜像服务地址。
因为我学习的版本是1.23.x，所以制定了版本&lt;code>--kubernetes-version=v1.23.9&lt;/code>。
默认他读去了驱动配置，识别是&lt;code>parallels&lt;/code>,自己定义方式&lt;code>--driver=hyperkit&lt;/code>。&lt;/p>
&lt;p>安装结果：
&lt;img src="https://s2.loli.net/2023/01/06/C3AFxdiPbq8aIuR.jpg" alt="C3AFxdiPbq8aIuR">&lt;/p>
&lt;p>&lt;em>错误&lt;/em>：
如果存在错误请看具体上面的问题，很多情况都能直观看到提示。其中图标是❗️提示一些问题、💡给你一些建议等等。&lt;/p>
&lt;h4 id="驱动选择">驱动选择：&lt;/h4>
&lt;p>使用docker驱动需要安装docker desktop。其他驱动：virtualbox、vmware、ssh、Hyperkit等。具体详见&lt;a href="https://minikube.sigs.k8s.io/docs/drivers/">drivers page&lt;/a>&lt;/p>
&lt;h3 id="验证结果">验证结果&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>查询minikube状态
&lt;img src="https://s2.loli.net/2023/01/06/otU8LYBjuFeDa31.png" alt="otU8LYBjuFeDa31">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>进入面板
&lt;img src="https://s2.loli.net/2023/01/06/FmrBXOTJ1N2AZgU.png" alt="FmrBXOTJ1N2AZgU">
&lt;img src="https://s2.loli.net/2023/01/06/IPBCwUSx7Fb28Ee.png" alt="IPBCwUSx7Fb28Ee">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kubectl控制
&lt;code>minikube kubectl -- get pods -A&lt;/code>
&lt;img src="https://s2.loli.net/2023/01/06/EziUHcpln27ufeB.png" alt="EziUHcpln27ufeB">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>kubectl在minikube中使用，需要写 &lt;code>nimikune kubectl --&lt;/code>后面加入执行的命令。
macos默认使用的zsh，在zsh加入alias就可以敲的少的了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-zsh" data-lang="zsh">&lt;span style="display:flex;">&lt;span>vi ~/.zshrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#加入一行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias kubectl&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;minikube kubectl --&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>再创建一个Pod
创建：
&lt;code>kubectl run nginx --image=nginx:alpine&lt;/code>
查询：
&lt;code>kubectl get pods nginx&lt;/code>
详情：
&lt;code>kubectl describe pods nginx&lt;/code>
&lt;img src="https://s2.loli.net/2023/01/06/pYPqIgt84LzBcEU.png" alt="pYPqIgt84LzBcEU">&lt;/li>
&lt;/ul>
&lt;p>到这里k8s可以使用了。&lt;/p></description></item><item><title>IOS使用Shadowrocket激活Emby</title><link>https://blog.51ai.vip/posts/ios%E4%BD%BF%E7%94%A8shadowrocket%E6%BF%80%E6%B4%BBembyx/</link><pubDate>Wed, 16 Nov 2022 10:44:11 +0800</pubDate><guid>https://blog.51ai.vip/posts/ios%E4%BD%BF%E7%94%A8shadowrocket%E6%BF%80%E6%B4%BBembyx/</guid><description>&lt;p>前提需要手机安装ShadowRocket。没有可以自己去找共享ID。
&lt;img src="https://s2.loli.net/2022/11/16/aMKuwbEe1Y3BVgF.png" alt="aMKuwbEe1Y3BVgF">
长按后弹出选项：
&lt;img src="https://s2.loli.net/2022/11/16/1HKa2Vywfq9uU8L.png" alt="1HKa2Vywfq9uU8L">
打开配置，例如在default上添加规则。点击default，编辑纯文本。
&lt;img src="https://s2.loli.net/2022/11/16/aMNLtnGY6TxwuHS.png" alt="aMNLtnGY6TxwuHS">
在文本最下面加入内容：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">[Script]
EmbyPremiere = type=http-response,script-path=https://gitlab.com/iptv-org/embypublic/-/raw/master/Script/EmbyPremiere.js,pattern=^https?:\/\/mb3admin.com\/admin\/service\/registration\/validateDevice,max-size=131072,requires-body=true,timeout=10,enable=true

[MITM]
hostname = mb3admin.com
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://s2.loli.net/2022/11/16/S3tpX5xZlwqKCYe.png" alt="S3tpX5xZlwqKCYe">
点击保存后，点右侧!进入。点击HTTPS解密。
&lt;img src="https://s2.loli.net/2022/11/16/oP4D65aX2MKbwxO.png" alt="oP4D65aX2MKbwxO">
&lt;img src="https://s2.loli.net/2022/11/16/5pQf9oy73ISxi1M.png" alt="5pQf9oy73ISxi1M">
开启HTTPS加密，会生成证书。同意安装描述文件。右上角点击勾。
&lt;img src="https://s2.loli.net/2022/11/16/gnRNIqTBvfZVsMd.png" alt="gnRNIqTBvfZVsMd">
&lt;img src="https://s2.loli.net/2022/11/16/3gsU81y6Av9OoFT.png" alt="3gsU81y6Av9OoFT">
去手机设置中，通用-&amp;gt;描述文件与设备管理-&amp;gt;点击描述文件(名称大概有Shadowrocket那个)-&amp;gt;安装。
&lt;img src="https://s2.loli.net/2022/11/16/wVqbC231FH945Zn.png" alt="wVqbC231FH945Zn">
注意在Shadowrocket的首页上，全局路由选择配置。&lt;/p>
&lt;p>最后进入Emby软件。可能会提示证书点OK。如果没有提示，点一个影片后也会提示，点OK。如果Shadowrocket开启通知可以看到提示认证成功。
&lt;img src="https://s2.loli.net/2022/11/16/TgfoqKyI2pFNrt8.png" alt="TgfoqKyI2pFNrt8">
后面就可以畅快看影视啦。&lt;/p>
&lt;p>下次进入Emby时不需要Shadowrocket的配置了。当出现付费提示再开启那个配置就可以激活了。&lt;/p>
&lt;p>完结～
祝好！&lt;/p></description></item><item><title>Zabbix自动发现SNMP设备</title><link>https://blog.51ai.vip/posts/zabbix%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0snmp%E8%AE%BE%E5%A4%87/</link><pubDate>Wed, 12 Oct 2022 11:15:29 +0800</pubDate><guid>https://blog.51ai.vip/posts/zabbix%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0snmp%E8%AE%BE%E5%A4%87/</guid><description>&lt;blockquote>
&lt;p>Zabbix提供高效灵活的网络自动发现功能。
网络发现的优势：&lt;/p>
&lt;ul>
&lt;li>加快部署速度&lt;/li>
&lt;li>简化管理&lt;/li>
&lt;li>在快速变化的环境中避免过度管理
&lt;a href="https://www.zabbix.com/documentation/6.0/zh/manual/discovery/network_discovery">manual-zh&lt;/a>&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;h2 id="发现snmp例子">发现SNMP例子&lt;/h2>
&lt;p>&lt;em>网段内存在几天设备，其中一台是SNMPv2，一台SNMPv3，通过发现将他们加入并监控&lt;/em>&lt;/p>
&lt;p>大概流程：&lt;/p>
&lt;ol>
&lt;li>发现规则，通过发现规则去发现设备。&lt;/li>
&lt;li>发现后的动作，发现设备后做什么。&lt;/li>
&lt;li>验证发现结果。&lt;/li>
&lt;/ol>
&lt;h3 id="创建发现规则">创建发现规则&lt;/h3>
&lt;p>&lt;img src="https://s2.loli.net/2022/09/21/QkadRCY9h4MlpH1.png" alt="QkadRCY9h4MlpH1">
&lt;code>Configuration -&amp;gt; Discovery -&amp;gt; Create discovery rule &lt;/code>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2022/09/21/lUKJ59gjF6wtWzv.png" alt="lUKJ59gjF6wtWzv">&lt;/p>
&lt;p>通过SNMPv2协议，根据oid检查。 这个oid是设备名。 community是根据设备来的。通过SNMP取设备名，host名称是IP地址，可见名称是SNMP取的设备名称。&lt;/p>
&lt;p>&lt;strong>重点配置内容&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>IP range 发现IP范围&lt;/li>
&lt;li>Update interval 发现周期&lt;/li>
&lt;li>Checks 使用此检查列表来执行网络发现&lt;/li>
&lt;li>Device uniqueness criteria 唯一标识&lt;/li>
&lt;li>Host name 主机名称&lt;/li>
&lt;li>Visible name 可见名称&lt;/li>
&lt;/ul>
&lt;h3 id="创建发现动作">创建发现动作&lt;/h3>
&lt;p>&lt;img src="https://s2.loli.net/2022/09/21/aE74jtgmZpHCJkG.png" alt="aE74jtgmZpHCJkG">&lt;/p>
&lt;p>&lt;code>Configuration -&amp;gt; Actions -&amp;gt; Discovery actions&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2022/09/21/k2zJWCjy13bVt7Z.png" alt="k2zJWCjy13bVt7Z">&lt;/p>
&lt;p>Action 选项中：
主要配置Conditions内容：
我写了两个条件，因为我发现写了v2，v3版本的协议。所以有两个条件。如果都是v2就写一个就ok。简单来讲满足我demo。&lt;/p>
&lt;p>Operations 选项：
&lt;img src="https://s2.loli.net/2022/09/21/rEc2Y5apTeO6JK3.png" alt="rEc2Y5apTeO6JK3">&lt;/p>
&lt;ol>
&lt;li>发现的设备添加， Add host 。&lt;/li>
&lt;li>加入设备组， Add to host groups：组名。&lt;/li>
&lt;li>关联模版，Link to templates：模版名。&lt;/li>
&lt;li>开启Host。&lt;/li>
&lt;/ol>
&lt;p>通过这个配置后，发现的主机会根据这个配置进行操作。&lt;/p></description></item><item><title>Lux视频下载工具</title><link>https://blog.51ai.vip/posts/lux%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/</link><pubDate>Thu, 01 Sep 2022 13:03:41 +0800</pubDate><guid>https://blog.51ai.vip/posts/lux%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/</guid><description>&lt;h2 id="简介">简介&lt;/h2>
&lt;p>是一个下载视频的软件. 我一般通过此软件下载b站视频.支持专辑下载.
支持的站点: &lt;a href="https://github.com/iawia002/lux#supported-sites">介绍&lt;/a>&lt;/p>
&lt;h2 id="仓库">仓库&lt;/h2>
&lt;p>&lt;a href="https://github.com/iawia002/lux">github:lux&lt;/a>&lt;/p>
&lt;h2 id="安装mac">安装(mac)&lt;/h2>
&lt;p>&lt;code>brew install lux&lt;/code>&lt;/p>
&lt;h3 id="需要的依赖">需要的依赖&lt;/h3>
&lt;p>&lt;a href="https://www.ffmpeg.org/">ffmpeg&lt;/a>&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>命令: &lt;code>lux [OPTIONS] URL [URL...]&lt;/code>&lt;/p>
&lt;p>例子:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#我想下载某专辑视频,首先创建一个文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir golang
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#然后进入文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd golang
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##执行lux 下载专辑 (-eto bilibili每集文件名不包含播放列表标题)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lux -p -eto https://www.bilibiLi.com/video/BV1SF411z7XW
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##选择性下载 例如只下载 10-20集&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lux -p -eto -items 10-20 https://www.bilibiLi.com/video/BV1SF411z7XW
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 选择清晰度 需要-i查看一下清晰度.查看 download with值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lux -i https://www.bilibili.com/video/BV1SF411z7XW
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 加入清晰度参数1080(不建议,列表执行清晰度可能不全是1080会导致报错)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lux -p -eto -f 80-7 https://www.bilibili.com/video/BV1SF411z7XW
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="图片展示">图片展示&lt;/h2>
&lt;ul>
&lt;li>下载:
&lt;img src="https://s2.loli.net/2022/08/24/5MYUxakfXPiBZIq.png" alt="下载">&lt;/li>
&lt;li>下载完成结果
&lt;img src="https://s2.loli.net/2022/08/24/41QIMdEcWzi2s5K.png" alt="41QIMdEcWzi2s5K">&lt;/li>
&lt;li>查询清晰度
&lt;img src="https://s2.loli.net/2022/08/24/mEfOYcG9Uq76L2D.png" alt="mEfOYcG9Uq76L2D">&lt;/li>
&lt;/ul></description></item><item><title>Zabbix6 网络发现</title><link>https://blog.51ai.vip/posts/zabbix-%E7%BD%91%E7%BB%9C%E5%8F%91%E7%8E%B0/</link><pubDate>Fri, 14 Jan 2022 10:15:53 +0000</pubDate><guid>https://blog.51ai.vip/posts/zabbix-%E7%BD%91%E7%BB%9C%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Zabbix6 网络发现&lt;/p>
&lt;h3 id="功能">功能&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>快速发现并添加主机&lt;/p>
&lt;/li>
&lt;li>
&lt;p>简单的管理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>随着环境的改变而快速搭建系统&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="发现配置依据">发现配置依据&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>IP地址段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于服务(FTP、SSH、Web、POP3、IMAP、TCP&amp;hellip;)的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从Zabbix-Agent接收到的信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>SNMP agent接收的信息&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="添加方式">添加方式&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>创建 Discovery rule&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2022/05/30/8kqFzeiKIAr6fDN.png" alt="3qoFJE.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Name：规则名称（唯一）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Discovery by proxy： 是否由代理执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>IP range： IP地址范围&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>单个IP: 192.168.1.33
IP段: 192.168.1-10.1-255. 范围受限于覆盖地址的总数（小于64K）。
子网掩码: : 192.168.4.0/24
支持的子网掩码:
/16 - /30 for IPv4 addresses
/112 - /128 for IPv6 addresses\IP列表: 192.168.1.1-255, 192.168.2.1-100, 192.168.2.200, 192.168.4.0/24
Zabbix 3.0.0起，此字段支持空格，表格和多行。&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>Update interval: Zabbix执行规则的频率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Checks: 发现的方式&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2022/05/30/Y8R6VhGNgmFq7KS.png" alt="FTCW1e.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Device uniqueness criteria：设备唯一标识&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Host name ： 主机名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Visible name：描述名&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2022/05/30/8azsd4mVbDPU39L.png" alt="ohbmIZ.png">&lt;/p>
&lt;p>这三个选项是根据，checks里面的相关类型出来的数据。基本上都有IP地址，当checks Type 选择了 SNMP或者zabbix agent时，下面选项可以提供这两种对应的数据作为选项。&lt;/p></description></item><item><title>linux环境redis开机启动</title><link>https://blog.51ai.vip/posts/linux%E7%8E%AF%E5%A2%83redis%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</link><pubDate>Tue, 11 Jan 2022 10:16:39 +0000</pubDate><guid>https://blog.51ai.vip/posts/linux%E7%8E%AF%E5%A2%83redis%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</guid><description>&lt;h2 id="前提">前提&lt;/h2>
&lt;p>系统部署在ubuntu20.04中，用到redis数据库。
但是测试时候，设备重启发现redis服务没有启动。
由于是变异安装的，系统找不到redis.service。&lt;/p>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>系统添加服务文件，并执行。&lt;/p>
&lt;h3 id="编写文件">编写文件&lt;/h3>
&lt;p>文件路径&lt;code>/usr/lib/systemd/system&lt;/code>&lt;/p>
&lt;p>编写文件 &lt;code>vi /usr/lib/systemd/system/redis.service&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#服务描述&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Description&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">Redis persistent key-value database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#服务依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">After&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">After&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">network-online.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Wants&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">network-online.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#启动 命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ExecStart&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">/home/monitor/redis-6.0.8/src/redis-server /home/monitor/redis-6.0.8/redis.conf --protected-mode no&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#停止命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ExecStop&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">/home/monitor/redis-6.0.8/src/redis-cli shutdown&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Restart&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#服务类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">forking&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#User=redis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Group=redis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">RuntimeDirectory&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">RuntimeDirectoryMode&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">0755&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#服务安装设置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">WantedBy&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>服务配置文件分为[Unit]、[Service]和[Install]三部分。
具体详细的解释需要结合linux知识补充。&lt;/p>
&lt;h3 id="服务生效">服务生效&lt;/h3>
&lt;p>系统重新读取所有服务文件： &lt;code>systemctl daemon-reload&lt;/code>
启用/禁用开机自启动: &lt;code>systemctl enable/disable redis&lt;/code>
启动/重启redis： &lt;code>systemctl start/restart redis&lt;/code>&lt;/p></description></item><item><title>S5720 SNMP v3配置</title><link>https://blog.51ai.vip/posts/s5720-snmp-v3/</link><pubDate>Tue, 16 Nov 2021 16:38:35 +0000</pubDate><guid>https://blog.51ai.vip/posts/s5720-snmp-v3/</guid><description>&lt;h2 id="s5720-snmp-v3配置">S5720 SNMP v3配置&lt;/h2>
&lt;h3 id="系统视图">系统视图&lt;/h3>
&lt;p>&lt;code>system-view&lt;/code>&lt;/p>
&lt;h3 id="snmp服务">SNMP服务&lt;/h3>
&lt;p>&lt;code>snmp-agent&lt;/code>&lt;/p>
&lt;h3 id="管理端口默认161">管理端口(默认161)&lt;/h3>
&lt;p>&lt;code>snmp-agent udp-port *port-num*&lt;/code>&lt;/p>
&lt;h3 id="配置版本默认v3">配置版本(默认v3)&lt;/h3>
&lt;p>&lt;code>snmp-agent sys-info version *v3*&lt;/code>&lt;/p>
&lt;h3 id="配置用户组">配置用户组&lt;/h3>
&lt;p>&lt;code>snmp-agent group v3 *group-name* {authentication | privacy | noauthentication}&lt;/code>&lt;/p>
&lt;p>三种认证加密方式&lt;/p>
&lt;h3 id="配置v3用户">配置v3用户&lt;/h3>
&lt;p>&lt;code>snmp-agent usm-user v3 *user-name* [ group *group-name*] &lt;/code>&lt;/p>
&lt;h3 id="配置用户认证密码">配置用户认证密码&lt;/h3>
&lt;p>&lt;code>snmp-agent usm-user v3 *user-name* authentication-mode { md5 | sha } [ cipher *password* ]&lt;/code>&lt;/p>
&lt;h3 id="配置加密密码">配置加密密码&lt;/h3>
&lt;p>&lt;code>snmp-agent usm-user v3 *user-name* privacy-mode { des56 | aes128 |aes192 | aes256 | 3des } [ cipher *password* ]&lt;/code>&lt;/p></description></item><item><title>zabbix proxy cannot perform check now for itemid [xxxxx]: item is not in cache</title><link>https://blog.51ai.vip/posts/zabbix-proxy-cannot-perform-check-now-for-itemid-xxxxx-item-is-not-in-cache/</link><pubDate>Wed, 27 Oct 2021 15:06:44 +0000</pubDate><guid>https://blog.51ai.vip/posts/zabbix-proxy-cannot-perform-check-now-for-itemid-xxxxx-item-is-not-in-cache/</guid><description>&lt;h1 id="zabbix-proxy-cannot-perform-check-now-for-itemid-xxxxx-item-is-not-in-cache">zabbix proxy cannot perform check now for itemid [xxxxx]: item is not in cache&lt;/h1>
&lt;h2 id="情况">情况&lt;/h2>
&lt;p>接上次做完容器部署proxy后，为其添加host进行添加任务。&lt;/p>
&lt;p>发现一直没有数据，就到item里面执行 &lt;code>execute now&lt;/code>。&lt;/p>
&lt;p>然后过了几分钟回来一看，还是没有。&lt;/p>
&lt;p>Emmm，看下log吧。&lt;/p>
&lt;p>Server没一场，那问题就在proxy了吧。&lt;/p>
&lt;p>连上proxy去看看：
&lt;img src="https://s2.loli.net/2022/05/30/LSCEA9yqXHwiZmk.png" alt="TQcfjq.png">&lt;/p>
&lt;p>提示好像是去检查对应的itemid，然后说item不在还cache中。
赶紧上网科普！&lt;/p>
&lt;h2 id="原因">原因&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2022/05/30/lorCR8jJaw1OAQ6.png" alt="I5WWwc.png">&lt;/p>
&lt;p>因为是主动的proxy，那他会定期去server要数据。&lt;/p>
&lt;p>这个3600就是配置的更新周期了。1个小时才去要一次，所以肯定是没监控了。&lt;/p>
&lt;p>为了验证，就等了1小时看看：
&lt;img src="https://s2.loli.net/2022/05/30/jBIEmozFDgJ6dq5.png" alt="EWJu2V.png">
实锤了，1小时。后面也就有了数据。
&lt;img src="https://s2.loli.net/2022/05/30/oN5DvPXsLW6gyVQ.png" alt="C0pDSl.png">
Host是1小时之后开始有数据的，也就是他同步后就开始执行监控项了。&lt;/p>
&lt;pre>&lt;code>查询到的内容：
[地址](https://subscription.packtpub.com/book/networking_and_servers/9781784399764/1/ch01lvl1sec10/understanding-the-zabbix-proxies-data-flow)
&lt;/code>&lt;/pre>
&lt;h2 id="解决">解决&lt;/h2>
&lt;p>Ok，那么在重新部署的容器加上此参数(ZBX_CONFIGFREQUENCY)。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --name zbxproxy -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_SERVER_HOST&lt;span style="color:#f92672">=&lt;/span>192.168.10.66 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_HOSTNAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testproxy&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_TIMEOUT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_TLSACCEPT&lt;span style="color:#f92672">=&lt;/span>psk &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_TLSCONNECT&lt;span style="color:#f92672">=&lt;/span>psk &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_TLSPSKIDENTITY&lt;span style="color:#f92672">=&lt;/span>helloworld &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_TLSPSKFILE&lt;span style="color:#f92672">=&lt;/span>zbx_proxy.psk &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e ZBX_CONFIGFREQUENCY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">600&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /etc/localtime:/etc/localtime:ro &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /zbx_proxy.psk:/var/lib/zabbix/enc/zbx_proxy.psk &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--restart&lt;span style="color:#f92672">=&lt;/span>always &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>zabbix/zabbix-proxy-sqlite3:alpine-trunk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;ndash;祝好&lt;/p>
&lt;p>本文结束&lt;/p></description></item><item><title>Zabbix-Proxy 部署运行</title><link>https://blog.51ai.vip/posts/zabbix-proxy-%E9%83%A8%E7%BD%B2-%E8%BF%90%E8%A1%8C/</link><pubDate>Thu, 24 Jun 2021 17:20:40 +0000</pubDate><guid>https://blog.51ai.vip/posts/zabbix-proxy-%E9%83%A8%E7%BD%B2-%E8%BF%90%E8%A1%8C/</guid><description>&lt;h2 id="前提">前提&lt;/h2>
&lt;p>版本： zabbix-server 5.4&lt;/p>
&lt;p>任务： 通过SNMP监控网络设备，需要需通过zabbix-proxy 发送到zabbix-server。&lt;/p>
&lt;h2 id="安装zabbix-proxy">安装Zabbix-Proxy&lt;/h2>
&lt;ol>
&lt;li>安装Zabbix仓库&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> wget https://repo.zabbix.com/zabbix/5.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.4-1+ubuntu20.04_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dpkg -i zabbix-release_5.4-1+ubuntu20.04_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apt update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>安装Zabbix-proxy &amp;amp; mysql&lt;/li>
&lt;/ol>
&lt;p>&lt;em>这里我选择的是mysql作为数据库&lt;/em>&lt;/p>
&lt;p>&lt;code>apt install mysql-server&lt;/code>&lt;/p>
&lt;p>&lt;code>apt install zabbix-proxy-mysql&lt;/code>&lt;/p>
&lt;ol start="3">
&lt;li>导入数据&lt;/li>
&lt;/ol>
&lt;p>&lt;code>zcat /usr/share/doc/zabbix-proxy-mysql/schema.sql.gz | mysql -uzabbix -p zabbix&lt;/code>&lt;/p>
&lt;p>这里可能跑不通。我装了两次都发现没有 schema.sql.gz 这个文件。
如果你也是，那需要找一下这个sql文件。&lt;/p>
&lt;p>下载5.4源码包：
&lt;code>wget https://cdn.zabbix.com/zabbix/sources/stable/5.4/zabbix-5.4.1.tar.gz&lt;/code>
&lt;img src="https://img-blog.csdnimg.cn/img_convert/8eadb68dbe4f2051e1c72a2919286f07.png#id=yP1Gu&amp;amp;originHeight=1340&amp;amp;originWidth=652&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;status=done&amp;amp;style=none" alt="">
解压之后，在 &lt;code>/zabbix-5.4.1/databases/mysql/&lt;/code> 中&lt;/p>
&lt;p>通过 &lt;code>cat schema.sql | mysql -uzabbix -p&lt;/code> 导入到数据库中。&lt;/p>
&lt;p>4.配置zabbix-proxy&lt;/p>
&lt;p>&lt;code>vim /etc/zabbix/zabbix_proxy.conf&lt;/code>&lt;/p>
&lt;p>修改Zabbix Server地址,Hostname，在server添加中，此名称要与这里一致。&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/img_convert/8e3e758e82804c0909ee74bd40d1b988.png#id=HVbW6&amp;amp;originHeight=820&amp;amp;originWidth=1968&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;status=done&amp;amp;style=none" alt="">&lt;/p>
&lt;p>修改为正确的数据库名字、用户名、密码。&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/img_convert/4f0b8f22d1c7753e24705f37025297a1.png#id=ogGz5&amp;amp;originHeight=994&amp;amp;originWidth=1230&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;status=done&amp;amp;style=none" alt="">&lt;/p>
&lt;p>其他配置可以酌情配置。例如server配置频率，log位置，本地缓存时间、主动被动、监听端口等等。&lt;/p>
&lt;ol start="5">
&lt;li>启动zabbix-proxy
&lt;code>systemctl start zabbix-proxy &amp;amp;&amp;amp; systemctl enable zabbix-proxy&lt;/code>&lt;/li>
&lt;li>在zabbix-server 中添加proxy，然后在对应的host主机上选择proxy。
&lt;img src="https://img-blog.csdnimg.cn/img_convert/c869c5c2e48a6d94965c4ee9afd1d3a3.png#id=XryPJ&amp;amp;originHeight=1252&amp;amp;originWidth=1686&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;status=done&amp;amp;style=none" alt="">&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/img_convert/4236f0501054b223da6b5dde07a340a0.png#id=UMgsH&amp;amp;originHeight=930&amp;amp;originWidth=3870&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;status=done&amp;amp;style=none" alt="">&lt;/p></description></item><item><title>小米手环解锁MacOS系统笔记本MacBookPro</title><link>https://blog.51ai.vip/posts/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E8%A7%A3%E9%94%81macbookpro%E7%AC%94%E8%AE%B0%E6%9C%AC/</link><pubDate>Fri, 21 May 2021 16:51:23 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E8%A7%A3%E9%94%81macbookpro%E7%AC%94%E8%AE%B0%E6%9C%AC/</guid><description>&lt;h2 id="通过小米手环解锁笔记本">通过小米手环解锁笔记本&lt;/h2>
&lt;p>官方windows是提供了方法的。
我目前用的MacBookPro，所以说下苹果笔记本的解锁方式。&lt;/p>
&lt;h2 id="安装软件bleunlock">安装软件&lt;code>BLEUnlock&lt;/code>&lt;/h2>
&lt;p>&lt;a href="https://github.com/ts1/BLEUnlock">库&lt;/a>&lt;/p>
&lt;h3 id="安装方式">安装方式：&lt;/h3>
&lt;p>brew 安装 &lt;code>brew install bleunlock&lt;/code>&lt;/p>
&lt;p>或下载程序 &lt;a href="https://github.com/ts1/BLEUnlock/releases">下载发布的程序&lt;/a>&lt;/p>
&lt;h3 id="安装好打开软件">安装好打开软件：&lt;/h3>
&lt;p>&lt;img src="https://i.loli.net/2021/05/21/BAINRZxyTp3zV5Y.png" alt="">&lt;/p>
&lt;p>设备列表选择手环，如果发现不到就在&lt;code>小米运动app&lt;/code>中打开&lt;code>实验室&lt;/code>选项里&lt;code>小米笔记本解锁&lt;/code>开关。&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/05/21/vtHLPFJ2jIfoAWR.jpg" alt="实验室功能">&lt;/p>
&lt;p>设备列表选择你的小米手环。&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/05/21/JjhRDlLHA4idP3O.png" alt="选择设备">&lt;/p>
&lt;p>解锁RSSI与锁定RSSI 是根据你dBM值来判断是否锁定/解锁笔记本。是一个阈值。&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/05/21/wJcOye9SYs7QLXM.png" alt="锁定RSSI">&lt;/p>
&lt;p>延迟锁定，无信号超时是时间阈值。功能顾名思义。&lt;/p>
&lt;p>我这里选择开启了屏保来锁定、以及开机启动。&lt;/p>
&lt;p>通过以上配置之后，我们就可以通过小米手环来解锁MacOS笔记本了。&lt;/p>
&lt;h2 id="请注意一点">请注意一点&lt;/h2>
&lt;p>如果你是每天背着本上下班的话，那我建议上下班前后别开启此功能。
为什么呢，因为你设定的RSSI值肯定是离近笔记本的。这时候你带着手环和笔记本的时候。他很容易就吧本解锁了。然后你发现从书包拿出来本巨热无比。&lt;/p>
&lt;p>为啥呢，他唤醒了设备啊 还解锁了～&lt;/p>
&lt;p>这点我不知道怎么搞定呢，好 结束～&lt;/p>
&lt;p>祝好&lt;/p>
&lt;p>拜拜～&lt;/p></description></item><item><title>小米手环表盘自定义</title><link>https://blog.51ai.vip/posts/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E5%8F%98%E7%9B%98%E8%87%AA%E5%AE%9A%E4%B9%89/</link><pubDate>Thu, 20 May 2021 16:34:55 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E5%8F%98%E7%9B%98%E8%87%AA%E5%AE%9A%E4%B9%89/</guid><description>&lt;p>前阵子媳妇给买了个手环。小米手环5NFC，价格还可以。
&lt;img src="https://i.loli.net/2021/05/20/pSb2DolBKGYfd38.jpg" alt="">&lt;/p>
&lt;h2 id="定义表盘">定义表盘&lt;/h2>
&lt;p>手环就不做评价了，我感觉续航不错。屏幕划痕太容了吧。&lt;/p>
&lt;p>吐槽完了说下能玩的也就表盘了吧。&lt;/p>
&lt;p>出小米运动能同步的那些之外，总想搞点与众不同的。&lt;/p>
&lt;ol>
&lt;li>请访问-&amp;gt;&lt;a href="https://amazfitwatchfaces.com/">AW&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/aYhGMESFAt3PHpq.png" alt="">&lt;/p>
&lt;p>不仅是小米5，6都有了。&lt;/p>
&lt;p>我们根据自己的设备来选择。&lt;/p>
&lt;p>可以看到有面上方有个分类，语言筛选。&lt;/p>
&lt;p>这个还是很有用的，如果你只希望看到中文表盘，那就选择中文。
但是中文可能相对较少，我建议所有，然后看喜欢的界面吧。毕竟表盘上也没几个字。&lt;/p>
&lt;ol start="2">
&lt;li>当我们点中某一个表盘，他会进到详情页。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/jKSMhXgiu8HLRy3.png" alt="">&lt;/p>
&lt;ol start="3">
&lt;li>点击下载，可以弹出来具体的表盘文件。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/nsa9xkZdiuTlcmI.png" alt="">&lt;/p>
&lt;p>可以看到不同的文件有一些描述，比如语言，以及其他的一些描述。根据喜好下载。&lt;/p>
&lt;p>我建议手机下载，省的再从电脑发到手机上。&lt;/p>
&lt;p>下完之后，下面就需要同步表盘了。&lt;/p>
&lt;p>我目前知道的方式，就是通过一些APP来同步。其他方式我没研究过。&lt;/p>
&lt;ol start="4">
&lt;li>我使用的手机是Iphone，所以我安装此软件：&lt;code>amaztools&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/pmMfVPBR3AC1dIY.jpg" alt="">&lt;/p>
&lt;ol start="5">
&lt;li>安装完软件进入：
主页同步信息等这些不重要略过。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/zpkCwt9GxTjAsLE.png" alt="Home">&lt;/p>
&lt;p>这里app也提供了一些表盘。相比之下，这里面内容不多。喜欢可以看看，下载。在这里的下载后，同步就好。&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/9MGnzhjtbpogfld.png" alt="Browse">&lt;/p>
&lt;p>这里展示从app下载的表盘。
&lt;img src="https://i.loli.net/2021/05/20/PdufqrKl7JSYAoM.png" alt="Downloads">&lt;/p>
&lt;p>在More里面，有我们需要的功能，&lt;code>install custom file&lt;/code>。安装我们下载的表盘。&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/05/20/pMEZWwuaSqhRdvA.png" alt="More">&lt;/p>
&lt;p>点击 &lt;code>install custom file&lt;/code>
&lt;img src="https://i.loli.net/2021/05/20/AMHrGvTR8N4ks29.png" alt="Install Custom File">&lt;/p>
&lt;p>选择我们下载的变盘，然后同步到手环上。 过程就结束了。&lt;/p>
&lt;p>真的结束了吗？！ 还要下载好多一个个去试～ 哈哈哈哈&lt;/p>
&lt;pre>&lt;code>结束
祝好
&lt;/code>&lt;/pre></description></item><item><title>Mac OS自己安装的小软件</title><link>https://blog.51ai.vip/posts/mac-os%E8%87%AA%E5%B7%B1%E5%AE%89%E8%A3%85%E7%9A%84%E5%B0%8F%E8%BD%AF%E4%BB%B6/</link><pubDate>Thu, 06 May 2021 11:06:20 +0000</pubDate><guid>https://blog.51ai.vip/posts/mac-os%E8%87%AA%E5%B7%B1%E5%AE%89%E8%A3%85%E7%9A%84%E5%B0%8F%E8%BD%AF%E4%BB%B6/</guid><description>&lt;h2 id="自己使用mac一年多">自己使用Mac一年多&lt;/h2>
&lt;p>自己在19年12月换了mac 16&amp;quot; 笔记本。之前一直windwos，后来看很多讲师在讲课的时候都是mac本本。又觉得windws10更新频繁，还强制让我很不爽。&lt;/p>
&lt;p>最后凑巧16&amp;quot;出来后，自己媳妇送了我一台。美滋滋～&lt;/p>
&lt;h2 id="讲讲我说的小软件">讲讲我说的小软件&lt;/h2>
&lt;p>一些好玩的，实用的软件。&lt;/p>
&lt;ol>
&lt;li>Bob&lt;/li>
&lt;li>Hidden Bar&lt;/li>
&lt;li>itsycal&lt;/li>
&lt;li>pap.er&lt;/li>
&lt;li>uPic&lt;/li>
&lt;li>Go2Shell&lt;/li>
&lt;li>uTools&lt;/li>
&lt;li>PicGo&lt;/li>
&lt;li>electerm&lt;/li>
&lt;li>BLEUnlock&lt;/li>
&lt;li>Clipy&lt;/li>
&lt;/ol></description></item><item><title>SSH 指定端口访问</title><link>https://blog.51ai.vip/posts/ssh-%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/</link><pubDate>Sat, 13 Mar 2021 18:21:50 +0000</pubDate><guid>https://blog.51ai.vip/posts/ssh-%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/</guid><description>&lt;h2 id="很尴尬">很尴尬&lt;/h2>
&lt;p>今天测试，一个通过隧道远程到设备的功能。&lt;/p>
&lt;p>隧道创建完成，然后我就要ssh到哪台设备。反复连接一直不通，心里万马奔腾啊！～&lt;/p>
&lt;p>查看配置没问题啊，怎么就！@#¥%！！！&lt;/p>
&lt;p>后来发现 自己的锅， &lt;code>ssh user@ip：prot&lt;/code> Hahaha～～&lt;/p>
&lt;h2 id="ssh连接">SSH连接&lt;/h2>
&lt;p>SSH 默认端口22，通常我们ssh 时候指令是这样的 &lt;code>ssh user@ip&lt;/code>&lt;/p>
&lt;h3 id="指定端口">指定端口&lt;/h3>
&lt;p>指定端口 我很少用，即便是改端口的我也大部分终端软件去连的。&lt;/p>
&lt;p>正确方式： &lt;code>ssh -p port user@ip&lt;/code>&lt;/p>
&lt;p>记忆深刻，这下很尴尬。 特此记录。&lt;/p></description></item><item><title>解决/usr/local/go/pkg/darwin_amd64/runtime/cgo.a: permission denied问题</title><link>https://blog.51ai.vip/posts/%E8%A7%A3%E5%86%B3-usr-local-go-pkg-darwin-amd64-runtime-cgo-a-permission-denied%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 22 Feb 2021 09:06:08 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E8%A7%A3%E5%86%B3-usr-local-go-pkg-darwin-amd64-runtime-cgo-a-permission-denied%E9%97%AE%E9%A2%98/</guid><description>&lt;h3 id="最近goland在run的时候发现一个问题">最近Goland在run的时候发现一个问题&lt;/h3>
&lt;p>&lt;code>open /usr/local/go/pkg/darwin_amd64/runtime/cgo.a: permission denied&lt;/code>&lt;/p>
&lt;p>情况具体是当我run的时候有问题。debug可以。根据错误提示看到是权限的事。&lt;/p>
&lt;h3 id="解决方式">解决方式&lt;/h3>
&lt;p>执行 &lt;code>sudo chown -R xxx:yyy /usr/local/go&lt;/code>&lt;/p>
&lt;p>&lt;em>xxx 用户名， yyy 组名&lt;/em>&lt;/p>
&lt;p>命令的目的：更改go目录的所有者用户和组。&lt;/p>
&lt;h3 id="查看用户名用户组">查看用户名&amp;amp;用户组&lt;/h3>
&lt;p>当前用户名 常用命令 &lt;code>who am i&lt;/code>
查看当前用户名和组 &lt;code>ls -la&lt;/code>&lt;/p>
&lt;h3 id="参考">参考&lt;/h3>
&lt;p>&lt;a href="https://github.com/golang/go/issues/37962">https://github.com/golang/go/issues/37962&lt;/a>&lt;/p></description></item><item><title>Grafana插件Plugin中文汉化</title><link>https://blog.51ai.vip/posts/grafana%E6%8F%92%E4%BB%B6plugin%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/</link><pubDate>Mon, 30 Nov 2020 13:46:47 +0000</pubDate><guid>https://blog.51ai.vip/posts/grafana%E6%8F%92%E4%BB%B6plugin%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/</guid><description>&lt;h2 id="汉化三方插件">汉化三方插件&lt;/h2>
&lt;p>前面说过汉化Grafana的工作。目前在7.2.1上面，大部分已经完成。细节继续完善。
今天考虑在第三方插件上做一些汉化。点到插件一看全是英文感觉很突出。领导看到了也不爽啊-.-！。&lt;/p>
&lt;h2 id="找个软的捏">找个软的捏&lt;/h2>
&lt;p>饼图在展示方面比较直观。Grafana上有一个插件&lt;a href="https://grafana.com/grafana/plugins/grafana-piechart-panel">Pie Chart&lt;/a>
。这个现象比较少，同时在一些模版上使用中。就拿这个热热身。&lt;/p>
&lt;h2 id="具体步骤">具体步骤&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>下载项目&lt;/p>
&lt;p>项目地址：&lt;a href="https://github.com/grafana/piechart-panel">piechart-panel&lt;/a>
文件结构：&lt;/p>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2020/11/30/ZVbHPT.jpg" alt="">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone git@github.com:grafana/piechart-panel.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd piechart-panel &lt;span style="color:#75715e"># 进入到目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yarn install 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>我直接把项目clone到grafana存放插件的位置，我的grafana是为了测试run的一个docker镜像。把插件目录挂载到本机，代码clone到目录中。&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>汉化工作&lt;/p>
&lt;p>根据上面目录看，主要修改文件都在src里面。
IDE打开此项目，在src中修改需要编辑的文件。&lt;/p>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2020/11/30/ZVb8Ht.jpg" alt="">&lt;/p>
&lt;p>图片举例，选项第一项选择图形类型。选项内容&lt;code>pie&lt;/code> / &lt;code>donut&lt;/code>。通过翻译我修改成了 派/甜甜圈。根据修改内容其他地方设计修改的都需要修改。我通过查询替换方式，在其他文件中修改了代码中的判断。例如上图右侧展示的文件类似。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>build插件&lt;/p>
&lt;p>修改完需要的内容之后，grafana是能识别到有一个插件，但没有build时候他会提示你没有build插件。就是他不认识你的项目代码。&lt;/p>
&lt;p>这个怎么处理呢？看&lt;a href="https://grafana.com/tutorials/build-a-panel-plugin/#3">&lt;strong>官方的文档&lt;/strong>&lt;/a>&lt;/p>
&lt;p>执行 &lt;code>yarn dev&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行结束提示，美滋滋～&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Bundling plugin in dev mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✨ Done in 4.91s.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行完毕我们重启grafana就可以看到成果了。&lt;/p>
&lt;p>对比下原来的版本和汉化后的版本：&lt;/p>
&lt;p>before：&lt;/p>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2020/11/30/ZVb5gM.jpg" alt="">&lt;/p>
&lt;p>After：&lt;/p>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2020/11/30/ZVbGO6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试&amp;amp;调试&lt;/p>
&lt;p>以上2，3步骤基本就是一个测试、调试的过程。&lt;/p>
&lt;ul>
&lt;li>我开始先把所有配置项汉化。然后再处理选项参数。&lt;/li>
&lt;li>接着build，重启grafana查看。如此往复达到预期目标。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>我本机调试用docker启动grafana，测完删了容器就好了。&lt;/strong>&lt;/p>
&lt;h2 id="持续改进">持续改进&lt;/h2>
&lt;p>考虑持续处理某个插件，可以考虑fork原插件项目，remote add XXX源。
然后新建分之来做自己的处理。master fetch XXX源 以跟踪上游的更新。
这样自己项目安装插件时候拉自己的就好啦，美滋滋。&lt;/p></description></item><item><title>docker-compose编排搭建prometheus+grafana+alertmanager+node-exporter+snmp-exporter</title><link>https://blog.51ai.vip/posts/docker-compose%E7%BC%96%E6%8E%92%E6%90%AD%E5%BB%BAprometheus-grafana-alertmanager-node-exporter-snmp-exporter/</link><pubDate>Tue, 17 Nov 2020 13:02:50 +0000</pubDate><guid>https://blog.51ai.vip/posts/docker-compose%E7%BC%96%E6%8E%92%E6%90%AD%E5%BB%BAprometheus-grafana-alertmanager-node-exporter-snmp-exporter/</guid><description>&lt;h2 id="docker-compose">Docker-compose&lt;/h2>
&lt;p>目前集成很多Exporter，加上grafana的image-renderer，后面又加上ping-exporter，很多东西加起来发现操作一次docker 很烦啊。&lt;/p>
&lt;p>科普之后感觉自己对k8s还有有些发怵的。从简单的一个入手吧，选择了docker-compose。&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>Docker-Compose项目是Docker官方的开源项目，负责实现对Docker容器集群的快速编排。&lt;/p>&lt;/blockquote>&lt;/blockquote>&lt;/blockquote>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>安装方式看了一下，我选择直接下载bin文件方式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -L https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-&lt;span style="color:#e6db74">`&lt;/span>uname -s&lt;span style="color:#e6db74">`&lt;/span>-&lt;span style="color:#e6db74">`&lt;/span>uname -m&lt;span style="color:#e6db74">`&lt;/span> &amp;gt; /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod +x /usr/local/bin/docker-compose&lt;span style="color:#e6db74">```&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过 &lt;code>docker-compose version&lt;/code> 看到版本信息算是安装完成。&lt;/p>
&lt;h3 id="编写docker-composeyml">编写docker-compose.yml&lt;/h3>
&lt;ol>
&lt;li>目录结构：&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>├── docker-compose.yaml
├── prometheus
│ ├── rules 
│ │ └── *(rules).yaml/json
│ ├── nodes
│ │ └── *(nodes).yaml
│ ├── data
│ │ └── ... # 挂载prom的data数据
│ └── prometheus.yaml
├── alertmanager
│ ├── templates
│ │ └── *.tmpl
│ └── alertmanager.yaml
├── grafana
│ ├── data
│ │ ├── plugins #插件目录
│ │ ├── png 
│ │ └── grafana.db
│ └── grafana.ini
├── snmp(snmp_exporter)
│ └── snmp.yml
└── blackbox(balck box-exporter)
 └── blackbox.yml
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>
&lt;p>根据结构编写&lt;/p></description></item><item><title>关闭Mac的Microsoft AutoUpdate</title><link>https://blog.51ai.vip/posts/%E5%85%B3%E9%97%ADmac%E7%9A%84microsoft-autoupdate/</link><pubDate>Tue, 13 Oct 2020 13:14:34 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E5%85%B3%E9%97%ADmac%E7%9A%84microsoft-autoupdate/</guid><description>&lt;p>最近使用Office 发现AutoUpdate一直会启动。我也不需要里面的更新。每次还要把它推出。&lt;/p>
&lt;p>网上看到有两种方法，一种是暴力删除，另一种是通过权限限制。&lt;/p>
&lt;p>暴力可不是我喜欢的方式，所以选择后者。&lt;/p>
&lt;p>方法：&lt;/p>
&lt;p>打开终端&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /Library/Application&lt;span style="color:#ae81ff">\ &lt;/span>Support/Microsoft/MAU2.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#ae81ff">000&lt;/span> Microsoft&lt;span style="color:#ae81ff">\ &lt;/span>AutoUpdate.app 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>两行命令后，输入密码就可以了。&lt;/p></description></item><item><title>申请Let's Encrypt HTTPS 证书脚本</title><link>https://blog.51ai.vip/posts/%E7%94%B3%E8%AF%B7let-s-encrypt-https-%E8%AF%81%E4%B9%A6%E8%84%9A%E6%9C%AC/</link><pubDate>Wed, 24 Jun 2020 13:33:18 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E7%94%B3%E8%AF%B7let-s-encrypt-https-%E8%AF%81%E4%B9%A6%E8%84%9A%E6%9C%AC/</guid><description>&lt;h2 id="最近需要到ssl证书又想免懒选择脚本来更新ssl证书文件">最近需要到SSL证书，又想免懒。选择脚本来更新SSL证书文件&lt;/h2>
&lt;blockquote>
&lt;p>Let’s Encrypt是一个由非营利性组织互联网安全研究小组（ISRG）提供的免费、自动化和开放的证书颁发机构（CA）。
简单的说，借助Let’s Encrypt颁发的证书可以为我们的网站免费启用HTTPS(SSL/TLS) 。&lt;/p>&lt;/blockquote>
&lt;p>那我们通过一个脚本来申请：&lt;/p>
&lt;p>脚本名称： &lt;a href="https://github.com/acmesh-official/acme.sh">acme.sh&lt;/a>&lt;/p>
&lt;h3 id="安装acmesh">安装acme.sh：&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>curl https://get.acme.sh | sh&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建指令： &lt;code>alias acme.sh=~/.acme.sh/acme.sh&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试收否安装成功： &lt;code>acme.sh --Version&lt;/code>
出现版本，安装完成。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="生成证书">生成证书&lt;/h3>
&lt;p>&lt;code>acme.sh --issue -d demo.com -d www.demo.con -w /home/wwwroot/demo.com&lt;/code>&lt;/p>
&lt;p>–issue是acme.sh脚本用来颁发证书的指令；
-d是–domain的简称，其后面须填写已备案的域名；
-w是–webroot的简称，其后面须填写网站的根目录。&lt;/p>
&lt;h3 id="查看证书">查看证书&lt;/h3>
&lt;p>&lt;code>acme.sh --list&lt;/code>&lt;/p>
&lt;hr>
&lt;h3 id="nginx-配置">Nginx 配置&lt;/h3>
&lt;p>项目是Nginx，下面是对Nginx的配置。&lt;/p>
&lt;p>acme.sh &amp;ndash;installcert -d demo.com &lt;br>
&amp;ndash;key-file /etc/nginx/ssl/demo.com.key &lt;br>
&amp;ndash;fullchain-file /etc/nginx/ssl/fullchain.cer &lt;br>
&amp;ndash;reloadcmd &amp;ldquo;service nginx force-reload&amp;rdquo;&lt;/p>
&lt;p>通过 installcert 来完成安装，此处我们需要把*.key,fullchain.cer 文件拷贝到指定位置。最后通过reload命令让Nginx重载（force-reload 我环境中无法使用此参数，这里换成 restart）。&lt;/p>
&lt;p>最后我们需要配置Nginx的443 server&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">443&lt;/span> &lt;span style="color:#e6db74">ssl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">demo.com&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ssl&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ssl_certificate&lt;/span> &lt;span style="color:#e6db74">/etc/nginx/ssl/fullchain.cer&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ssl_certificate_key&lt;/span> &lt;span style="color:#e6db74">/etc/nginx/ssl/esofar.cn.key&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>到此基本上配置完成了。
Acme.sh 通过定时任务可以实现定期更新。 查看 &lt;code>crontab -l&lt;/code>&lt;/p></description></item><item><title>GORM 创建联合约束/索引</title><link>https://blog.51ai.vip/posts/gorm-%E5%88%9B%E5%BB%BA%E8%81%94%E5%90%88%E7%BA%A6%E6%9D%9F-%E7%B4%A2%E5%BC%95/</link><pubDate>Thu, 11 Jun 2020 11:50:55 +0000</pubDate><guid>https://blog.51ai.vip/posts/gorm-%E5%88%9B%E5%BB%BA%E8%81%94%E5%90%88%E7%BA%A6%E6%9D%9F-%E7%B4%A2%E5%BC%95/</guid><description>&lt;h3 id="grom创建联合索引">GROM创建联合索引&lt;/h3>
&lt;p>之前提到一个联合约束，那么根据需求再次做一个演示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Demo&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ID&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span> &lt;span style="color:#e6db74">`gorm:&amp;#34;primary_key&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">CreatedAt&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">UpdatedAt&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">DeletedAt&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span> &lt;span style="color:#e6db74">`gorm:&amp;#34;index;unique_index:name_d&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">Name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#e6db74">`gorm:&amp;#34;unique_index:name_d&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">Status&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过demo 迁移后，&lt;code>deleted_at&lt;/code> 与 &lt;code>name&lt;/code> 会形成一个联合约束。&lt;/p>
&lt;p>-OK,完结-&lt;/p></description></item><item><title>解决约束与软删除冲突</title><link>https://blog.51ai.vip/posts/%E8%A7%A3%E5%86%B3%E7%BA%A6%E6%9D%9F-%E8%BD%AF%E5%88%A0%E9%99%A4%E5%86%B2%E7%AA%81/</link><pubDate>Thu, 11 Jun 2020 11:15:55 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E8%A7%A3%E5%86%B3%E7%BA%A6%E6%9D%9F-%E8%BD%AF%E5%88%A0%E9%99%A4%E5%86%B2%E7%AA%81/</guid><description>&lt;h3 id="约束软删除冲突">约束&amp;amp;软删除冲突&lt;/h3>
&lt;p>本咸鱼对数据库方面研究甚少。能存数据就没多考虑其他问题。尤其是在设计方面。都是按照接口或者业务推到一下就好了。
这次考虑一个问题，学习了一个小问题的处理。
就是标题所述 约束与软删除的冲突。&lt;/p>
&lt;p>&lt;em>场景问题例子：&lt;/em>&lt;/p>
&lt;p>一表单 字段为：&lt;/p>
&lt;p>|:&amp;ndash;|
| id |
| name |
|&amp;hellip; |
| u_number |
| deleted_at |&lt;/p>
&lt;p>考虑 &lt;code>u_number&lt;/code> 唯一问题，添加 约束 &lt;code>UNIQUE&lt;/code>。
&lt;code>u_number&lt;/code> 是可复用的一些唯一数据。&lt;/p>
&lt;p>那么问题来了：&lt;/p>
&lt;p>当操作软删除时候，deleted_at (类型 &lt;code>datetime&lt;/code>) 填充删除时间后，我理想化数据已经被删除。当 &lt;code>u_number&lt;/code> 被其他用户使用插入此表结果是失败的。&lt;/p>
&lt;h4 id="解决方式">解决方式&lt;/h4>
&lt;p>&lt;code>u_number&lt;/code> 因为唯一，导致后续使用此前删除的数据是不可行的，如果直接删前者数据也是不太有B格，不科学的事情。
通过 联合的约束来完善此事，&lt;code>deleted_at&lt;/code> 正好是时间， 与其联合使用即解决此事。&lt;/p>
&lt;p>约束不再是单一约束 &lt;code>u_number&lt;/code> 修改成 &lt;code>u_number,deleted_at&lt;/code>。&lt;/p>
&lt;p>-OK，完结。-&lt;/p></description></item><item><title>Linux重启后Docker设置自动启动&amp;容器自动启动设置</title><link>https://blog.51ai.vip/posts/linux%E9%87%8D%E5%90%AF%E5%90%8Edocker%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8-%E5%AE%B9%E5%99%A8%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%E8%AE%BE%E7%BD%AE/</link><pubDate>Mon, 18 May 2020 11:03:48 +0000</pubDate><guid>https://blog.51ai.vip/posts/linux%E9%87%8D%E5%90%AF%E5%90%8Edocker%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8-%E5%AE%B9%E5%99%A8%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%E8%AE%BE%E7%BD%AE/</guid><description>&lt;h2 id="linux系统重启后docker自动启动">Linux系统重启后Docker自动启动&lt;/h2>
&lt;p>系统重启后，如果docker没有启动，那么docker下所有的服务就都挂了。
配置过一次总是忘记命令，这里特意记录一下：
&lt;code>systemctl enable docker.service&lt;/code>&lt;/p>
&lt;h2 id="容器自动启动配置">容器自动启动配置&lt;/h2>
&lt;p>容器配置好自动启动后，当docker运行后，容器也自动启动。这样能保证服务的稳定性。不用再登录到系统来操作各种容易启动问题。
涉及到的参数为：
&lt;code>--restart=always&lt;/code>&lt;/p>
&lt;p>参数有：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>no，默认策略，在容器退出时不重启容器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>on-failure，在容器非正常退出时（退出状态非0），才会重启容器。例如：on-failure:3，在容器非正常退出时重启容器，最多重启3次&lt;/p>
&lt;/li>
&lt;li>
&lt;p>always，在容器退出时总是重启容器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>unless-stopped，在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="容器已存在更新重启配置">容器已存在更新重启配置&lt;/h3>
&lt;p>可能容器我们已经生成了，后面想实现always这个参数，可以用到下面的命令：
&lt;code>docker container update --restart=always 容器名XXX&lt;/code>
这样就达到了想要的目的。&lt;/p></description></item><item><title>解决MAC软件提示已损坏或移到废纸篓</title><link>https://blog.51ai.vip/posts/%E8%A7%A3%E5%86%B3mac%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%88%96%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/</link><pubDate>Fri, 07 Feb 2020 20:24:02 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E8%A7%A3%E5%86%B3mac%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%88%96%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/</guid><description>&lt;h3 id="系统版本">系统版本&lt;/h3>
&lt;p>macOS Catalina 10.15.1&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方法一&lt;/p>
&lt;p>允许任何来源的应用。&lt;/p>
&lt;p>系统偏好设置 -&amp;gt; 安全性和隐私： 在 &lt;strong>允许从以下位置下载的应用程序&lt;/strong> 选项中选择 &lt;strong>任何来源&lt;/strong>&lt;/p>
&lt;p>在 Sierra 10.12 中可能看不到这个选项，开启此功能需要执行命令&lt;code>sudo spctl --master-disable&lt;/code>,&lt;/p>
&lt;p>输入密码就可以看到此选项。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法二&lt;/p>
&lt;p>如果上面发法还是打不开，可能需要此方法。&lt;/p>
&lt;p>&lt;code>sudo xattr -r -d com.apple.quarantine /Applications/xxxx.app/&lt;/code>&lt;/p>
&lt;p>&lt;em>这里的x x.app如果你不知道名字，可以通过应用中查看应用简介中的名称与扩展名,&lt;/em>&lt;/p>
&lt;p>&lt;em>或者在Applications目录下输入名称补全&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2020/02/07/12ElE6.jpg" alt="">&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Mac book pro 终端走代理配置</title><link>https://blog.51ai.vip/posts/mac-book-pro-%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 20 Jan 2020 08:13:10 +0000</pubDate><guid>https://blog.51ai.vip/posts/mac-book-pro-%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</guid><description>&lt;h3 id="mac-终端走ssr代理">mac 终端走ssr代理&lt;/h3>
&lt;p>&lt;strong>前提是你已经知道怎么使用shadowsocks软件，并且可以出去之后。&lt;/strong>&lt;/p>
&lt;p>看下自己ssr 代理端口号是多少
高级设置看下 本地Socks5监听端口
&lt;img src="https://s2.ax1x.com/2020/01/20/1PYNKs.png" alt="高级设置">
&lt;img src="https://s2.ax1x.com/2020/01/20/1PYabq.png" alt="端口号">
记住这个端口号。
后面：
mac 现在默认终端是用的zsh
编辑 &lt;code>vi ～/.zshrc&lt;/code>
在最后加入
//alias 后面的名字自己可以按照习惯定义， 比如我定义proxy 是 ss。 每当我需要时候 ss 一下就可以了。 不需要的时候执行第二句。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">//端口按照你的来配置alias unproxy&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;unset all_proxy&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">alias proxy&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;export all_proxy=socks5://127.0.0.1:1086&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试：
首先在没有走ss 的时候， &lt;code>curl cip.cc&lt;/code> 得到一个国内的信息。
当使用ss之后， 再通过这个查询就可以看到变化了。&lt;/p>
&lt;p>为了便捷，我觉得这个命令也可以设置成别名方式。&lt;/p>
&lt;p>设置一个where 每次当我迷茫不知道自己出没出去的时候，就可以 输入where 看下。
&lt;code>alias where='curl cip.cc'&lt;/code>&lt;/p></description></item><item><title>golang.org/x/xerrors：undefined: errors.Frame</title><link>https://blog.51ai.vip/posts/golang-org-x-xerrorsundefined-errors-frame/</link><pubDate>Thu, 16 Jan 2020 19:05:39 +0000</pubDate><guid>https://blog.51ai.vip/posts/golang-org-x-xerrorsundefined-errors-frame/</guid><description>&lt;h3 id="项目初始化遇到问题">项目初始化遇到问题&lt;/h3>
&lt;p>错误为：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bahs" data-lang="bahs">../go/pkg/mod/golang.org/x/xerrors@v0.0.0-20190410155217-1f06c39b4373/adaptor_go1_13.go:16:14: undefined: errors.Frame
../go/pkg/mod/golang.org/x/xerrors@v0.0.0-20190410155217-1f06c39b4373/format_go1_13.go:12:18: undefined: errors.Formatter
exit status 2
exit status 1
&lt;/code>&lt;/pre>&lt;p>通过科普得到一个方法：
&lt;code>go get -u golang.org/x/xerrors&lt;/code>&lt;/p>
&lt;p>问题解决了。&lt;/p></description></item><item><title>Golang 环境准备</title><link>https://blog.51ai.vip/posts/golang-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</link><pubDate>Thu, 16 Jan 2020 18:51:34 +0000</pubDate><guid>https://blog.51ai.vip/posts/golang-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</guid><description>&lt;h2 id="安装golang">安装GOlang&lt;/h2>
&lt;p>环境:macOS&lt;/p>
&lt;p>shell: zsh&lt;/p>
&lt;ul>
&lt;li>安装步骤：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew update &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> brew upgrade &lt;span style="color:#75715e"># 更新&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install go &lt;span style="color:#75715e"># 安装 go&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>配置环境变量
我的本shell 是zsh 下面是按照zsh配置：
如果需要修改默认的环境变量配置修改 &lt;code>vim ~/.bash_profile&lt;/code> 或 &lt;code>vim ~/.zshrc&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># GOROOT安装的路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export GOROOT&lt;span style="color:#f92672">=&lt;/span>/usr/local/Cellar/go/1.9/libexec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#GOPATH root bin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export GOBIN&lt;span style="color:#f92672">=&lt;/span>$GOROOT/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export PATH&lt;span style="color:#f92672">=&lt;/span>$PATH:$GOBIN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#GOPATH&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export GOPATH&lt;span style="color:#f92672">=&lt;/span>$HOME/go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#GOPATH bin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export PATH&lt;span style="color:#f92672">=&lt;/span>$PATH:$GOPATH/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>退出保存后，使文件生效 &lt;code>source ~/.zshrc=&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>yarn install phantomjs-prebuilt: Command failed.</title><link>https://blog.51ai.vip/posts/yarn-install-phantomjs-prebuilt-command-failed/</link><pubDate>Thu, 16 Jan 2020 14:21:26 +0000</pubDate><guid>https://blog.51ai.vip/posts/yarn-install-phantomjs-prebuilt-command-failed/</guid><description>&lt;h3 id="项目yarn-install-出现phantomjs-prebuilt-command-failed">项目yarn install 出现phantomjs-prebuilt： Command failed.&lt;/h3>
&lt;p>自己在项目中发现执行 &lt;code>yarn install&lt;/code>时候，一直卡住没走完。&lt;/p>
&lt;p>最后报错， &lt;em>error phantomjs-prebuilt： Command failed.&lt;/em>&lt;/p>
&lt;p>可以看到错误中，他是从 github.com/Medium/&amp;hellip; 感觉就是没下载成功吧。&lt;/p>
&lt;p>最开始以为网络问题，翻墙等方式都试过后发现还是没完成。&lt;/p>
&lt;p>没办法，借助网络得知。可以轻松搞定：&lt;/p>
&lt;blockquote>
&lt;p>npm config set phantomjs_cdnurl=&lt;a href="http://cdn.npm.taobao.org/dist/phantomjs_cdnurl">http://cdn.npm.taobao.org/dis&amp;hellip;&lt;/a>
yarn config set &amp;ldquo;phantomjs_cdnurl&amp;rdquo; &amp;ldquo;&lt;a href="https://npm.taobao.org/mirrors/phantomjs%22">https://npm.taobao.org/mirrors/phantomjs&amp;quot;&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>看你是npm 还是node。按照上面方式设置一下。&lt;/p>
&lt;p>&lt;code>rm -rf path/node_moudels&lt;/code>&lt;/p>
&lt;p>&lt;code>yarn install&lt;/code>&lt;/p>
&lt;p>解决问题，美滋滋。&lt;/p>
&lt;p>&lt;a href="https://segmentfault.com/q/1010000010278132">引用地址&lt;/a>&lt;/p></description></item><item><title>MySQL5.7修改root密码</title><link>https://blog.51ai.vip/posts/mysql5-7%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/</link><pubDate>Wed, 15 Jan 2020 15:23:54 +0000</pubDate><guid>https://blog.51ai.vip/posts/mysql5-7%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/</guid><description>&lt;p>最近维护一个MySQL数据库，由于各种原因，密码已经不知道了。现在让我在这台服务器上使用里面的MySQL数据库。&lt;/p>
&lt;p>怎么办？&lt;/p>
&lt;p>首先问了一圈没有人知道。那么只能靠自己了。&lt;/p>
&lt;p>查看软件版本: &lt;code>mysql --version&lt;/code>&lt;/p>
&lt;p>之后通过神奇的Google科普了一下。
知道了具体的方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>关闭mysql服务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改my.conf
在里面[mysqld] 下面最后加入一行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[mysqld]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">skip-grant-tables&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改完保存退出。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重启mysql服务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mysql&lt;/code> 进入mysql 不需要密码了。&lt;/p>
&lt;p>&lt;code>show databases;&lt;/code> 查看数据库&lt;/p>
&lt;p>&lt;code>use mysql;&lt;/code> 选择 mysql 数据库
在此数据库执行更新语句（修改root用户的密码为root）：
&lt;code>update user set authentication_string=password('root') where user='root'; &lt;/code>
&lt;code>flush privileges;&lt;/code> 更新权限&lt;/p>
&lt;p>退出mysql&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把最开始my.conf加入的语句删除。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重启mysql服务&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>最后可以通过设置的密码登陆数据库了。&lt;/p></description></item><item><title>Prometheus-SNMP_Exporter Generator</title><link>https://blog.51ai.vip/posts/prometheus-snmp-exporter-generator/</link><pubDate>Tue, 24 Dec 2019 15:26:33 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometheus-snmp-exporter-generator/</guid><description>&lt;h2 id="prometheus-snmp-exporter">Prometheus-SNMP Exporter&lt;/h2>
&lt;blockquote>
&lt;p>生成器从generator.yml读取并写入snmp.yml。&lt;/p>&lt;/blockquote>
&lt;p>之前在说&lt;a href="https://blog.51ai.vip/2019/08/29/Prometheus-snmp-export%E9%83%A8%E7%BD%B2/">Prometheus-snmp_export部署&lt;/a>时,没有具体提到snmp.yml的生成器是怎么生成的.几乎用的都是github上的&lt;a href="https://github.com/prometheus/snmp_exporter/blob/master/snmp.yml">snmp.yml&lt;/a>文件(只在demo中添加了auth配置).&lt;/p>
&lt;p>因为刚好所有通用的指标都取得通用的mib树. 在后期我搜集设备的信息需要一些私有mib的数据,这时候需要自己通过生成器来生成snmp.yml.&lt;/p>
&lt;h2 id="generator-的操作步骤">Generator 的操作步骤&lt;/h2>
&lt;h3 id="下载需要的程序docker方式跳过此步骤">下载需要的程序(Docker方式跳过此步骤)&lt;/h3>
&lt;pre tabindex="0">&lt;code># Debian-based distributions.
sudo apt-get install unzip build-essential libsnmp-dev # Debian-based distros
# Redhat-based distributions.
sudo yum install gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel # RHEL-based distros

go get github.com/prometheus/snmp_exporter/generator
cd ${GOPATH-$HOME/go}/src/github.com/prometheus/snmp_exporter/generator
go build
make mibs(不建议直接make)
&lt;/code>&lt;/pre>&lt;p>这里直接make mibs 可能会失败,在make文件里设置的源有些已经不能访问了或执行出现错误.&lt;/p>
&lt;p>我建议先下载好mibs ,我已经上传&lt;a href="https://github.com/chenweil/mibs">github&lt;/a>.&lt;/p>
&lt;p>&lt;em>&lt;strong>建议自行搜集mib 不执行make mibs会方便一些&lt;/strong>&lt;/em>&lt;/p>
&lt;p>把所有的mib放入mibs 目录下.&lt;/p>
&lt;p>需要准备好所有需要涉及到的mib文件. 除了公有的mib,我们还需要监控目标设备的私有mib.思科/华为之类的会提供这些mib,像锐捷这种需要和商务部联系.&lt;/p>
&lt;hr>
&lt;p>&lt;em>一些mib:&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://github.com/netdisco/netdisco-mibs">https://github.com/netdisco/netdisco-mibs&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/pgmillon/observium/tree/master/mibs">https://github.com/pgmillon/observium/tree/master/mibs&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/librenms/librenms/tree/master/mibs">https://github.com/librenms/librenms/tree/master/mibs&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="当我们准备好所有的mib后需要编写一个generatoryml">当我们准备好所有的mib后,需要编写一个generator.yml.&lt;/h3>
&lt;p>&lt;code>下面是一个翻译的官方文档(翻译比较烂,自行查阅[原文]([https://github.com/prometheus/snmp\_exporter/tree/master/generator](https://github.com/prometheus/snmp\_exporter/tree/master/generator))):&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">modules&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">module_name&lt;/span>: &lt;span style="color:#75715e"># 模块名称。您可以根据需要拥有任意数量的模块。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">walk&lt;/span>: &lt;span style="color:#75715e"># 要walk的OID列表。 也可以是SNMP对象名称或特定实例。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">1.3.6.1.2.1.2&lt;/span> &lt;span style="color:#75715e"># 与“接口”相同。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sysUpTime &lt;/span> &lt;span style="color:#75715e"># 与“ 1.3.6.1.2.1.1.3”相同。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">1.3.6.1.2.1.31.1.1.1.6.40&lt;/span> &lt;span style="color:#75715e"># 索引为“ 40”的“ ifHCInOctets”的实例。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#75715e"># 要使用的SNMP版本。 默认2。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1将使用GETNEXT，2和3将使用GETBULK。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">max_repetitions&lt;/span>: &lt;span style="color:#ae81ff">25&lt;/span> &lt;span style="color:#75715e"># 使用GET / GETBULK请求多少个对象，默认为25。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 对于有故障的设备，可能需要减少。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">retries&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#75715e"># 重试失败请求的次数，默认为3。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">timeout&lt;/span>: &lt;span style="color:#ae81ff">10s&lt;/span> &lt;span style="color:#75715e"># 每次步行的超时时间，默认为10秒。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">auth&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 社区字符串与SNMP v1和v2一起使用。 默认为“ public”。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">community&lt;/span>: &lt;span style="color:#ae81ff">public&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># v3具有不同且更复杂的设置。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 需要哪些取决于security_level。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 还列出了NetSNMP命令上的等效选项，例如snmpbulkwalk和snmpget。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 请参见snmpcmd（1）。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">user &lt;/span> &lt;span style="color:#75715e"># 必需，无默认值。 NetSNMP的-u选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">security_level&lt;/span>: &lt;span style="color:#ae81ff">noAuthNoPriv &lt;/span> &lt;span style="color:#75715e"># 默认为noAuthNoPriv。 NetSNMP的-l选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 可以是noAuthNoPriv，authNoPriv或authPriv。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">pass &lt;/span> &lt;span style="color:#75715e"># 没有默认值。 也称为authKey，NetSNMP的-A选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果security_level是authNoPriv或authPriv，则为必需。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">auth_protocol&lt;/span>: &lt;span style="color:#ae81ff">MD5 &lt;/span> &lt;span style="color:#75715e"># MD5或SHA，默认为MD5。 -NetSNMP的选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果security_level为authNoPriv或authPriv，则使用此属性。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">priv_protocol&lt;/span>: &lt;span style="color:#ae81ff">DES &lt;/span> &lt;span style="color:#75715e"># DES或AES，默认为DES。 NetSNMP的-x选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果security_level为authPriv，则使用。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">priv_password&lt;/span>: &lt;span style="color:#ae81ff">otherPass&lt;/span> &lt;span style="color:#75715e"># 没有默认值。 也称为privKey，NetSNMP的-X选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果security_level是authPriv，则为必需。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">context_name&lt;/span>: &lt;span style="color:#ae81ff">context&lt;/span> &lt;span style="color:#75715e"># 没有默认值。 NetSNMP的-n选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果在设备上配置了上下文，则为必需。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">lookups&lt;/span>: &lt;span style="color:#75715e"># 要执行的查找的可选列表。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># “keep_source_indexes”的默认值为false。 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 索引必须唯一，才能使用此选项。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果表的索引是bsnDot11EssIndex，则通常是该表结果度量的标签。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 相反,使用索引查找bsnDot11EssSsid表条目，并使用该值创建一个bsnDot11EssSsid标签。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">source_indexes&lt;/span>: [&lt;span style="color:#ae81ff">bsnDot11EssIndex]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">lookup&lt;/span>: &lt;span style="color:#ae81ff">bsnDot11EssSsid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">drop_source_indexes&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#75715e"># 如果为true，则删除此查找的源索引标签。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 当新索引唯一时，这可以避免标签混乱。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">overrides&lt;/span>: &lt;span style="color:#75715e"># 允许每个模块覆盖MIB的位&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metricName&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ignore&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#75715e"># 从输出中删除度量。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex_extracts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">Temp&lt;/span>: &lt;span style="color:#75715e"># 将创建一个新的度量，并将其附加到metricName上，成为metricNameTemp。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;(.*)&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 正则表达式从返回的SNMP walk的值中提取一个值。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">value&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;$1&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 结果将解析为float64，默认为$1。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">Status&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;.*Example&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">value&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;.*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">value&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">DisplayString&lt;/span> &lt;span style="color:#75715e"># 覆盖度量标准类型，可能的类型有：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># gauge: 带gauge的整数。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># counter: 带类型计数器的整数。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># OctetString: 一个位字符串，呈现为0xff34。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># DateAndTime: RFC 2579日期和时间字节序列。如果设备没有时区数据，则使用UTC。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># DisplayString: ASCII或UTF-8字符串。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># PhysAddress48: 一个48位的MAC地址，呈现为00:01:02:03:04:ff。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Float: 一个32位浮点值，带有类型gauge。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Double: 一个64位浮点值，带有类型gauge。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># InetAddressIPv4: IPv4地址，呈现为1.2.3.4。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># InetAddressIPv6: IPv6地址，呈现为0102:0304:0506:0708:090A:0B0C:0D0E:0F10。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># InetAddress: 每个RFC 4001有一个InetAddress。必须以InetAddressType开头。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># InetAddressMissingSize: 因索引中没有大小而违反RFC 4001第4.1节的InetAddress。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 必须以InetAddressType开头。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># EnumAsInfo: 为其创建单个时间序列的枚举。适用于恒定值。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># EnumAsStateSet: 每个状态具有时间序列的枚举。适用于可变低基数枚举。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Bits: 一种RFC2578位结构，它产生一个具有每位时间序列的状态集。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面提供一个自己编写的generator.yml&lt;/p></description></item><item><title>Prometheus告警模板详解</title><link>https://blog.51ai.vip/posts/prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF%E8%AF%A6%E8%A7%A3/</link><pubDate>Wed, 04 Dec 2019 11:51:43 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="目的">目的&lt;/h2>
&lt;p>之前配置告警之后,可以发送告警信息.但对于数据具体的结构信息,在模板中数据读取都比较懵.原因是不太清除警报都提供了哪些数据,除了我们设置的信息,还有没有其他的信息.&lt;/p>
&lt;h3 id="告警数据结构">告警数据结构&lt;/h3>
&lt;p>&lt;a href="https://prometheus.io/docs/alerting/notifications/#alert">官方docs&lt;/a>&lt;/p>
&lt;p>推送数据结构:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="alerts数据">Alerts数据&lt;/h3>
&lt;!-- raw HTML omitted -->
&lt;h3 id="kv数据的处理方式">KV数据的处理方式&lt;/h3>
&lt;p>KV结构很简单,键值对.通过键获取对应的值.下面提供了一些方法处理这种结构的一些方法.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="字符串相关方法">字符串相关方法&lt;/h3>
&lt;p>警报提供的数据是通过GO模板解析的,GO模板的功能通过&lt;a href="https://golang.org/pkg/text/template/#hdr-Functions">GO模板文档&lt;/a>可以了解.&lt;/p>
&lt;p>下面提供了一些处理字符串的方法:&lt;/p>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2019/12/05/kngppe.png" alt="">&lt;/p>
&lt;h3 id="微信通知的demo">微信通知的DEMO&lt;/h3>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2019/12/05/kngxOt.png" alt="">&lt;/p>
&lt;p>上图中是微信接受的通知,下面展示通知模板的代码.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-tmpl" data-lang="tmpl">&lt;span style="display:flex;">&lt;span>{{- define &amp;#34;_alert_list&amp;#34; -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- range .Alerts.Firing -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警类型：{{ .Labels.alertname }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警主题: {{ .Annotations.summary }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警详情: {{ .Annotations.description }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>触发时间: {{ (.StartsAt.Add 28800e9).Format &amp;#34;2006-01-02 15:04:05&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---------结束-----------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- define &amp;#34;_resolve_list&amp;#34; -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- range .Alerts.Resolved -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>**************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警类型：{{ .Labels.alertname }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警主题: {{ .Annotations.summary }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警详情: {{ .Annotations.description }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>触发时间: {{ (.StartsAt.Add 28800e9).Format &amp;#34;2006-01-02 15:04:05&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>恢复时间: {{ (.EndsAt.Add 28800e9).Format &amp;#34;2006-01-02 15:04:05&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>************结束*****************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- define &amp;#34;wechat.message&amp;#34; -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- if and (gt (len .Alerts.Firing) 0) (gt (len .Alerts.Resolved) 0) -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警数量:{{.Alerts.Firing | len}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警设备:{{ .GroupLabels.server}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ template &amp;#34;_alert_list&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>====================================
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警恢复:{{len .Alerts.Resolved}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警设备:{{ .GroupLabels.server}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ template &amp;#34;_resolve_list&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- else -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- if gt (len .Alerts.Firing) 0 -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警数量:{{.Alerts.Firing | len}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警设备:{{ .GroupLabels.server}} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ template &amp;#34;_alert_list&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- if gt (len .Alerts.Resolved) 0 -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警恢复:{{len .Alerts.Resolved}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>告警设备:{{ .GroupLabels.server}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ template &amp;#34;_resolve_list&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- end -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{- end -}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>其中告警设备 server 这个标签是自定义的.如果没有可以删除此行或根据自己标签定义.&lt;/strong>&lt;/p></description></item><item><title>Prometheus标签处理&amp;服务发现</title><link>https://blog.51ai.vip/posts/prometheus%E6%A0%87%E7%AD%BE%E5%A4%84%E7%90%86-%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</link><pubDate>Tue, 03 Dec 2019 15:14:16 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometheus%E6%A0%87%E7%AD%BE%E5%A4%84%E7%90%86-%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</guid><description>&lt;h3 id="标签处理的重要性">标签处理的重要性&lt;/h3>
&lt;p>之前的[配置](&lt;a href="https://blog.51ai.vip/2019/10/09/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/">https://blog.51ai.vip/2019/10/09/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/&lt;/a>中提到了标签的处理,不过由于写的是静态的配置,标签可以自己设置或者不设置都可以.&lt;/p>
&lt;p>当使用服务发现之后发现标签处理的重要性提升了更高的级别.&lt;/p>
&lt;h3 id="标签处理">标签处理&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;node&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">static_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;172.16.23.110:9100&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;172.16.23.111:9100&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metric_relable_configs&lt;/span>: &lt;span style="color:#75715e">#通过正则重命名标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">replace &lt;/span> &lt;span style="color:#75715e">#replace替换是默认动作。keep（只参加匹配标签的实例）、drop（不采集匹配正则的实例）、labelkeep\labeldrop(对标签进行过滤处理而非实例)等动作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">source_labels&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;job&amp;#39;&lt;/span>] &lt;span style="color:#75715e">#原标签，job是默认就会产生的标签，这里job标签的值是node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#ae81ff">(.*) &lt;/span> &lt;span style="color:#75715e">#正则匹配，这里匹配job标签内的内容，也就是node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replacement&lt;/span>: &lt;span style="color:#ae81ff">beijing &lt;/span> &lt;span style="color:#75715e">#替换成什么内容，如果写$1就是将正则里读取的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">idc &lt;/span> &lt;span style="color:#75715e">#把替换内容赋值给idc标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">labeldrop &lt;/span> &lt;span style="color:#75715e">#删除标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#ae81ff">job &lt;/span> &lt;span style="color:#75715e">#把原job标签删除&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;prometheus&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">static_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;localhost:9090&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span>: &lt;span style="color:#ae81ff">bj3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">relabel_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">replace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">source_labels&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;job&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#ae81ff">(.*)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replacement&lt;/span>: &lt;span style="color:#ae81ff">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">server&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上两个例子都是替换标签,job:node中,删除了前job标签,下面的job新增了&amp;rsquo;server&amp;rsquo;标签内容取的job内容,但没删除job标签.&lt;/p>
&lt;p>通过标签我们组成多维模型.可以对标签重命名,删除,过滤信息等.&lt;/p>
&lt;h3 id="服务发现">服务发现&lt;/h3>
&lt;p>之前配置中的静态配置需要一个一些写配置,设备或者服务多的时候容易头大.&lt;/p>
&lt;p>这里可以通过服务发现简化手动配置工作.&lt;/p>
&lt;p>Prometheus支持多种服务发现机制,例如: consul、dns、openstack、file、kubernetes等.&lt;/p>
&lt;p>这里举例file.比较简单的方式.&lt;/p>
&lt;p>file机制中:需要提供文件来获取内容.文件格式为YAML 或 JSON格式.&lt;/p>
&lt;p>prometheus配置:&lt;/p>
&lt;pre tabindex="0">&lt;code>scrape_configs:
 - job_name: &amp;#39;prometheus&amp;#39;
 file_sd_configs: 
 - files: [&amp;#39;/usr/local/prometheus/files_sd_configs/*.yaml&amp;#39;] 
 ##指定服务发现文件位置
 refresh_interval: 5s
 ##刷新间隔改为5秒
&lt;/code>&lt;/pre>&lt;p>Prometheus 每5秒扫描一次指定位置的配置文件.&lt;/p>
&lt;p>服务发现文件格式:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">targets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;localhost:9090&amp;#39;&lt;/span>] &lt;span style="color:#75715e"># 监控目标&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>: &lt;span style="color:#75715e"># 配置标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server&lt;/span>: &lt;span style="color:#ae81ff">local &lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>M3DB笔记</title><link>https://blog.51ai.vip/posts/m3db%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 29 Nov 2019 17:41:43 +0000</pubDate><guid>https://blog.51ai.vip/posts/m3db%E7%AC%94%E8%AE%B0/</guid><description>&lt;h2 id="m3db笔记">M3DB笔记&lt;/h2>
&lt;p>前阵子研究prometheus,初期没有考虑存储问题.本地默认存储30天数据.&lt;/p>
&lt;p>监控已经折腾完毕,现在需要来处理存储的方案.&lt;/p>
&lt;p>通过互联网的科普,发现目前有两个方案可以解决这个问题.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>thanos&lt;/p>
&lt;/li>
&lt;li>
&lt;p>M3DB&lt;/p>
&lt;p>thanos是需要存储云端数据(本地存储官方不推荐).不符合我们的考虑范围内.那就来学习M3DB了.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="简介">简介&lt;/h3>
&lt;blockquote>
&lt;p>M3可以在较长的保留时间内可靠地存储大规模指标。为了向更广泛的社区中的其他人提供这些好处，我们决定开放M3平台作为Prometheus的远程存储后端，Prometheus是一种流行的监控和警报解决方案。正如其文档所述，Prometheus的可扩展性和耐用性受到单个节点的限制。 M3平台旨在为Prometheus指标提供安全，可扩展且可配置的多租户的存储。&lt;/p>
&lt;p>M3于2015年发布，目前拥有超过66亿个时间序列。 M3每秒聚合5亿个指标，并在全球范围内（使用M3DB）每秒持续存储2000万个度量指标，批量写入将每个指标持久保存到区域中的三个副本。它还允许工程师编写度量策略，告诉M3以更短或更长的保留时间（两天，一个月，六个月，一年，三年，五年等）以特定的粒度（一秒，十秒，一分钟，十分钟等）。这允许工程师和数据科学家使用与定义的存储策略匹配的度量标签（标签），在精细和粗粒度范围内智能地存储不同保留的时间序列。例如，工程师可以选择存储“应用程序”标记为“mobile_api”且“端点”标记为“注册”的所有度量标准，这些标记在10秒粒度下为30天，在一小时粒度下为5年。&lt;/p>&lt;/blockquote>
&lt;h3 id="相关组件">相关组件&lt;/h3>
&lt;blockquote>
&lt;h4 id="m3-coordinator">M3 Coordinator&lt;/h4>
&lt;p>M3 Coordinator是一种服务，用于协调上游系统（如Prometheus和M3DB）之间的读写操作。它还提供了管理API，用于设置和配置M3的不同部分。它是用户可以部署以访问M3DB的优势的桥梁，例如长期存储和与其他监控系统（如Prometheus）的多DC设置。&lt;/p>
&lt;h4 id="m3db">M3DB&lt;/h4>
&lt;p>M3DB是一个分布式时间序列数据库，提供可扩展存储和时间序列的反向索引。它经过优化，具有成本效益和可靠的实时和长期保留指标存储和索引&lt;/p>
&lt;h4 id="m3-query">M3 Query&lt;/h4>
&lt;p>M3 Query是一种服务，它包含一个分布式查询引擎，用于查询实时和历史指标，支持多种不同的查询语言。它旨在支持低延迟实时查询和可能需要更长时间执行的查询，聚合更大的数据集，用于分析用例&lt;/p>
&lt;h4 id="m3-aggregator">M3 Aggregator&lt;/h4>
&lt;p>M3 Aggregator是一种作为专用度量聚合器运行的服务，它基于存储在etcd中的动态规则提供基于流的下采样。它使用领导者选举和聚合窗口跟踪，利用etcd来管理此状态，从而可靠地为低采样度量标准发送至少一次聚合到长期存储。这提供了成本有效且可靠的下采样和汇总指标。这些功能也存在于M3协调器中，但专用聚合器是分片和复制的，而M3协调器则不需要并且需要谨慎部署和以高可用性方式运行。还有一些工作要使用户更容易访问聚合器，而无需他们编写自己的兼容生产者和消费者。&lt;/p>&lt;/blockquote>
&lt;h3 id="入门">入门&lt;/h3>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2019/11/29/kIj7yu.png" alt="">&lt;/p>
&lt;p>上面的组件通俗讲:&lt;/p>
&lt;p>&lt;em>prometheus&lt;/em> 需要通过&lt;em>M3 Coordinator&lt;/em>来协调存储与查询到M3DB,&lt;em>prometheus&lt;/em>本地存储数据时间与这个没关系.&lt;/p>
&lt;p>上面没有提到一个名字etcd服务.此服务推断拓扑\配置功能. 如果db嵌入此服务就称为种子节点SeedNode.&lt;/p>
&lt;hr>
&lt;p>官方提供了一个镜象,里面包含 M3 Coordinator + SeedNode.&lt;/p>
&lt;p>拉取镜象:&lt;code>docker pull quay.io/m3db/m3dbnode:latest&lt;/code>&lt;/p>
&lt;p>启动名为m3db容器:&lt;code>docker run -d -p 7201:7201 -p 7203:7203 -p 9003:9003 --name m3db -v $(pwd)/m3db_data:/var/lib/m3db quay.io/m3db/m3dbnode:latest&lt;/code>&lt;/p>
&lt;p>该容器的端口为7201（用于管理集群拓扑），端口为7203，Prometheus用来刮除M3DB和M3Coordinator生成的度量，端口9003（用于读取和写入度量）已公开。&lt;/p>
&lt;p>这时候m3db已经启动,需要创建一个初始命名空间.官方镜象默认是type:local,namespace:default. 这个可以进入容器查看到配置位置&lt;code>/etc/d3dbnode/m3dbnode.yml&lt;/code>.如果我们创建其他命名空间需要在m3coordinator中配置好.&lt;/p>
&lt;p>&lt;code>curl -X POST http://localhost:7201/api/v1/database/create -d '{ &amp;quot;type&amp;quot;: &amp;quot;local&amp;quot;, &amp;quot;namespaceName&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;retentionTime&amp;quot;: &amp;quot;24h&amp;quot; }'&lt;/code>&lt;/p></description></item><item><title>网络传输速度测试工具</title><link>https://blog.51ai.vip/posts/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</link><pubDate>Wed, 23 Oct 2019 17:31:55 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</guid><description>&lt;h2 id="网络传输测试软件">网络传输测试软件&lt;/h2>
&lt;p>最近公司测试限速,搜集软件发现两款,iperf,LANSpeedTest.
iperf,多平台.
LANSpeedTest,读写显示,操作简单.
&lt;strong>局域网测试传输,优先考虑UDP.&lt;/strong>&lt;/p>
&lt;h3 id="iperf">iperf&lt;/h3>
&lt;p>Iperf可以报告带宽,延迟抖动和数据包丢失.
&lt;a href="https://iperf.fr/iperf-doc.php">官方文档&lt;/a>
安装不写了.跳过&lt;/p>
&lt;p>iperf常用参数介绍&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>	-i 2	&lt;span style="color:#75715e">#表示每2秒显示一次报告&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-w 80k	&lt;span style="color:#75715e">#对于TCP方式，此设置为TCP窗口大小。对于UDP方式，此设置为接受UDP数据包的缓冲区大小，限制可以接受数据包的最大值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-B 192.168.122.1	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">#绑定到主机的多个地址中的一个。对于客户端来说，这个参数设置了出栈接口。对于服务器端来说，这个参数设置入栈接口。这个参数只用于具有多网络接口的主机。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">#在Iperf的UDP模式下，此参数用于绑 定和加入一个多播组。使用范围在224.0.0.0至239.255.255.255的多播地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#常用客户端参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-b 100m	&lt;span style="color:#75715e">#用于udp测试时，设置测试发送的带宽，单位：bit/秒，不设置时默认为：1Mbit/秒&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-c 	&lt;span style="color:#75715e">#指定服务端ip地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-d 	&lt;span style="color:#75715e">#同时测试上行和下行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-t 10	&lt;span style="color:#75715e">#设置传输时间，为10秒	&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	-P 5	&lt;span style="color:#75715e">#指定发起5个线程&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="udp测试">UDP测试&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>服务端
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -u -s 		&lt;span style="color:#75715e"># -u表示以udp模式运行，-s表示作为服务端, 这里需要设置ip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>客户端
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -u -c 192.168.100.11 -b 100M -t &lt;span style="color:#ae81ff">60&lt;/span> -i &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">#解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.100.11上传带宽测试，测试时间为60秒&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -u -c 192.168.100.11 5M -P &lt;span style="color:#ae81ff">30&lt;/span> -t 6		&lt;span style="color:#75715e">#客户端同时向服务器端发起30个连接线程，以5Mbps为数据发送速率&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -u -c 192.168.100.11 -b 100M -d -t &lt;span style="color:#ae81ff">60&lt;/span> 	&lt;span style="color:#75715e">#以100M为数据发送速率，进行上下行带宽测试&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="tcp测试">TCP测试&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>服务端
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>客户端
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -c 192.168.100.11 -t 60			&lt;span style="color:#75715e">#在tcp模式下，客户端到服务器192.168.100.11上传带宽测试，测试时间为60秒。 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -c 192.168.100.11 -P &lt;span style="color:#ae81ff">30&lt;/span> -t 60		&lt;span style="color:#75715e">#客户端同时向服务器端发起30个连接线程。 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	iperf -c 192.168.100.11 -d -t &lt;span style="color:#ae81ff">60&lt;/span> -i 2	&lt;span style="color:#75715e">#进行上下行带宽测试。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="测试结果">测试结果&lt;/h3>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/24/KNIyt0.png" alt="">
结果中可以看到:
30秒(-t)的测试,传递数据 70+ (-b参数), 监测的带宽约为20M .&lt;/p></description></item><item><title>Prometheus-AlertManager警告管理搭建与配置</title><link>https://blog.51ai.vip/posts/prometheus-alertmanager%E8%AD%A6%E5%91%8A%E7%AE%A1%E7%90%86%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 19 Oct 2019 09:40:15 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometheus-alertmanager%E8%AD%A6%E5%91%8A%E7%AE%A1%E7%90%86%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;h2 id="alertmanager">AlertManager&lt;/h2>
&lt;blockquote>
&lt;p>AlertManager处理由客户端应用程序（如Prometheus服务器）发送的警报。
它负责重复数据消除、分组，并将它们路由到正确的接收器集成（如电子邮件、PagerDuty或OpsGenie）。
它还负责消除和抑制警报。&lt;/p>&lt;/blockquote>
&lt;p>通过翻译官方文档可以了解到,AlertManager是负责为Prometheus(本身不会发送警报)发送警报的工具.
AlertManager不是简单发送警报,可以消除重复警报,分组,抑制警报功能.并支持多接收器.&lt;/p>
&lt;p>Prometheus-&amp;gt;触发定义的警报规则-&amp;gt;AlertManager-&amp;gt;发送警报到指定通知渠道.&lt;/p>
&lt;p>为了能让Prometheus发送警报,我们需要:&lt;/p>
&lt;ol>
&lt;li>搭建AlertManager服务.&lt;/li>
&lt;li>定义AlertManager通知配置.&lt;/li>
&lt;li>定义Prometheus警报规则并引入.&lt;/li>
&lt;li>测试警报.&lt;/li>
&lt;li>定义通知模板.&lt;/li>
&lt;/ol>
&lt;h2 id="定义alertmanager通知配置">定义AlertManager通知配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">global&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">smtp_smarthost&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;smtp.163.com:25&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 邮箱smtp服务器代理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">smtp_from&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;shitu-0071@163.com&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 发送邮箱名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resolve_timeout&lt;/span>: &lt;span style="color:#ae81ff">5m &lt;/span> &lt;span style="color:#75715e"># 处理超时时间，默认为5min&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">smtp_auth_username&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;shitu-0071@163.com&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 邮箱帐户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">smtp_auth_password&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;******&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 邮箱授权码(注意是授权码,不知道自己查一下)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">wechat_api_url&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;https://qyapi.weixin.qq.com/cgi-bin/&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 企业微信地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 定义模板信心&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">templates&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;template/*.tmpl&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 定义路由树信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">route&lt;/span>: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group_by&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;alertname&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;cluster&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;service&amp;#39;&lt;/span>] &lt;span style="color:#75715e"># 报警分组依据,设置后会按照设定值分组,例如instance,alertname等&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 同标签警告会在作为一组警报发送&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group_wait&lt;/span>: &lt;span style="color:#ae81ff">10s &lt;/span> &lt;span style="color:#75715e"># 组内等待时间,触发阈值后,XXs后发送本组警报&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group_interval&lt;/span>: &lt;span style="color:#ae81ff">10s &lt;/span> &lt;span style="color:#75715e"># 每个组之前间隔时间(group_by设定的值划分的组)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">repeat_interval&lt;/span>: &lt;span style="color:#ae81ff">1m &lt;/span> &lt;span style="color:#75715e"># 重复发送警报的周期&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">(对于email配置中，此项不可以设置过低，否则将会由于邮件发送太多频繁，被smtp服务器拒绝)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">receiver&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;email&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 发送警报的接收者的名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 以下receivers name的名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">routes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">match&lt;/span>: &lt;span style="color:#75715e"># 普通匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">serverity&lt;/span>: &lt;span style="color:#ae81ff">critical &lt;/span> &lt;span style="color:#75715e"># 警告级别critical&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">receiver&lt;/span>: &lt;span style="color:#ae81ff">email &lt;/span> &lt;span style="color:#75715e"># 通过邮件发送&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">match_re&lt;/span>: &lt;span style="color:#75715e"># 正则匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">severity&lt;/span>: &lt;span style="color:#ae81ff">^(warning)$ &lt;/span> &lt;span style="color:#75715e"># 匹配警告级别为warning的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">receiver&lt;/span>: &lt;span style="color:#ae81ff">wechat &lt;/span> &lt;span style="color:#75715e"># 通过微信发送告警&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">receiver&lt;/span>: &lt;span style="color:#ae81ff">along &lt;/span> &lt;span style="color:#75715e"># 定义接收者&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">match&lt;/span>: &lt;span style="color:#75715e"># 匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">severity&lt;/span>: &lt;span style="color:#ae81ff">test &lt;/span> &lt;span style="color:#75715e"># 等级为test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 定义警报接收者信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">receivers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;email&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 警报&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">email_configs&lt;/span>: &lt;span style="color:#75715e"># 邮箱配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;******@163.com&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 接收警报的email配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">html&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;{{ template &amp;#34;test.html&amp;#34; . }}&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 设定邮箱的内容模板&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">headers&lt;/span>: { &lt;span style="color:#f92672">Subject&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;[WARN] 报警邮件&amp;#34;&lt;/span>} &lt;span style="color:#75715e"># 接收邮件的标题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">webhook_configs&lt;/span>: &lt;span style="color:#75715e"># webhook配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;http://127.0.0.1:5001&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">send_resolved&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;wechat&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">wechat_configs&lt;/span>: &lt;span style="color:#75715e"># 企业微信报警配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">send_resolved&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">to_party&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;1&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 接收组的id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">agent_id&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;1000002&amp;#39;&lt;/span> &lt;span style="color:#75715e"># (企业微信--&amp;gt;自定应用--&amp;gt;AgentId)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">corp_id&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;******&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 企业信息(我的企业--&amp;gt;CorpId[在底部])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">api_secret&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;******&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 企业微信(企业微信--&amp;gt;自定应用--&amp;gt;Secret)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">message&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;{{ template &amp;#34;test_wechat.html&amp;#34; . }}&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 发送消息模板的设定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 一个inhibition规则是在与另一组匹配器匹配的警报存在的条件下，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使匹配一组匹配器的警报失效的规则。两个警报必须具有一组相同的标签。 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">inhibit_rules&lt;/span>: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">source_match&lt;/span>: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">severity&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;critical&amp;#39;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_match&lt;/span>: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">severity&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;critical&amp;#39;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">equal&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;instance&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 已经发送的告警通知匹配到target_match和target_match_re规则，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 再有新的告警规则如果满足source_match&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 或者定义的匹配规则，并且已发送的告警与新产生的告警中equal定义的标签完全相同，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 则启动抑制机制，新的告警不会发送。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>以下是官方文档配置翻译的文档.供参考具体详细的配置介绍.不细看先略过到下个步骤.&lt;/p></description></item><item><title>windows10家庭版启用组策略gpedit.msc</title><link>https://blog.51ai.vip/posts/windows10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%90%AF%E7%94%A8%E7%BB%84%E7%AD%96%E7%95%A5gpedit-msc/</link><pubDate>Tue, 15 Oct 2019 11:35:11 +0000</pubDate><guid>https://blog.51ai.vip/posts/windows10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%90%AF%E7%94%A8%E7%BB%84%E7%AD%96%E7%95%A5gpedit-msc/</guid><description>&lt;h2 id="启用组策略gpeditmsc">启用组策略gpedit.msc&lt;/h2>
&lt;p>家庭版很多功能不能使用,凑巧用的就是家庭版. 还想使用gpedit.msc来关闭windows10的更新.
找到一个可行的方法.&lt;/p>
&lt;ol>
&lt;li>需要创建一个脚本. 如果你没有编辑器,那么可以创建一个文本文档.&lt;/li>
&lt;li>复制下面一段到本文中.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>@echo off
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pushd &lt;span style="color:#e6db74">&amp;#34;%~dp0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dir /b C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\s&lt;/span>ervicing&lt;span style="color:#ae81ff">\P&lt;/span>ackages&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &amp;gt;List.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dir /b C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\s&lt;/span>ervicing&lt;span style="color:#ae81ff">\P&lt;/span>ackages&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &amp;gt;&amp;gt;List.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> /f %%i in &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;findstr /i . List.txt 2^&amp;gt;nul&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span> dism /online /norestart /add-package:&lt;span style="color:#e6db74">&amp;#34;C:\Windows\servicing\Packages\%%i&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pause
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>如果编辑器直接复制一个文档另存到XX.cmd 即可. 如果是文本文档那么就是把后缀的.txt改成.cmd.&lt;/li>
&lt;li>管理员身份运行这个脚本.等他走完会退出,win+r 即可使用gpedit.msc了. 美滋滋!~&lt;/li>
&lt;/ol>
&lt;h2 id="禁用windows10更新">禁用windows10更新&lt;/h2>
&lt;ol>
&lt;li>win+r 输入gpedit.msc.&lt;/li>
&lt;li>“本地计算机策略”-“计算机配置”-“管理模板”-“Windows组件”-“Windows 更新”-“配置自动更新”. 点击配置自动更新设置为&lt;em>禁用&lt;/em>&lt;/li>
&lt;/ol></description></item><item><title>Prometueus.yml配置文件说明</title><link>https://blog.51ai.vip/posts/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/</link><pubDate>Wed, 09 Oct 2019 15:20:58 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/</guid><description>&lt;h2 id="整体配置">整体配置&lt;/h2>
&lt;p>prometueus.yml 配置文件注解与说明&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">global&lt;/span>: &lt;span style="color:#75715e"># 全局配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_interval&lt;/span>: &lt;span style="color:#ae81ff">15s &lt;/span> &lt;span style="color:#75715e"># 默认值为 1m，用于设置每次数据收集的间隔&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_timeout&lt;/span>: &lt;span style="color:#ae81ff">10s &lt;/span> &lt;span style="color:#75715e"># 默认10s,收集超时时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">evaluation_interval&lt;/span>: &lt;span style="color:#ae81ff">15s &lt;/span> &lt;span style="color:#75715e"># 记录规则/告警的执行周期 默认1m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">external_labels&lt;/span>: &lt;span style="color:#75715e"># 时间序列和警告与外部通信(远程存储/警报灯)时用的外部标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">monitor&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;ctmonitor&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">rule_files&lt;/span>: &lt;span style="color:#75715e"># 指定告警规则文件&amp;amp;记录文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;/usr/local/prometheus/rules.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">alerting&lt;/span>: &lt;span style="color:#75715e"># 告警管理配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">alert_relable_configs&lt;/span>: &lt;span style="color:#75715e"># 修改告警内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">alertmanagers&lt;/span>: &lt;span style="color:#75715e"># 告警管理起配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">static_configs&lt;/span>: &lt;span style="color:#75715e"># 静态配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>: &lt;span style="color:#75715e"># 警告器地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.16.23.12&lt;/span>:&lt;span style="color:#ae81ff">9093&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 用于配置 scrape 的 endpoint 配置需要 scrape 的 targets 以及相应的参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 抓取(pull)，即监控目标配置。默认只有主机本身的监控配置 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">scrape_configs&lt;/span>: &lt;span style="color:#75715e"># 抓取配置选项&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#ae81ff">prometheus &lt;/span> &lt;span style="color:#75715e"># 默认情况下分配给刮削度量的作业名称。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_interval&lt;/span>: &lt;span style="color:#ae81ff">5s &lt;/span> &lt;span style="color:#75715e"># 从这项工作中获取目标的频率。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_timeout&lt;/span>: &lt;span style="color:#ae81ff">3s &lt;/span> &lt;span style="color:#75715e"># 每次获取超时时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">honor_timestamps&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#75715e"># 默认false, 在获取时是否使用当前的时间戳&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metrics_path&lt;/span>: &lt;span style="color:#ae81ff">/metrics &lt;/span> &lt;span style="color:#75715e"># 从目标获取度量的http资源路径。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scheme&lt;/span>: &lt;span style="color:#ae81ff">http &lt;/span> &lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">static_configs&lt;/span>: &lt;span style="color:#75715e"># 为此作业标记的静态配置目标的列表。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>: &lt;span style="color:#75715e"># 目监控标&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.16.23.12&lt;/span>:&lt;span style="color:#ae81ff">9090&lt;/span> &lt;span style="color:#75715e"># 设备地址+端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;snmp-10.0.0.1&amp;#39;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_interval&lt;/span>: &lt;span style="color:#ae81ff">30s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_timeout&lt;/span>: &lt;span style="color:#ae81ff">20s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">static_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">10.0.0.1&lt;/span> &lt;span style="color:#75715e"># SNMP设备,端口默认5060&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metrics_path&lt;/span>: &lt;span style="color:#ae81ff">/snmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">module&lt;/span>: [&lt;span style="color:#ae81ff">if_mib]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">relabel_configs&lt;/span>: &lt;span style="color:#75715e"># 重定义标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">source_labels&lt;/span>: [&lt;span style="color:#ae81ff">__address__] &lt;/span> &lt;span style="color:#75715e"># 需要修改的标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">__param_target &lt;/span> &lt;span style="color:#75715e"># 改成的标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">source_labels&lt;/span>: [&lt;span style="color:#ae81ff">__param_target]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">__address__&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replacement&lt;/span>: &lt;span style="color:#ae81ff">172.16.23.12&lt;/span>:&lt;span style="color:#ae81ff">9117&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="各部分详解">各部分详解&lt;/h2>
&lt;hr>
&lt;p>部分官方文档的译文&lt;/p></description></item><item><title>curl: (3) Illegal characters found in URL</title><link>https://blog.51ai.vip/posts/curl-3-illegal-characters-found-in-url/</link><pubDate>Wed, 09 Oct 2019 14:45:13 +0000</pubDate><guid>https://blog.51ai.vip/posts/curl-3-illegal-characters-found-in-url/</guid><description>&lt;h3 id="curl-3-illegal-characters-found-in-url">curl: (3) Illegal characters found in URL&lt;/h3>
&lt;p>昨天在服务器上执行一个脚本,在linux新建的sh,把本地编辑器的内容粘贴到文件里.
结果执行的时候报错了. 问题就是 curl:(3)Illegal characters found in URL&lt;/p>
&lt;p>看着一脸懵逼啊!~&lt;/p>
&lt;p>google了一下,看到几个方法.其中一个我感觉还不错:&lt;/p>
&lt;ol>
&lt;li>首先vi 进入sh脚本 &lt;code>vi XXX.sh&lt;/code>&lt;/li>
&lt;li>&lt;code>:set ff?&lt;/code> # 这里我现实的是 &lt;em>fileforma=dos&lt;/em> 我这里显示是这个&lt;/li>
&lt;li>&lt;code>:set fileformat=unix&lt;/code> # 把fileforma 设置好&lt;/li>
&lt;li>&lt;code>:wq&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>通过这个方式,可以解决这个问题,网上也有人提出其他方法把\r\n 手动替换\n的.&lt;/p>
&lt;p>参考:
&lt;a href="http://www.itbiancheng.com/linux/4885.html">http://www.itbiancheng.com/linux/4885.html&lt;/a>&lt;/p></description></item><item><title>yaml规则</title><link>https://blog.51ai.vip/posts/yaml%E8%A7%84%E5%88%99/</link><pubDate>Tue, 24 Sep 2019 10:20:31 +0000</pubDate><guid>https://blog.51ai.vip/posts/yaml%E8%A7%84%E5%88%99/</guid><description>&lt;h2 id="yml-语法">yml 语法&lt;/h2>
&lt;p>最近经常配置一些服务，发现大部分都是yml类型文件。小记一下。&lt;/p>
&lt;h3 id="规则">规则&lt;/h3>
&lt;ol>
&lt;li>大小写敏感&lt;/li>
&lt;li>缩进表示层级&lt;/li>
&lt;li>注释 #&lt;/li>
&lt;/ol>
&lt;h3 id="结构">结构：&lt;/h3>
&lt;p>对象： ：符号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">admin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>数组： - 符号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">user&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">height&lt;/span>: &lt;span style="color:#ae81ff">178&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">age&lt;/span>: &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字符串： 默认无引号，内部含有空格或特殊符号需要加''&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">desc&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;he was cool&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>null： ~&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">value&lt;/span>: &lt;span style="color:#ae81ff">~&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>层级依靠缩进：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">job&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">jobconfig&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;snmp-sw01&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">target&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">192.168.1.88&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Grafana中文化</title><link>https://blog.51ai.vip/posts/grafana%E6%B1%89%E5%8C%96/</link><pubDate>Mon, 16 Sep 2019 15:37:46 +0000</pubDate><guid>https://blog.51ai.vip/posts/grafana%E6%B1%89%E5%8C%96/</guid><description>&lt;h2 id="可视化图表">可视化图表&lt;/h2>
&lt;p>Grafana是一个通用的可视化工具。通过Grafana可以管理用户权限，数据分析，查看，导出，设置告警等。&lt;/p>
&lt;h3 id="仪表盘dashboard">仪表盘Dashboard&lt;/h3>
&lt;p>通过数据源定义好可视化的数据来源之后，对于用户而言最重要的事情就是实现数据的可视化。&lt;/p>
&lt;h3 id="面板-panel">面板 Panel&lt;/h3>
&lt;p>Panel是Grafana中最基本的可视化单元。每一种类型的面板都提供了相应的查询编辑器(Query Editor)，让用户可以从不同的数据源（如Prometheus）中查询出相应的监控数据，并且以可视化的方式展现。
Grafana中所有的面板均以插件的形式进行使用，当前内置了5种类型的面板，分别是：Graph，Singlestat，Heatmap, Dashlist，Table以及Text。&lt;/p>
&lt;h2 id="翻译工作">&lt;strong>翻译工作&lt;/strong>&lt;/h2>
&lt;p>上面简单介绍了一下工具，主要是让我们方便查看监控的数据。这里我还是没有更深入的去研究公式等图形的设置。这里先主要写一下翻译方面的工作。&lt;/p>
&lt;p>公司也考虑展示内容为中文化比较好，这里Grafana没有提供语言包的方式来处理多语言问题。在我查看代码过程中，发现工具后台是在GO里面写死的很多导航，返回值等数据。前台是在页面上直接写的很多内容。所以我个人认为无法使用语言包来直接处理多语言问题。那就只好自己来搞定了。&lt;/p>
&lt;h3 id="翻译的内容">&lt;strong>翻译的内容&lt;/strong>&lt;/h3>
&lt;p>更具代码查看，主要分为两大部分：&lt;/p>
&lt;ul>
&lt;li>后端： go文件，主要内容在/pkg 目录下。&lt;/li>
&lt;li>前端： 1. 系统页面 2. 插件页面 这些在/public 目录下&lt;/li>
&lt;/ul>
&lt;h3 id="准备工作">&lt;strong>准备工作&lt;/strong>&lt;/h3>
&lt;p>首先git clone Grafana库
&lt;code>git clone https://github.com/chenweil/grafana.git&lt;/code>&lt;/p>
&lt;p>之后我们根据自己翻译的版本来检出自己的项目。
这里我们使用的v6.3.4 ，官方版本中可以查看到tag v6.3.4,并重命名自己的分支为6.3.4-chs：
&lt;code>git checkout -b 6.3.4-chs&lt;/code>&lt;/p>
&lt;p>通过 &lt;code>git branch&lt;/code> 命令查看自己处于哪个分支上。
&lt;img src="https://t1.picb.cc/uploads/2019/09/18/gFRkLM.png" alt="">
这里如果你不是很熟悉git命令行，可以使用sourcetree工具操作，相对来说点点鼠标就可以搞定了。&lt;/p>
&lt;p>我们在自己创建的分支就可以来处理我们的工作了。&lt;/p>
&lt;h3 id="前端调试环境">&lt;strong>前端调试环境&lt;/strong>&lt;/h3>
&lt;p>需要 npm，nodejs，yarn&lt;/p>
&lt;p>终端执行命令&lt;code> yarn install --pure-lockfile&lt;/code> 初始化. 如果没有报错的情况,证明ok.&lt;/p>
&lt;p>出现错误请先处理问题.
开启调试环境时候，是开启前端的热加载来协助我们调试。
这里安装完三个环境可能在执行 yarn start 时报错，这里如果你是在windows上，需要再安装一下sass.(根据报错来看问题，我这里遇到缺少sass问题)&lt;/p>
&lt;p>当我们yarn start 执行后，等待一段时间，build at 时间证明准备工作已完成，下面就需要我们在调试模式下测试了。&lt;/p>
&lt;p>还需要一个调试的Grafana服务程序，这里是windows环境，所以直接从官方下载了zip包，执行bin下的grafana-server.exe 来启动服务。需要再conf文件夹修改一下public前端资源的配置，如果不修改那么你翻译的信息是看不到的，服务会直接读取的当前的public，我们这需要读取翻译的public文件位置。&lt;/p>
&lt;p>配置在windows服务程序的 /conf/defaults.ini
修改内容：&lt;/p></description></item><item><title>Centos7安装nodejs</title><link>https://blog.51ai.vip/posts/centos7%E5%AE%89%E8%A3%85nodejs/</link><pubDate>Mon, 02 Sep 2019 10:15:01 +0000</pubDate><guid>https://blog.51ai.vip/posts/centos7%E5%AE%89%E8%A3%85nodejs/</guid><description>&lt;h2 id="安装nodejs">安装nodejs&lt;/h2>
&lt;h3 id="下载官方node的tar包">下载官方node的tar包:&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/&lt;/a>&lt;/em>&lt;/p>
&lt;p>&lt;code>wget https://nodejs.org/dist/v10.16.3/node-v10.16.3-linux-x64.tar.xz&lt;/code>&lt;/p>
&lt;h3 id="解压下载文件">解压下载文件&lt;/h3>
&lt;p>&lt;code>tar -xvf node-v10.16.3-linux-x64.tar.xz&lt;/code>&lt;/p>
&lt;h3 id="部署bin">部署bin&lt;/h3>
&lt;p>&lt;em>这里下载位置为家里面 ~/&lt;/em>&lt;/p>
&lt;p>&lt;code>ln -s ~/node-v10.16.3-linux-x64/bin/node /usr/bin/node&lt;/code>&lt;/p>
&lt;p>&lt;code>ln -s ~/node-v10.16.3-linux-x64/bin/npm /usr/bin/npm&lt;/code>&lt;/p>
&lt;p>一个是node 另一个是npm&lt;/p>
&lt;h3 id="验证">验证&lt;/h3>
&lt;p>node -v
npm -v&lt;/p></description></item><item><title>Prometheus-snmp_export部署</title><link>https://blog.51ai.vip/posts/prometheus-snmp-export%E9%83%A8%E7%BD%B2/</link><pubDate>Thu, 29 Aug 2019 10:06:01 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometheus-snmp-export%E9%83%A8%E7%BD%B2/</guid><description>&lt;h2 id="snmp">SNMP&lt;/h2>
&lt;p>SNMP(simple network management protocol)是因特网架构委员会IAB定义的一个应用层协议。SNMP广泛用于管理和监控网络设备，大多数专业的网络设备都有SNMP agent代理，这些代理被激活和配置后用于和SNMP管理 NMS(network management system)网络管理系统通信。&lt;/p>
&lt;h2 id="目的">目的&lt;/h2>
&lt;p>通过snmp_export,获取设备信息.&lt;/p>
&lt;h2 id="准备">准备&lt;/h2>
&lt;p>系统: centos7,docker19.
之前已经安装好 Prometheus&lt;/p>
&lt;p>此处目标设备是华为交换机 s2700&lt;/p>
&lt;h2 id="部署snmp_expoer">部署snmp_expoer&lt;/h2>
&lt;p>snmp.yml 配置文件不是自己定义的,是通过注册生成或下载的.这里我通过github下载配置文件.&lt;/p>
&lt;p>&lt;a href="https://github.com/prometheus/snmp_exporter/blob/master/snmp.yml">snmp.yml&lt;/a>&lt;/p>
&lt;ul>
&lt;li>配置snmp_export 配置文件 snmp.yml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">auth&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">community&lt;/span>: &lt;span style="color:#75715e">**交换机设置的团体名**&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查找到if_mib 再此段结尾中加入 上面的配置(大概行数6199).&lt;/p>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2019/08/29/gjuSAc.png" alt="demo">&lt;/p>
&lt;h3 id="部署snmp_expor">部署snmp_expor&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -d --restart always &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /home/along/snmp.yml:/etc/snmp_exporter/snmp.yml &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-p 9116:9116 --name snmp-exporter prom/snmp-exporter &lt;span style="color:#ae81ff">\ &lt;/span>--config.file&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/etc/snmp_exporter/snmp.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置华为s2700交换机">配置华为s2700交换机&lt;/h3>
&lt;p>自行查阅文档.懒得写了.&lt;/p>
&lt;h3 id="验证服务">验证服务&lt;/h3>
&lt;p>访问 http://IP:9116/metrics 能返回数据,snmp_export服务正常.&lt;/p>
&lt;p>测试是否能获取到目标设备的数据:
访问 http://IP:9116/snmp?target=DEVIP
能获取到数据,配置成功.&lt;/p>
&lt;p>&lt;strong>注意防火墙 把需要的端口加入规则中,不然访问不到排查绕弯路&lt;/strong>&lt;/p>
&lt;h3 id="配置promthues">配置promthues&lt;/h3>
&lt;p>修改 promthues.yml文件. 添加一个新的job.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#ae81ff">snmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">honor_timestamps&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">module&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">if_mib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_interval&lt;/span>: &lt;span style="color:#ae81ff">15s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scrape_timeout&lt;/span>: &lt;span style="color:#ae81ff">10s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metrics_path&lt;/span>: &lt;span style="color:#ae81ff">/snmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scheme&lt;/span>: &lt;span style="color:#ae81ff">http&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">static_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.16.23.253&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tag&lt;/span>: &lt;span style="color:#ae81ff">huawei-switch-s2700&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">relabel_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">source_labels&lt;/span>: [&lt;span style="color:#ae81ff">__address__]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">separator&lt;/span>: &lt;span style="color:#ae81ff">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#ae81ff">(.*)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">__param_target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replacement&lt;/span>: &lt;span style="color:#ae81ff">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">replace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">source_labels&lt;/span>: [&lt;span style="color:#ae81ff">__param_target]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">separator&lt;/span>: &lt;span style="color:#ae81ff">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#ae81ff">(.*)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replacement&lt;/span>: &lt;span style="color:#ae81ff">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">replace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">separator&lt;/span>: &lt;span style="color:#ae81ff">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regex&lt;/span>: &lt;span style="color:#ae81ff">(.*)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">target_label&lt;/span>: &lt;span style="color:#ae81ff">__address__&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replacement&lt;/span>: &lt;span style="color:#ae81ff">172.16.23.12&lt;/span>:&lt;span style="color:#ae81ff">9116&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">replace&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之前部署prometheus 有一个参数是为了热加载配置的.
这里需要reload一下配置,&lt;code>curl -X POST http://IP:9090/-/reload&lt;/code>,如果你没有就重启服务吧.&lt;/p></description></item><item><title>Prometheus+Grafana安装搭建</title><link>https://blog.51ai.vip/posts/prometheus-grafana%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA/</link><pubDate>Wed, 28 Aug 2019 16:23:05 +0000</pubDate><guid>https://blog.51ai.vip/posts/prometheus-grafana%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;blockquote>
&lt;p>Prometheus是由SoundCloud开发的开源监控报警系统和时序列数据库(TSDB)。Prometheus使用Go语言开发，是Google BorgMon监控系统的开源版本。
2016年由Google发起Linux基金会旗下的原生云基金会(Cloud Native Computing Foundation), 将Prometheus纳入其下第二大开源项目。Prometheus目前在开源社区相当活跃。
Prometheus和Heapster(Heapster是K8S的一个子项目，用于获取集群的性能数据。)相比功能更完善、更全面。Prometheus性能也足够支撑上万台规模的集群。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>Prometheus的特点:&lt;/p>
&lt;ol>
&lt;li>多维度数据模型。&lt;/li>
&lt;li>灵活的查询语言。&lt;/li>
&lt;li>不依赖分布式存储，单个服务器节点是自主的。&lt;/li>
&lt;li>通过基于HTTP的pull方式采集时序数据。&lt;/li>
&lt;li>可以通过中间网关进行时序列数据推送。&lt;/li>
&lt;li>通过服务发现或者静态配置来发现目标服务对象。&lt;/li>
&lt;li>支持多种多样的图表和界面展示，比如Grafana等。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;h2 id="架构图">架构图&lt;/h2>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2019/08/29/gjevPW.png" alt="结构图">&lt;/p>
&lt;h2 id="prometheus服务大致过程">Prometheus服务大致过程：&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Prometheus 定时去目标上抓取metrics(指标)数据，每个抓取目标需要暴露一个http服务的接口给它定时抓取。Prometheus支持通过配置文件、文本文件、Zookeeper、Consul、DNS SRV Lookup等方式指定抓取目标。Prometheus采用PULL的方式进行监控，即服务器可以直接通过目标PULL数据或者间接地通过中间网关来Push数据。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Prometheus在本地存储抓取的所有数据，并通过一定规则进行清理和整理数据，并把得到的结果存储到新的时间序列中。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Prometheus通过PromQL和其他API可视化地展示收集的数据。Prometheus支持很多方式的图表可视化，例如Grafana、自带的Promdash以及自身提供的模版引擎等等。Prometheus还提供HTTP API的查询方式，自定义所需要的输出。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PushGateway支持Client主动推送metrics到PushGateway，而Prometheus只是定时去Gateway上抓取数据。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Alertmanager是独立于Prometheus的一个组件，可以支持Prometheus的查询语句，提供十分灵活的报警方式。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Prometheus 支持通过SNMP协议获取mertics数据.通过配置job,利用snmp_export读取设备监控信息.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="指标metric类型">指标(Metric)类型&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Counter&lt;/strong> 计数器,从数据0开始累计计算. 理想状态会永远增长. 累计计算请求次数等&lt;/li>
&lt;li>&lt;strong>Gauges&lt;/strong> 瞬时状态的值. 可以任意变化的数值，适用 CPU 使用率 温度等&lt;/li>
&lt;li>&lt;strong>Histogram&lt;/strong> 对一段时间范围内数据进行采样，并对所有数值求和与统计数量、柱状图. 某个时间对某个度量值，分组，一段时间http相应大小，请求耗时的时间。&lt;/li>
&lt;li>&lt;strong>Summary&lt;/strong> 同样产生多个指标，分别带有后缀_bucket(仅histogram)、_sum、_count&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Histogram和Summary都可以获取分位数。
通过Histogram获得分位数，要将直方图指标数据收集prometheus中， 然后用prometheus的查询函数&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/functions/#histogram_quantile">histogram_quantile()&lt;/a>计算出来。 Summary则是在应用程序中直接计算出了分位数。
&lt;a href="https://prometheus.io/docs/practices/histograms/">Histograms and summaries&lt;/a>中阐述了两者的区别，特别是Summary的的分位数不能被聚合。
注意，这个不能聚合不是说功能上不支持，而是说对分位数做聚合操作通常是没有意义的。
&lt;a href="https://latencytipoftheday.blogspot.com/2014/06/latencytipoftheday-you-cant-average.html">LatencyTipOfTheDay: You can’t average percentiles. Period&lt;/a>中对“分位数”不能被相加平均的做了很详细的说明：分位数本身是用来切分数据的，它们的平均数没有同样的分位效果。&lt;/p>&lt;/blockquote>
&lt;p>主要我们监控用到最上面两种,下面两种类型目前我没有接触,上面这段文字与介绍引用自&lt;a href="https://www.lijiaocn.com/%E9%A1%B9%E7%9B%AE/2018/08/03/prometheus-usage.html#metric%E7%B1%BB%E5%9E%8B">lijiaocn&lt;/a>&lt;/p>
&lt;h2 id="安装prometheus">安装Prometheus&lt;/h2>
&lt;p>&lt;strong>本次搭建利用docker方式.整体搭建完成需要两个容器.暂不配置告警相关,只做监控数据&lt;/strong>&lt;/p>
&lt;h3 id="前提">前提&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>搭建位置: &lt;em>/home/aLong/prometheus/&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>环境:docker19.03.1 需要指定版本请查阅官方文档.&lt;/p></description></item><item><title>Centos5不升级内核更新</title><link>https://blog.51ai.vip/posts/centos5%E4%B8%8D%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E6%9B%B4%E6%96%B0/</link><pubDate>Fri, 23 Aug 2019 17:37:03 +0000</pubDate><guid>https://blog.51ai.vip/posts/centos5%E4%B8%8D%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E6%9B%B4%E6%96%B0/</guid><description>&lt;h3 id="前提">前提&lt;/h3>
&lt;p>公司需要环境Centos5, 又不能升级内核.&lt;/p>
&lt;p>查了一下 大概是 需要 &lt;code>yum –exclude=kernel* update&lt;/code> 或者修改 yum.conf&lt;/p>
&lt;h3 id="测试一下-出现一个问题">测试一下 出现一个问题:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Loaded plugins: fastestmirror, security
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loading mirror speeds from cached hostfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>YumRepo Error: All mirror URLs are not using ftp, http&lt;span style="color:#f92672">[&lt;/span>s&lt;span style="color:#f92672">]&lt;/span> or file.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Eg. Invalid release/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>removing mirrorlist with no valid mirrors: /var/cache/yum/base/mirrorlist.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Error: Cannot find a valid baseurl &lt;span style="color:#66d9ef">for&lt;/span> repo: base
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据查询到的信息是,没有正常的源.&lt;/p>
&lt;h3 id="解决问题-根据网上的源地址-修改一下">解决问题 根据网上的源地址 修改一下:&lt;/h3>
&lt;p>位置: &lt;em>/etc/yum.repos.d/CentOS-Base.repo&lt;/em>&lt;/p>
&lt;h3 id="修改内容">修改内容:&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">[base]
name=CentOS-5.11 - Base
#mirrorlist=http://mirrorlist.centos.org/?release=5.11&amp;amp;arch=$basearch&amp;amp;repo=os
baseurl=http://vault.centos.org/5.11/os/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5

#released updates
[updates]
name=CentOS-5.11 - Updates
#mirrorlist=http://mirrorlist.centos.org/?release=5.11&amp;amp;arch=$basearch&amp;amp;repo=updates
baseurl=http://vault.centos.org/5.11/updates/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5

#packages used/produced in the build but not released
[addons]
name=CentOS-5.11 - Addons
#mirrorlist=http://mirrorlist.centos.org/?release=5.11&amp;amp;arch=$basearch&amp;amp;repo=addons
baseurl=http://vault.centos.org/5.11/addons/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5

#additional packages that may be useful
[extras]
name=CentOS-5.11 - Extras
#mirrorlist=http://mirrorlist.centos.org/?release=5.11&amp;amp;arch=$basearch&amp;amp;repo=extras
baseurl=http://vault.centos.org/5.11/extras/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5

#additional packages that extend functionality of existing packages
[centosplus]
name=CentOS-5.11 - Plus
#mirrorlist=http://mirrorlist.centos.org/?release=5.11&amp;amp;arch=$basearch&amp;amp;repo=centosplus
baseurl=http://vault.centos.org/5.11/centosplus/$basearch/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5

#contrib - packages by Centos Users
[contrib]
name=CentOS-5.11 - Contrib
#mirrorlist=http://mirrorlist.centos.org/?release=5.11&amp;amp;arch=$basearch&amp;amp;repo=contrib
baseurl=http://vault.centos.org/5.11/contrib/$basearch/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
&lt;/code>&lt;/pre>&lt;p>之后 再使用上面的yum 去更新,发现yum 语句是有问题的.&lt;/p></description></item><item><title>Laradock安装与使用</title><link>https://blog.51ai.vip/posts/laradock%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 15 Aug 2019 10:01:03 +0000</pubDate><guid>https://blog.51ai.vip/posts/laradock%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>&lt;h3 id="laradock-安装与使用">Laradock 安装与使用&lt;/h3>
&lt;p>&lt;a href="https://laradock.io">官网&lt;/a>&lt;/p>
&lt;p>GitHub: &lt;a href="https://github.com/laradock/laradock">https://github.com/laradock/laradock&lt;/a>&lt;/p>
&lt;h3 id="要求">要求&lt;/h3>
&lt;blockquote>
&lt;ul>
&lt;li>Git&lt;/li>
&lt;li>Docker &amp;gt;= 17.12&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;h3 id="项目的位置">项目的位置&lt;/h3>
&lt;ol>
&lt;li>已有项目情况: &lt;code>git submodule add https://github.com/Laradock/laradock.git&lt;/code> 克隆到项目根目录.&lt;/li>
&lt;/ol>
&lt;p>结构 :&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>project-a&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;ul>
&lt;li>laradock-a&lt;/li>
&lt;li>project-b
&lt;ul>
&lt;li>laradock-b&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>没有项目情况: &lt;code>git clone https://github.com/laradock/laradock.git&lt;/code> 克隆后,在同级部署项目.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;/blockquote>
&lt;ul>
&lt;li>laradock&lt;/li>
&lt;li>project-x&lt;/li>
&lt;li>project-y&lt;/li>
&lt;/ul>
&lt;h3 id="启动环境">启动环境&lt;/h3>
&lt;p>clone下来还没有生成.&lt;/p>
&lt;p>进入laradock目录,编辑Web服务器站点配置. &lt;code>cp env-exalpme .env&lt;/code>
环境是laradock环境,里面可以对相应的版本,配置进行修改.
例如指定mysql版本为5.7 ,&lt;code>vim .env&lt;/code> ,搜索到mysql部分, 修改&lt;strong>MYSQL_VERSION=5.7.26&lt;/strong> 保存退出.(这里还没生成容器前可以统一配置好需要的环境,再生成容器.)&lt;/p>
&lt;p>例如我们需要启动环境需要 mysql,redis,nginx.&lt;/p>
&lt;p>执行 docker-compose up -d nginx mysql redis&lt;/p>
&lt;p>经过漫长等待后,可以得到我们想要的环境,通过 docker ps 或者 docker-compose ps 查看容器.&lt;/p>
&lt;p>如果先生成容器,在之后编辑环境时,需要停掉容器,修改完 build之后 再start 容器.
例如修改nginx:&lt;/p>
&lt;ol>
&lt;li>&lt;code>docker-compose stop nginx&lt;/code>&lt;/li>
&lt;li>修改.env 或者 nginx conf&lt;/li>
&lt;li>&lt;code>docker-compose build nginx&lt;/code> (完全重建,加参数: &amp;ndash;no-cache)&lt;/li>
&lt;li>&lt;code>docker-compose start nginx&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="nginx-配置项目">Nginx 配置项目&lt;/h3>
&lt;p>我们再laradock中,进入nginx/sites/ 下.复制laravel.conf.example 命名为我们的项目.&lt;/p></description></item><item><title>SwitchHosts管理编辑hosts工具</title><link>https://blog.51ai.vip/posts/switchhosts%E7%AE%A1%E7%90%86%E7%BC%96%E8%BE%91hosts%E5%B7%A5%E5%85%B7/</link><pubDate>Wed, 14 Aug 2019 09:41:55 +0000</pubDate><guid>https://blog.51ai.vip/posts/switchhosts%E7%AE%A1%E7%90%86%E7%BC%96%E8%BE%91hosts%E5%B7%A5%E5%85%B7/</guid><description>&lt;h2 id="管理hosts工具-switchhosts">管理Hosts工具 SwitchHosts&lt;/h2>
&lt;p>地址: &lt;a href="https://github.com/oldj/SwitchHosts">SwitchHosts&lt;/a>&lt;/p>
&lt;p>开发工程中,针对不同项目设置不同的域名.&lt;/p>
&lt;p>办法很多,例如直接编辑hosts文件,通过环境工具提供的功能设置等.&lt;/p>
&lt;p>现在要安利一款便捷实用的工具. &lt;a href="https://github.com/oldj/SwitchHosts">SwitchHosts&lt;/a>!!&lt;/p>
&lt;p>为什么,首先这工具是多平台支持的,我们可以在不同系统中使用.如果之前是靠编辑hosts文件的话,那不同的hosts位置还需要记忆一下,当然这也算不了什么难事.&lt;/p>
&lt;p>他的有点不在于能简单编辑hosts文件,也有之前的记录,还可以通过url来读取云端的hosts信息.导入导出功能等. 总之又可以偷懒了.&lt;/p>
&lt;p>主界面:&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/08/14/mPOsoT.png" alt="界面">&lt;/p>
&lt;p>我们可以编辑不同host 分组,使用时打开开关按钮即可使用.&lt;br>
示例中使用的My hosts中的配置&lt;/p>
&lt;p>配置界面:&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/08/14/mPOgW4.png" alt="配置">&lt;/p>
&lt;p>支持中文,主题黑白两色.&lt;/p></description></item><item><title>VMware安装MacOS系统</title><link>https://blog.51ai.vip/posts/vmware%E5%AE%89%E8%A3%85macos%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 12 Aug 2019 11:29:38 +0000</pubDate><guid>https://blog.51ai.vip/posts/vmware%E5%AE%89%E8%A3%85macos%E7%B3%BB%E7%BB%9F/</guid><description>&lt;h2 id="虚拟机安装-macos">虚拟机安装 macOS&lt;/h2>
&lt;h4 id="准备工作">准备工作:&lt;/h4>
&lt;ul>
&lt;li>VM关闭进程,利用macOS Unlocker修改VM使其能安装macOS系统, 执行程序 win-install.cmd 使用管理员权限运行脚本.&lt;/li>
&lt;li>准备好macOS镜象.&lt;/li>
&lt;li>利用VM创建虚机,系统类型选择macOS,版本号选择与下载的镜象版本相同.&lt;/li>
&lt;/ul>
&lt;h3 id="装系统">装系统:&lt;/h3>
&lt;ul>
&lt;li>启动虚拟机,并通过cdrom加载镜象.&lt;/li>
&lt;li>首次安装需要先利用系统内硬盘工具格式化硬盘,之后利用安装工具进行系统安装.&lt;/li>
&lt;/ul>
&lt;h3 id="异常问题">异常问题:&lt;/h3>
&lt;ul>
&lt;li>开启虚拟机弹出错误:vcpu-0 错误.&lt;/li>
&lt;/ul>
&lt;p>修改虚机镜象文件.vmx 在smc.present = “TRUE”下面插入一行代码: smc.version = 0&lt;/p>
&lt;ul>
&lt;li>不能正常登陆APPID&lt;/li>
&lt;/ul>
&lt;p>需要修改虚拟机,利用Chameleon Wizard 伪造设备信息. 保存 生成的信息 去修改镜象所在文件下的.vmx&lt;/p>
&lt;p>修改 board-id.reflectHost = &amp;ldquo;TRUE&amp;rdquo; 为FALSE,并在下面插入需要的伪造设备信息例子:&lt;/p>
&lt;p>board-id = &amp;ldquo;Mac-94245B3640C91C81&amp;rdquo;
hw.model.reflectHost = &amp;ldquo;FALSE&amp;rdquo;
hw.model = &amp;ldquo;MacBook Pro&amp;rdquo;
serialNumber.reflectHost = &amp;ldquo;FALSE&amp;rdquo;
serialNumber = &amp;ldquo;C02JJ8B3DH2G&amp;rdquo;
smbios.reflectHost = &amp;ldquo;FALSE&amp;rdquo;&lt;/p>
&lt;p>这段信息中的board-id 与 serialNumber 不要与例子的相同.其他可以参考.最后保存,重启.&lt;/p>
&lt;p>重启之后尝试是否可以登陆市场.&lt;/p></description></item><item><title>数据库迁移</title><link>https://blog.51ai.vip/posts/laravel5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/</link><pubDate>Fri, 26 Jul 2019 14:30:25 +0000</pubDate><guid>https://blog.51ai.vip/posts/laravel5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/</guid><description>&lt;h2 id="laravel5-数据库迁移笔记">Laravel5 数据库迁移笔记&lt;/h2>
&lt;ul>
&lt;li>
&lt;h3 id="创建迁移文件">创建迁移文件&lt;/h3>
&lt;p>命令: &lt;code>make:migration&lt;/code>&lt;/p>
&lt;p>举例: &lt;code>php artisan make:migration create_users_table --create=users&lt;/code>&lt;/p>
&lt;p>生成位置: 项目/database/migrations/下 文件名已时间开头,后面是自己创建迁移文件名字.&lt;/p>
&lt;p>&amp;ndash;creat 指定数据库中表的名字&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="编辑迁移文件">编辑迁移文件&lt;/h3>
&lt;p>打开迁移文件:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#a6e22e">Illuminate\Support\Facades\Schema&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#a6e22e">Illuminate\Database\Schema\Blueprint&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#a6e22e">Illuminate\Database\Migrations\Migration&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CreateUsersTable&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> &lt;span style="color:#a6e22e">Migration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * Run the migrations.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * @return void
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">up&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Schema&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">create&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;users&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">Blueprint&lt;/span> $table) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">bigIncrements&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;id&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">string&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">string&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;email&amp;#39;&lt;/span>)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">unique&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">timestamp&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;email_verified_at&amp;#39;&lt;/span>)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">nullable&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">string&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;password&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">rememberToken&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">timestamps&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * Reverse the migrations.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * @return void
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">down&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Schema&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">dropIfExists&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;users&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>文件中有两个方法,up/down . 可以理解为创建执行时up方法,rollback时候是执行down方法.

up方法中:
 创建了7个字段,表明为 users.
 
 创建字段操作 `$table-&amp;gt;` 后面加上字段类型 `string` ,指定字段名称`(&amp;#39;name&amp;#39;)` 字段被指 `-&amp;gt;comment(&amp;#39;名子&amp;#39;)`; 
 
 具体每个字段类型,以及其他属性定义,请查询手册.
 


* ### 执行迁移文件

 这个迁移文件是创建表,所以down是删除表.也就是当我们执行 `php artisan migrate:rollback` 回滚到上一步就是把这表删除(前提创建之后).

 执行命令: `php artisan migrate` 执行迁移文件创建表单.
 
 如果我们后悔创建:可以执行回滚. `php artisan migrate:rollback ` --step 指定回滚次数 `php artisan migrate:rollback --step=2` 执行回滚迁移2次钱.
 
 `php artisan migrate:reset` 回滚所有迁移
 
 `php artisan migrate:fresh` 删除所有回滚
 
 
* ### 为前迁移文件修改字段,改名.
当我们上面的文件执行后,需要增加一个字段,那么就需要新建一个迁移文件.不要直接操作数据库.

 `php artisan make:migration add_id_to_users_table --table=users` 
 
 这里为users表新增身份证字段.
 
 打开文件 新建身份证id列. 
 
 之后我们执行迁移文件.成功后就能看到新得ID字段已经出现.对于编辑和修改都可以.

 `$table-&amp;gt;renameColumn(&amp;#39;ID&amp;#39;, &amp;#39;id&amp;#39;)` 改名id
 
 对应dorop 也需要dropColumn 此字段.
 
 最后执行此迁移文件.


 
&lt;/code>&lt;/pre></description></item><item><title>Composer笔记</title><link>https://blog.51ai.vip/posts/composer%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 15 Jul 2019 17:24:45 +0000</pubDate><guid>https://blog.51ai.vip/posts/composer%E7%AC%94%E8%AE%B0/</guid><description>&lt;h3 id="composer---laravel5">composer - laravel5&lt;/h3>
&lt;h4 id="创建laravel项目">创建laravel项目：&lt;/h4>
&lt;p>&lt;code>conposer create-project laravel/laravel=5.8.* --prefer-dist ./XXX&lt;/code>&lt;/p>
&lt;p>laravel=5.8.* 这里代表要部署5.8中最高版本 &amp;ndash;prefer-dist 参数代表优先下载zip&lt;/p>
&lt;h4 id="安装vendor">安装vendor:&lt;/h4>
&lt;p>&lt;code>composer install&lt;/code>&lt;/p>
&lt;p>&lt;code>composer install --prefer-dist&lt;/code>&lt;/p>
&lt;h4 id="更新">更新：&lt;/h4>
&lt;p>&lt;code>composer update&lt;/code>&lt;/p>
&lt;h4 id="composer版本更新">composer版本更新：&lt;/h4>
&lt;p>&lt;code>composer self-update&lt;/code>&lt;/p>
&lt;h4 id="利用composer-创建laravel控制器">利用composer 创建laravel控制器：&lt;/h4>
&lt;p>&lt;code>php artisan make:controller HomeController&lt;/code>
会在http下 创建一Home的控制器&lt;/p>
&lt;p>如果存在分目录情况，需要指定目录：
&lt;code>php artisan make:controller Home/HomeController&lt;/code>&lt;/p>
&lt;h4 id="laravel-config">Laravel config:&lt;/h4>
&lt;p>编写一些类的别名，controller中 use 简短的别名为目的。&lt;/p>
&lt;p>位置：config/app 存在一数组 aliases 在里面添加&lt;/p>
&lt;h4 id="创建模型">创建模型：&lt;/h4>
&lt;p>创建一个user 的model&lt;/p>
&lt;p>&lt;code>php artisan make:model User&lt;/code>&lt;/p>
&lt;p>指定目录加入目录即可&lt;/p>
&lt;h4 id="获取项目路由">获取项目路由：&lt;/h4>
&lt;p>&lt;code>php artisan route:list&lt;/code>&lt;/p>
&lt;h4 id="composer在项目中安装三方库时候出现报错">composer在项目中安装三方库时候出现报错：&lt;/h4>
&lt;p>执行命令： &lt;code>composer Install&lt;/code>&lt;/p>
&lt;p>返回错误： Your requirements could not be resolved to an installable set of packages.&lt;/p></description></item><item><title>无版权素材站点</title><link>https://blog.51ai.vip/posts/%E6%97%A0%E7%89%88%E6%9D%83%E7%B4%A0%E6%9D%90%E7%AB%99%E7%82%B9/</link><pubDate>Thu, 27 Jun 2019 09:58:04 +0000</pubDate><guid>https://blog.51ai.vip/posts/%E6%97%A0%E7%89%88%E6%9D%83%E7%B4%A0%E6%9D%90%E7%AB%99%E7%82%B9/</guid><description>&lt;h4 id="最近找素材收集一些站点">最近找素材收集一些站点&lt;/h4>
&lt;pre>&lt;code>无版权对于我们来说可以放心使用
&lt;/code>&lt;/pre>
&lt;p>列表如下：&lt;/p>
&lt;p>&lt;a href="http://www.pexels.com/">http://www.pexels.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.gratisography.com/">http://www.gratisography.com/&lt;/a>　&lt;/p>
&lt;p>&lt;a href="https://visualhunt.com/">https://visualhunt.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://finda.photo">http://finda.photo&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://cupcake.nilssonlee.se/">http://cupcake.nilssonlee.se/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.photock.jp/">https://www.photock.jp/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://pngimg.com/">http://pngimg.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.designerspics.com">http://www.designerspics.com&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://kaboompics.com/">http://kaboompics.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://pixabay.com/">https://pixabay.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://visualhunt.com/">https://visualhunt.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://finda.photo">http://finda.photo&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.freemagebank.com/">http://www.freemagebank.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://stocksnap.io/">https://stocksnap.io/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://picjumbo.com/">http://picjumbo.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://stokpic.com/">http://stokpic.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://cn.freeimages.com/">https://cn.freeimages.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.imcreator.com/free">http://www.imcreator.com/free&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.piqsels.com/zh">https://www.piqsels.com/zh&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://magdeleine.co/browse/">https://magdeleine.co/browse/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://colorhub.me/">https://colorhub.me/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://picjumbo.com/">https://picjumbo.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://streetwill.co/">http://streetwill.co/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.foodiesfeed.com/">https://www.foodiesfeed.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.peakpx.com/">http://www.peakpx.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.polayoutu.com/collections">http://www.polayoutu.com/collections&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://negativespace.co/">https://negativespace.co/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://freeforcommercialuse.net/">https://freeforcommercialuse.net/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mmtstock.com/">https://mmtstock.com/&lt;/a>&lt;/p></description></item><item><title>Hexo笔记</title><link>https://blog.51ai.vip/posts/hexo%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 04 Jun 2019 10:46:48 +0000</pubDate><guid>https://blog.51ai.vip/posts/hexo%E7%AC%94%E8%AE%B0/</guid><description>&lt;h3 id="多tag">多tag&lt;/h3>
&lt;p>文章中 多tag时,无法直接, 空格这种.&lt;/p>
&lt;p>方式一:&lt;/p>
&lt;p>&lt;code>tags: [tag1,tag2]&lt;/code>&lt;/p>
&lt;p>方式二:&lt;/p>
&lt;pre tabindex="0">&lt;code>tags:
- tag1
- tag2 
&lt;/code>&lt;/pre></description></item><item><title>Python建立SocketSSL连接</title><link>https://blog.51ai.vip/posts/python%E5%BB%BA%E7%AB%8Bsocketssl%E8%BF%9E%E6%8E%A5/</link><pubDate>Tue, 04 Jun 2019 10:23:11 +0000</pubDate><guid>https://blog.51ai.vip/posts/python%E5%BB%BA%E7%AB%8Bsocketssl%E8%BF%9E%E6%8E%A5/</guid><description>&lt;h3 id="python-socket连接">Python Socket连接&lt;/h3>
&lt;p>5月中旬遇到一个功能,需要利用Python建立Socket tcp连接,于设备通讯发送相关数据.&lt;/p>
&lt;p>这块没接触,Python也是hello world水平.&lt;/p>
&lt;p>赶紧恶补一下:&lt;/p>
&lt;p>Socket是网络编程的一个抽象概念。&lt;/p>
&lt;p>通常我们用一个Socket表示“打开了一个网络链接”，打开一个Socket需要知道目标计算机的IP地址和端口号，再指定协议类型。&lt;/p>
&lt;p>服务端我也不知道什么样,这里只记录客户端的相关.&lt;/p>
&lt;p>这里我们得到一个文档说,需要建立socket SSL 连接,通过XML格式发送数据.&lt;/p>
&lt;h4 id="非ssl的socket">非ssl的socket:&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建一个socket:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>socket(socket&lt;span style="color:#f92672">.&lt;/span>AF_INET, socket&lt;span style="color:#f92672">.&lt;/span>SOCK_STREAM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 建立连接:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s&lt;span style="color:#f92672">.&lt;/span>connect((&lt;span style="color:#e6db74">&amp;#39;192.168.1.230&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ssl-socket">SSL socket:&lt;/h4>
&lt;p>端口是3344,ssl跳过验证,如果验证参数需要修改.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>socket(socket&lt;span style="color:#f92672">.&lt;/span>AF_INET, socket&lt;span style="color:#f92672">.&lt;/span>SOCK_STREAM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c &lt;span style="color:#f92672">=&lt;/span> ssl&lt;span style="color:#f92672">.&lt;/span>wrap_socket(s, cert_reqs&lt;span style="color:#f92672">=&lt;/span>ssl&lt;span style="color:#f92672">.&lt;/span>CERT_NONE)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c&lt;span style="color:#f92672">.&lt;/span>connect((&lt;span style="color:#e6db74">&amp;#39;192.168.1.230&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;3344&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这下与那台设备可以正常通讯了,后面实现具体功能就ok了.&lt;/p></description></item><item><title>Ubutun16.04安装Python</title><link>https://blog.51ai.vip/posts/ubutun16-04%E5%AE%89%E8%A3%85python/</link><pubDate>Fri, 24 May 2019 11:17:59 +0000</pubDate><guid>https://blog.51ai.vip/posts/ubutun16-04%E5%AE%89%E8%A3%85python/</guid><description>&lt;h3 id="目的">目的&lt;/h3>
&lt;p>安装python3.7.3
安装pip&lt;/p>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;ul>
&lt;li>系统内置python2.X,去除默认python的软链, &lt;code>sudo rm /usr/bin/python&lt;/code>&lt;/li>
&lt;li>安装一些软件包&amp;amp;软件包保持最新状态.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>sudo apt-get update&lt;/code>&lt;/p>
&lt;p>&lt;code>sudo apt-get install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget&lt;/code>&lt;/p>
&lt;h3 id="安装python">安装Python&lt;/h3>
&lt;p>通过编译安装python&lt;/p>
&lt;p>默认我下载在home里, &lt;code>cd&lt;/code>&lt;/p>
&lt;p>下载新python文件, &lt;code>wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz &lt;/code>&lt;/p>
&lt;p>解压文件, &lt;code>tar zxf Python-3.7.3.tgz&lt;/code>&lt;/p>
&lt;p>把这个文件拷贝到放置的位置. 这里我放到/usr/local/python &lt;code>mkdir -p /usr/local/python&lt;/code>&lt;/p>
&lt;p>进入这个目录, 执行 &lt;code>./configure --enable-optimizations&lt;/code>
之后执行 &lt;code>sudo make -j 8&lt;/code> 这里8根据设备cpu核心数来的,不知道你可以写1(手动滑稽)&lt;/p>
&lt;p>make之后 该 &lt;del>make install&lt;/del> 嘛? NO! 是 &lt;code>sudo make altinstall&lt;/code>&lt;/p>
&lt;p>装完之后, 可以尝试 python &amp;ndash;version 看看有没有, 如果没有或者版本不对.可能是准备里你没有删除 /usr/bin/python 或者这个不存在.
需要手动添加一下,我这个是没有给我创建成功.&lt;/p>
&lt;p>&lt;code>sudo ln -s /usr/local/Python-3.7.3/python /usr/bin/python&lt;/code>&lt;/p></description></item><item><title>Go学习笔记</title><link>https://blog.51ai.vip/posts/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 15 May 2019 11:05:52 +0000</pubDate><guid>https://blog.51ai.vip/posts/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;h3 id="变量">变量&lt;/h3>
&lt;p>var 声明,支持类型判断.&lt;/p>
&lt;p>&lt;code>var name string&lt;/code> string类型 name&lt;/p>
&lt;p>&lt;code>var s string&lt;/code> 值初始化&lt;/p>
&lt;p>&lt;code>var age = 20&lt;/code> age 类型自动推断&lt;/p>
&lt;p>&lt;code>height := 165&lt;/code> 简短声明(仅限函数使用)&lt;/p>
&lt;p>&lt;code>i,j,k := 3.8,true,100&lt;/code> 声明一组变量&lt;/p>
&lt;p>&lt;code>_, res := 123,321&lt;/code> _特殊变量名,赋予他的值会被丢弃&lt;/p>
&lt;h3 id="常量">常量&lt;/h3>
&lt;p>const 声明&lt;/p>
&lt;p>&lt;code>const Pi = 3.14&lt;/code> 声明一个常量Pi&lt;/p>
&lt;pre tabindex="0">&lt;code>const(
 apple = &amp;#34;fruit&amp;#34;
 banana
 )
&lt;/code>&lt;/pre>&lt;p>banana 常量未定义初始化值会与apple值相同&lt;/p>
&lt;h3 id="数据类型">数据类型&lt;/h3>
&lt;p>boolean,整型,浮点型,字符串,错误&lt;/p>
&lt;ul>
&lt;li>
&lt;p>布尔
bool 初始化默认fasle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>整型&lt;/p>
&lt;p>int8,int16,int32,int64 (有符号)&lt;/p>
&lt;p>uint8(byte),uint16,uint32(rune),uint64 (无符号)&lt;/p>
&lt;p>uintptr&lt;/p>
&lt;p>byte,rune 与uint8,uint32别名&lt;/p>
&lt;p>整形初始化默认值0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>浮点型&lt;/p>
&lt;p>float32,float64(默认浮点类型)&lt;/p>
&lt;p>complex64,complex128&lt;/p>
&lt;p>float32,float64 初始化默认值0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字符串&lt;/p>
&lt;p>双引号或``,UTF8编码,\转义&lt;/p>
&lt;p>初始化默认值&amp;quot;&amp;quot;&lt;/p>
&lt;p>修改需要转换类型为 rune或byte 操作后再转换&lt;/p></description></item><item><title>redis笔记</title><link>https://blog.51ai.vip/posts/redis%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 25 Apr 2019 17:12:52 +0000</pubDate><guid>https://blog.51ai.vip/posts/redis%E7%AC%94%E8%AE%B0/</guid><description>&lt;h2 id="redis笔记">redis笔记&lt;/h2>
&lt;p>单进程,默认16库,&lt;/p>
&lt;p>select N 切换库&lt;/p>
&lt;p>flushdb 清空库&lt;/p>
&lt;h3 id="类型">类型&lt;/h3>
&lt;ul>
&lt;li>string 字符串&lt;/li>
&lt;li>list 列表&lt;/li>
&lt;li>set 集合&lt;/li>
&lt;li>sorted set有序集合&lt;/li>
&lt;li>hash哈希&lt;/li>
&lt;/ul>
&lt;p>一个字符串支持512M&lt;/p>
&lt;p>有序集合 每个元素会关联一个double类型分数。成员唯一，分数可以重复。&lt;/p>
&lt;h3 id="常用命令">常用命令&lt;/h3>
&lt;h5 id="key">key：&lt;/h5>
&lt;pre>&lt;code>keys *
 
exists key

move key db 移除key 从库中

expire key 为key 设置过期时间

ttl key 查看多少秒过期，-1 永不过期， -2已过期

type key 查看类型

del key 删除
&lt;/code>&lt;/pre>
&lt;h3 id="string">string：&lt;/h3>
&lt;p>getrange key 0-N setrange key 0-N XXX 获取字符串范围内容， 设置范围内为XXX&lt;/p>
&lt;p>setex 设置生命值多少秒 setnx key 设置一个不存在的key&lt;/p>
&lt;p>mset mget msetnx&lt;/p>
&lt;h3 id="list">list：&lt;/h3>
&lt;pre>&lt;code>lpush rpush lrange
 
lpop rpop
 
lindex
 
llen

lrem key 2 value 删除2个value
 
ltrim key 0-N 截取并复制给key （其他的删除了）

rpoplpush 弹出前面key的值 加入后面的key中

lset key index value 设置key中 index下标的值

linsert key before/afrer value1 value2 key中1值得前面后后面加入2值 
&lt;/code>&lt;/pre>
&lt;h3 id="set">set：&lt;/h3>
&lt;pre>&lt;code>sadd key value 添加到key集合

smembers key 查询集合 

sismember key m 查询m是否在key集合中

scard key 集合ket的基数

spop key 随机移除一个元素并返回元素的值

srem key m 移除m从key的集合中

smove K1 K2 m 将k1的m一刀k2里

sinter key1 key2 交集

sunion key1 key2 并集

sdiff key1 key2 差集 
&lt;/code>&lt;/pre>
&lt;h3 id="hash">hash：&lt;/h3>
&lt;pre>&lt;code>hset user name ali 

hset user age 33 设置user数据

hget user name 获取user.name

hmset human name tom age 44 设置多数据

hmget human name age 获取多数据

hgetall human 

hdel human name 删除name

hlen human 长度

hexists human age 是否存在

hkeys human 获取所有key 

hvals human 获取所有value 

hincrby hincrbyfloat 

hsetnx 不存在添加
&lt;/code>&lt;/pre>
&lt;h3 id="zset">zset：&lt;/h3>
&lt;pre>&lt;code>zadd key value：score 设置值的分数

zrange key 

zrangebyscore key min max （不包含 limit 升序

zrevrangebyscore 降序

zrem key value 

zcount key min max 范围内多少个

zscore key m 返回key 中m的分数值

zrevrange key start stop 降序展示
&lt;/code>&lt;/pre>
&lt;h3 id="持久化">持久化：&lt;/h3>
&lt;h4 id="rdb-aof">rdb aof&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>rdb&lt;/p></description></item><item><title>gulp笔记</title><link>https://blog.51ai.vip/posts/gulp%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 22 Apr 2019 18:08:54 +0000</pubDate><guid>https://blog.51ai.vip/posts/gulp%E7%AC%94%E8%AE%B0/</guid><description>&lt;h3 id="gulp">gulp&lt;/h3>
&lt;p>gulp.js是一个前端构建工具。&lt;/p>
&lt;h3 id="安装">安装&lt;/h3>
&lt;ol>
&lt;li>npm&lt;/li>
&lt;li>安装全局gulp，&lt;code>npm install -g gulp&lt;/code>。（如果没有梯子，最好安装下cnpm）
cnpm 安装 &lt;code>npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/code>
安装完cnpm，下面所有npm操作替换cnpm 执行即可。&lt;/li>
&lt;li>进入项目，初始化（npm init）&lt;/li>
&lt;li>项目安装gulp，项目文件夹下，&lt;code>npm install --save-dev gulp&lt;/code>。 (&amp;ndash;save-dev 加入此项目依赖中，不需要可取消这个参数)&lt;/li>
&lt;li>项目根创建gulpfile.js文件，文件内创建任务测试。&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>var gulp = require(&amp;#39;gulp&amp;#39;);
gulp.task(&amp;#39;default&amp;#39;,function(){
 console.log(&amp;#39;hello world!&amp;#39;);
});
&lt;/code>&lt;/pre>&lt;ol start="6">
&lt;li>运行 &lt;code>gulp&lt;/code>，可以看到默认执行，输出 hello world! 。测试成功。&lt;/li>
&lt;/ol>
&lt;h3 id="gulp-api">gulp API&lt;/h3>
&lt;pre>&lt;code>上面运行 gulp 执行default ，这个是gulp API。 [文档](https://www.gulpjs.com.cn/docs/api/) 
&lt;/code>&lt;/pre>
&lt;h4 id="gulp工作方式">gulp工作方式&lt;/h4>
&lt;p>&lt;code>gulp.src&lt;/code> 获取文件流,通过&lt;code>pipe&lt;/code>方法导入到插件，插件处理的流通过&lt;code>pipe&lt;/code>方法导入 &lt;code>gulp.dest&lt;/code>中, &lt;code>gulp.dest&lt;/code> 输出目标文件。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>gulp src
&lt;code>gulp.src(globs[, options])&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>文档这意思看着有点费劲，理解为获取文件路径。gulp通过这个方法获取到处理的文件流。&lt;/p></description></item><item><title>Centos7时间设置</title><link>https://blog.51ai.vip/posts/centos7%E6%97%B6%E9%97%B4%E8%AE%BE%E7%BD%AE/</link><pubDate>Fri, 19 Apr 2019 11:42:02 +0000</pubDate><guid>https://blog.51ai.vip/posts/centos7%E6%97%B6%E9%97%B4%E8%AE%BE%E7%BD%AE/</guid><description>&lt;h3 id="centos7时间相关">Centos7时间相关&lt;/h3>
&lt;h4 id="查看时间">查看时间&lt;/h4>
&lt;p>date
hwclock 硬件时间
timedatectl 各时间状态&lt;/p>
&lt;h4 id="设置更新服务时间">设置&amp;amp;更新服务时间&lt;/h4>
&lt;p>安装ntpdate
&lt;code>yum install utp ntpdate&lt;/code>&lt;/p>
&lt;h4 id="设置同步">设置同步&lt;/h4>
&lt;p>&lt;code>ntpdate cn.pool.ntp.org&lt;/code> (time.windows.com) 地址看喜好&lt;/p>
&lt;h4 id="设置硬件时间">设置硬件时间&lt;/h4>
&lt;p>hwclock &amp;ndash;systohc&lt;/p>
&lt;h4 id="设置时区">设置时区&lt;/h4>
&lt;p>timedatectl set-timezone Asia/Shanghai （上海）&lt;/p>
&lt;p>timedatectl 很多设置，需要请查相关资料。&lt;/p></description></item><item><title>Centos7防火墙相关设置</title><link>https://blog.51ai.vip/posts/centos7%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/</link><pubDate>Thu, 18 Apr 2019 17:44:22 +0000</pubDate><guid>https://blog.51ai.vip/posts/centos7%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/</guid><description>&lt;h4 id="centos7与之前不太一样">Centos7与之前不太一样&lt;/h4>
&lt;p>以前都是用iptables，公司服务器环境事7，凑巧不熟一台新服务。我为了测试，再本地虚机上装了一台。
这里默认防火墙是 firewall，其实为了省事还是可以安装一个iptables的。这里学习一下firewall一些操作。&lt;/p>
&lt;h4 id="查看防火墙服务状态">查看防火墙服务状态&lt;/h4>
&lt;p>&lt;code>systemctl status firewalld&lt;/code>&lt;/p>
&lt;p>####查看f防火墙状态
&lt;code>firewall-cmd --state&lt;/code>&lt;/p>
&lt;h4 id="查看规则">查看规则&lt;/h4>
&lt;p>&lt;code>firewall-cmd --list-all &lt;/code>&lt;/p>
&lt;p>####停止&amp;amp;开启防&amp;amp;重启火墙
&lt;code>systemctl stop firewalld.service&lt;/code>
&lt;code>systemctl start firewalld.service&lt;/code>
&lt;code>systemctl restart firewalld.service&lt;/code>&lt;/p>
&lt;h4 id="关闭防火墙">关闭防火墙&lt;/h4>
&lt;p>&lt;code>systemctl disable firewalld.service&lt;/code>&lt;/p>
&lt;h4 id="重载防火墙">重载防火墙&lt;/h4>
&lt;p>&lt;code>firewall-cmd —reload&lt;/code>&lt;/p>
&lt;h4 id="查询开放端口">查询开放端口&lt;/h4>
&lt;p>&lt;code>firewall-cmd --list-ports&lt;/code>&lt;/p>
&lt;h4 id="开放一个端口-例如tcp-8010">开放一个端口 例如tcp 8010&lt;/h4>
&lt;p>firewall-cmd &amp;ndash;zone=public &amp;ndash;add-port=80/tcp &amp;ndash;permanent&lt;/p>
&lt;p>–zone #作用域
–add-port=8010/tcp #添加端口，格式为：端口/通讯协议
–permanent #永久生效，没有此参数重启后失效&lt;/p>
&lt;h4 id="查询某端口是否开放8010">查询某端口是否开放(8010)&lt;/h4>
&lt;p>&lt;code>firewall-cmd --query-port=8010/tcp&lt;/code>&lt;/p>
&lt;h4 id="移除端口规则">移除端口规则&lt;/h4>
&lt;p>&lt;code>firewall-cmd --permanent --remove-port=8010/tcp&lt;/code>&lt;/p></description></item><item><title>Centos7启动等级设置</title><link>https://blog.51ai.vip/posts/centos7%E5%90%AF%E5%8A%A8%E7%AD%89%E7%BA%A7%E8%AE%BE%E7%BD%AE/</link><pubDate>Mon, 15 Apr 2019 16:55:19 +0000</pubDate><guid>https://blog.51ai.vip/posts/centos7%E5%90%AF%E5%8A%A8%E7%AD%89%E7%BA%A7%E8%AE%BE%E7%BD%AE/</guid><description>&lt;h4 id="centos7启动级别">Centos7启动级别&lt;/h4>
&lt;p>启动级别分为7个：
0 - 系统停机状态
1 - 单用户工作状态
2 - 多用户状态（没有NFS）
3 - 多用户状态（有NFS）
4 - 系统未使用，留给用户
5 - 图形界面
6 - 系统正常关闭并重新启动&lt;/p>
&lt;h4 id="切换启动级别">切换启动级别&lt;/h4>
&lt;p>之前一直都是在种端中输入指令 init3 切换启动级别。
设置永久启动3级别， &lt;code>vi /etc/inittab&lt;/code> 把init3设置默认即可。&lt;/p>
&lt;p>&lt;strong>centos7 设置出现不同&lt;/strong>
runlevels被targets所取代，即CentOS7采用加载target的方式来替代之前的启动级别。
multi-user.target = init3
graphical.target = init5
我们日常实用图形窗口init5，我们不需要图形，可以切换到init3等启动级别上。
&lt;code>systemctl set-default multi-user.target&lt;/code> 设置为init3
&lt;code>systemctl set-default graphical.target&lt;/code> 设置为init5&lt;/p></description></item><item><title>Docker常用命令</title><link>https://blog.51ai.vip/posts/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Thu, 11 Apr 2019 15:09:19 +0000</pubDate><guid>https://blog.51ai.vip/posts/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;h2 id="docker常用命令">Docker常用命令&lt;/h2>
&lt;p>说常用不如说自己用到的命令。&lt;/p>
&lt;h3 id="容器相关">容器相关&lt;/h3>
&lt;p>学习了一下docker，基础常用命令记录下。
####docker run/新建并启动容器
这个run其实包含两个不走，先执行新建容器(docker create),接着启动容器(docker start)。敲两个是不是有点麻烦吧。&lt;/p>
&lt;p>docker run xx [COMMAND]&lt;/p>
&lt;p>例子 &lt;code>docker run -it ubuntu:14.04 /bin/bash&lt;/code>&lt;/p>
&lt;p>这里希望启动一个基于 ubuntu 14.04镜像 来创建一个容器，-t选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上，-i则让容器的标准输入保持打开。更多的命令选项可以通过man docker-run命令来查看。之后命令还有一项，启动一个bash终端。 这条命令涉及到很多知识了。
-参数 常用 -i -d -t -p， -d 是否在后台运行，-p 映射到本地主机端口。剩下的看手册来补下。&lt;/p>
&lt;h4 id="docker-create--docker-start--docker-stop">docker create &amp;amp;&amp;amp; docker start &amp;amp;&amp;amp; docker stop&lt;/h4>
&lt;p>创建，启动，停止。
有一个容易停止了，可以用 docker start XX容器 启动。 XX 可以是容器的ID，也可以是name。&lt;/p>
&lt;h4 id="docker-rm">docker rm&lt;/h4>
&lt;p>删除一个容器（最好先把这个容器停止了再删除）。
-f 可以强制删除。-v 删除与容器关联的卷（如果刚学习还真不知道什么是卷）。&lt;/p>
&lt;h4 id="docker-attach">docker attach&lt;/h4>
&lt;p>进入容器，如果开启了一个 -d 后台启动容器。 我们怎么进去看看？ &lt;code>docker attach XX容器&lt;/code>
这个命令我学习时候用过，感觉有时候不太好使。命令执行完卡那不动。&lt;/p>
&lt;h4 id="docker-exec">docker exec&lt;/h4>
&lt;p>可以在容器内直接执行任意命令。
&lt;code>docker exec -it xx /bin/bash&lt;/code> 这可以进入xx镜像，并打开bash。 相比这个比上面的attach 好多了。&lt;/p></description></item><item><title>Ubutun下安装Docker</title><link>https://blog.51ai.vip/posts/ubutun%E4%B8%8B%E5%AE%89%E8%A3%85docker/</link><pubDate>Thu, 04 Apr 2019 14:57:16 +0000</pubDate><guid>https://blog.51ai.vip/posts/ubutun%E4%B8%8B%E5%AE%89%E8%A3%85docker/</guid><description>&lt;h3 id="docker简介">Docker简介&lt;/h3>
&lt;blockquote>
&lt;p>一个能够把开发的应用程序自动部署到容器的开源引擎
三大概念：镜像（Image）容器（Container）仓库（Repository）&lt;/p>&lt;/blockquote>
&lt;p>具体信息请参考官方。&lt;a href="https://docs.docker.com/engine/docker-overview/">官方概述&lt;/a>（养成看文档习惯）&lt;/p>
&lt;h3 id="安装环境">安装环境&lt;/h3>
&lt;p>Ubuntu 16.04 LTS&lt;/p>
&lt;h3 id="docker安装">Docker安装&lt;/h3>
&lt;p>根据官方doc安装。&lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">官方doc&lt;/a>
1.如果你之前装过，命令卸载。
&lt;code>sudo apt-get remove docker docker-engine docker.io containerd runc&lt;/code>&lt;/p>
&lt;p>2.更新包索引
&lt;code>apt-get update&lt;/code>&lt;/p>
&lt;p>3.安装包以允许apt通过HTTPS使用存储库:
&lt;code>sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common&lt;/code>
（斜线换行，一条命令）&lt;/p>
&lt;p>4.添加Docker的官方GPG密钥:
&lt;code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&lt;/code>
&lt;code>sudo apt-key fingerprint 0EBFCD88&lt;/code>&lt;/p>
&lt;p>5.使用以下命令设置稳定存储库。要添加 夜间或测试存储库，请在下面的命令中的单词后添加单词nightly或test（或两者）stable。
&lt;code>$ sudo add-apt-repository \ &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) \ stable&amp;quot;&lt;/code>
(lsb_release -cs子命令返回Ubuntu发行版的名称)&lt;/p>
&lt;p>6.安装最新版本的Docker CE和containerd，或者转到下一步安装特定版本：
&lt;code>sudo apt-get install docker-ce docker-ce-cli containerd.io&lt;/code>&lt;/p></description></item><item><title>Hexo博客安装与配置</title><link>https://blog.51ai.vip/posts/hexo%E5%8D%9A%E5%AE%A2%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Apr 2019 17:59:31 +0000</pubDate><guid>https://blog.51ai.vip/posts/hexo%E5%8D%9A%E5%AE%A2%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;h3 id="wordpress-之后">wordpress 之后&lt;/h3>
&lt;p>wordpress 使用很方便，但是折腾几次之后。由于一次意外，导致管理者把我的vps被停掉。虽然有些文章还是保留了。但是这次之后感觉自己还是找一个稳妥的家。连接hexo搭建的博客之后，打算自己来折腾一下。&lt;/p>
&lt;h3 id="记录笔记环境">记录笔记环境&lt;/h3>
&lt;p>在windows上写笔记，环境目前是windows下操作。linux，mac系统中需要注意一些细节吧。存在提不到情况，先做好出现问题考虑自行排查。&lt;/p>
&lt;h3 id="准备">准备&lt;/h3>
&lt;p>看下hexo的安装提示。
&lt;img src="http://t1.aixinxi.net/o_1d7c68cm911cu1p74qfa133ikh2a.jpg-w.jpg" alt="安装提示" title="前提">&lt;/p>
&lt;p>hexo 需要Node.js 和 Git 。&lt;/p>
&lt;ul>
&lt;li>安装 Node.js
官网: &lt;a href="https://nodejs.org/en/download/">官网&lt;/a>
widows，mac，linux 都有对应的安装方法。根据自己的环境来安装。&lt;/li>
&lt;li>安装 Git
官网: &lt;a href="https://git-scm.com/downloads/">官网&lt;/a>
根据自己环境安装。&lt;/li>
&lt;li>安装Hexo
通过npm来安装 Hexo。
命令: &lt;code>npm install -g hexo-cli&lt;/code>
什么鬼，通过这个命令发现没有实现正常安装。理由，我们在天朝。
解决方式： 替换国内npm源。
命令: &lt;code>npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/code>
请注意不同系统在操作此命令时，需要一些设置。linux 如果使用下面命令需要自建软链。 &lt;code>cnpm ln -s /yourdir/bin/cnpm /usr/local/npm&lt;/code>
下一步用cnpm 来安装 Hexo： &lt;code>cnpm install hexo-cli -g&lt;/code>
验证hexo 是否安装： &lt;code>hexo v&lt;/code> 会列出版本信息。&lt;/li>
&lt;/ul>
&lt;h3 id="下面使用hexo来创建blog">下面使用Hexo来创建blog：&lt;/h3>
&lt;ul>
&lt;li>创建项目文件夹。这里开始通过git bash来使用命令行操作。&lt;/li>
&lt;li>进入项目文件夹，初始化。 &lt;code>hexo init&lt;/code> （这里也可以，通过 &lt;code>hexo init 你的项目文件夹名&lt;/code> 结果一样）
这里会看到目录有相关文件了。具体这些文件，看下 &lt;a href="https://hexo.io/zh-cn/docs/setup">手册&lt;/a> 是什么意思。
这时候其实已经是一个博客站点了。&lt;/li>
&lt;li>命令 &lt;code>hexo g&lt;/code> , &lt;code>hexo s&lt;/code> 得到信息：Hexo is running at http：//lcoalhost:4000` 注意4000端口需要未被占用。 访问地址就可以看到初始化的站点了。 &lt;em>（不喜欢默认主题可以修改主题）&lt;/em>&lt;/li>
&lt;/ul>
&lt;h3 id="写文章">写文章&lt;/h3>
&lt;p>写文章需要先创建文档，这个文档默认生成在_post 文件夹下。&lt;/p></description></item><item><title/><link>https://blog.51ai.vip/index-about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/index-about/</guid><description>&lt;h1 id="-welcome">😊 welcome&lt;/h1>
&lt;ul>
&lt;li>👉🏻 &lt;a href="https://blog.51ai.vip/posts/">Posts&lt;/a>&lt;/li>
&lt;li>👉🏻 &lt;a href="https://blog.51ai.vip/tags/">Tags&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title/><link>https://blog.51ai.vip/posts/index-about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.51ai.vip/posts/index-about/</guid><description>&lt;h1 id="along-blog">aLong blog&lt;/h1>
&lt;p>welcome to my blog.&lt;/p>
&lt;ul>
&lt;li>posts &lt;a href="https://blog.51ai.vip/posts/">posts&lt;/a>&lt;/li>
&lt;li>tags &lt;a href="https://blog.51ai.vip/tags/">tags&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>