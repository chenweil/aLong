<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SNMP on aLong blog</title>
    <link>https://blog.51ai.vip/aLong/tags/snmp/</link>
    <description>Recent content in SNMP on aLong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Nov 2021 16:38:35 +0000</lastBuildDate>
    <atom:link href="https://blog.51ai.vip/aLong/tags/snmp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>S5720 SNMP v3配置</title>
      <link>https://blog.51ai.vip/aLong/posts/s5720-snmp-v3/</link>
      <pubDate>Tue, 16 Nov 2021 16:38:35 +0000</pubDate>
      <guid>https://blog.51ai.vip/aLong/posts/s5720-snmp-v3/</guid>
      <description>S5720 SNMP v3配置 系统视图 system-view&#xA;SNMP服务 snmp-agent&#xA;管理端口(默认161) snmp-agent udp-port *port-num*&#xA;配置版本(默认v3) snmp-agent sys-info version *v3*&#xA;配置用户组 snmp-agent group v3 *group-name* {authentication | privacy | noauthentication}&#xA;三种认证加密方式&#xA;配置v3用户 snmp-agent usm-user v3 *user-name* [ group *group-name*] 配置用户认证密码 snmp-agent usm-user v3 *user-name* authentication-mode { md5 | sha } [ cipher *password* ]&#xA;配置加密密码 snmp-agent usm-user v3 *user-name* privacy-mode { des56 | aes128 |aes192 | aes256 | 3des } [ cipher *password* ]</description>
    </item>
    <item>
      <title>Prometheus-SNMP_Exporter Generator</title>
      <link>https://blog.51ai.vip/aLong/posts/prometheus-snmp-exporter-generator/</link>
      <pubDate>Tue, 24 Dec 2019 15:26:33 +0000</pubDate>
      <guid>https://blog.51ai.vip/aLong/posts/prometheus-snmp-exporter-generator/</guid>
      <description>Prometheus-SNMP Exporter 生成器从generator.yml读取并写入snmp.yml。&#xA;之前在说Prometheus-snmp_export部署时,没有具体提到snmp.yml的生成器是怎么生成的.几乎用的都是github上的snmp.yml文件(只在demo中添加了auth配置).&#xA;因为刚好所有通用的指标都取得通用的mib树. 在后期我搜集设备的信息需要一些私有mib的数据,这时候需要自己通过生成器来生成snmp.yml.&#xA;Generator 的操作步骤 下载需要的程序(Docker方式跳过此步骤) # Debian-based distributions. sudo apt-get install unzip build-essential libsnmp-dev # Debian-based distros # Redhat-based distributions. sudo yum install gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel # RHEL-based distros go get github.com/prometheus/snmp_exporter/generator cd ${GOPATH-$HOME/go}/src/github.com/prometheus/snmp_exporter/generator go build make mibs(不建议直接make) 这里直接make mibs 可能会失败,在make文件里设置的源有些已经不能访问了或执行出现错误.&#xA;我建议先下载好mibs ,我已经上传github.&#xA;建议自行搜集mib 不执行make mibs会方便一些&#xA;把所有的mib放入mibs 目录下.&#xA;需要准备好所有需要涉及到的mib文件. 除了公有的mib,我们还需要监控目标设备的私有mib.思科/华为之类的会提供这些mib,像锐捷这种需要和商务部联系.&#xA;一些mib:&#xA;https://github.com/netdisco/netdisco-mibs&#xA;https://github.com/pgmillon/observium/tree/master/mibs&#xA;https://github.com/librenms/librenms/tree/master/mibs&#xA;当我们准备好所有的mib后,需要编写一个generator.yml. 下面是一个翻译的官方文档(翻译比较烂,自行查阅原文):&#xA;modules: module_name: # 模块名称。您可以根据需要拥有任意数量的模块。 walk: # 要walk的OID列表。 也可以是SNMP对象名称或特定实例。 - 1.</description>
    </item>
    <item>
      <title>Prometheus-snmp_export部署</title>
      <link>https://blog.51ai.vip/aLong/posts/prometheus-snmp-export%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 29 Aug 2019 10:06:01 +0000</pubDate>
      <guid>https://blog.51ai.vip/aLong/posts/prometheus-snmp-export%E9%83%A8%E7%BD%B2/</guid>
      <description>SNMP SNMP(simple network management protocol)是因特网架构委员会IAB定义的一个应用层协议。SNMP广泛用于管理和监控网络设备，大多数专业的网络设备都有SNMP agent代理，这些代理被激活和配置后用于和SNMP管理 NMS(network management system)网络管理系统通信。&#xA;目的 通过snmp_export,获取设备信息.&#xA;准备 系统: centos7,docker19. 之前已经安装好 Prometheus&#xA;此处目标设备是华为交换机 s2700&#xA;部署snmp_expoer snmp.yml 配置文件不是自己定义的,是通过注册生成或下载的.这里我通过github下载配置文件.&#xA;snmp.yml&#xA;配置snmp_export 配置文件 snmp.yml version: 2 auth: community: **交换机设置的团体名** 查找到if_mib 再此段结尾中加入 上面的配置(大概行数6199).&#xA;部署snmp_expor docker run -d --restart always \ -v /home/along/snmp.yml:/etc/snmp_exporter/snmp.yml \ -p 9116:9116 --name snmp-exporter prom/snmp-exporter \ --config.file=&amp;#34;/etc/snmp_exporter/snmp.yml&amp;#34; 配置华为s2700交换机 自行查阅文档.懒得写了.&#xA;验证服务 访问 http://IP:9116/metrics 能返回数据,snmp_export服务正常.&#xA;测试是否能获取到目标设备的数据: 访问 http://IP:9116/snmp?target=DEVIP 能获取到数据,配置成功.&#xA;注意防火墙 把需要的端口加入规则中,不然访问不到排查绕弯路&#xA;配置promthues 修改 promthues.yml文件. 添加一个新的job.&#xA;- job_name: snmp honor_timestamps: true params: module: - if_mib scrape_interval: 15s scrape_timeout: 10s metrics_path: /snmp scheme: http static_configs: - targets: - 172.</description>
    </item>
  </channel>
</rss>
