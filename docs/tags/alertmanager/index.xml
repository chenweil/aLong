<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AlertManager on aLong blog</title>
    <link>https://blog.51ai.vip/aLong/tags/alertmanager/</link>
    <description>Recent content in AlertManager on aLong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Dec 2019 11:51:43 +0000</lastBuildDate><atom:link href="https://blog.51ai.vip/aLong/tags/alertmanager/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prometheus告警模板详解</title>
      <link>https://blog.51ai.vip/aLong/posts/prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 04 Dec 2019 11:51:43 +0000</pubDate>
      
      <guid>https://blog.51ai.vip/aLong/posts/prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF%E8%AF%A6%E8%A7%A3/</guid>
      <description>目的 之前配置告警之后,可以发送告警信息.但对于数据具体的结构信息,在模板中数据读取都比较懵.原因是不太清除警报都提供了哪些数据,除了我们设置的信息,还有没有其他的信息.
告警数据结构 官方docs
推送数据结构:
Alerts数据 KV数据的处理方式 KV结构很简单,键值对.通过键获取对应的值.下面提供了一些方法处理这种结构的一些方法.
字符串相关方法 警报提供的数据是通过GO模板解析的,GO模板的功能通过GO模板文档可以了解.
下面提供了一些处理字符串的方法:
微信通知的DEMO 上图中是微信接受的通知,下面展示通知模板的代码.
{{- define &amp;#34;_alert_list&amp;#34; -}} {{- range .Alerts.Firing -}} ----------------------- 告警类型：{{ .Labels.alertname }} 告警主题: {{ .Annotations.summary }} 告警详情: {{ .Annotations.description }} 触发时间: {{ (.StartsAt.Add 28800e9).Format &amp;#34;2006-01-02 15:04:05&amp;#34; }} {{ end -}} ---------结束----------------- {{- end -}} {{- define &amp;#34;_resolve_list&amp;#34; -}} {{- range .Alerts.Resolved -}} ************************** 告警类型：{{ .Labels.alertname }} 告警主题: {{ .Annotations.summary }} 告警详情: {{ .Annotations.description }} 触发时间: {{ (.StartsAt.Add 28800e9).</description>
    </item>
    
    <item>
      <title>Prometheus-AlertManager警告管理搭建与配置</title>
      <link>https://blog.51ai.vip/aLong/posts/prometheus-alertmanager%E8%AD%A6%E5%91%8A%E7%AE%A1%E7%90%86%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 19 Oct 2019 09:40:15 +0000</pubDate>
      
      <guid>https://blog.51ai.vip/aLong/posts/prometheus-alertmanager%E8%AD%A6%E5%91%8A%E7%AE%A1%E7%90%86%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>AlertManager  AlertManager处理由客户端应用程序（如Prometheus服务器）发送的警报。 它负责重复数据消除、分组，并将它们路由到正确的接收器集成（如电子邮件、PagerDuty或OpsGenie）。 它还负责消除和抑制警报。
 通过翻译官方文档可以了解到,AlertManager是负责为Prometheus(本身不会发送警报)发送警报的工具. AlertManager不是简单发送警报,可以消除重复警报,分组,抑制警报功能.并支持多接收器.
Prometheus-&amp;gt;触发定义的警报规则-&amp;gt;AlertManager-&amp;gt;发送警报到指定通知渠道.
为了能让Prometheus发送警报,我们需要:
 搭建AlertManager服务. 定义AlertManager通知配置. 定义Prometheus警报规则并引入. 测试警报. 定义通知模板.  定义AlertManager通知配置 global:smtp_smarthost:&amp;#39;smtp.163.com:25&amp;#39;# 邮箱smtp服务器代理smtp_from:&amp;#39;shitu-0071@163.com&amp;#39;# 发送邮箱名称resolve_timeout:5m # 处理超时时间，默认为5minsmtp_auth_username:&amp;#39;shitu-0071@163.com&amp;#39;# 邮箱帐户smtp_auth_password:&amp;#39;******&amp;#39;# 邮箱授权码(注意是授权码,不知道自己查一下)wechat_api_url:&amp;#39;https://qyapi.weixin.qq.com/cgi-bin/&amp;#39;# 企业微信地址# 定义模板信心templates:- &amp;#39;template/*.tmpl&amp;#39;# 定义路由树信息route:group_by:[&amp;#39;alertname&amp;#39;,&amp;#39;cluster&amp;#39;,&amp;#39;service&amp;#39;]# 报警分组依据,设置后会按照设定值分组,例如instance,alertname等# 同标签警告会在作为一组警报发送group_wait:10s # 组内等待时间,触发阈值后,XXs后发送本组警报group_interval:10s # 每个组之前间隔时间(group_by设定的值划分的组)repeat_interval:1m # 重复发送警报的周期(对于email配置中，此项不可以设置过低，否则将会由于邮件发送太多频繁，被smtp服务器拒绝)receiver:&amp;#39;email&amp;#39;# 发送警报的接收者的名称# 以下receivers name的名称routes:- match:# 普通匹配serverity:critical # 警告级别criticalreceiver:email # 通过邮件发送- match_re:# 正则匹配severity:^(warning)$ # 匹配警告级别为warning的receiver:wechat # 通过微信发送告警- receiver:along # 定义接收者match:# 匹配severity:test # 等级为test# 定义警报接收者信息receivers:- name:&amp;#39;email&amp;#39;# 警报email_configs:# 邮箱配置- to:&amp;#39;******@163.com&amp;#39;# 接收警报的email配置html:&amp;#39;{{ template &amp;#34;test.html&amp;#34; . }}&amp;#39;# 设定邮箱的内容模板headers:{Subject:&amp;#34;[WARN] 报警邮件&amp;#34;}# 接收邮件的标题webhook_configs:# webhook配置- url:&amp;#39;http://127.</description>
    </item>
    
  </channel>
</rss>
