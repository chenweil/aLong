<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Socket on aLong blog</title>
    <link>https://blog.51ai.vip/aLong.github.io/tags/socket/</link>
    <description>Recent content in Socket on aLong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Jun 2019 10:23:11 +0000</lastBuildDate><atom:link href="https://blog.51ai.vip/aLong.github.io/tags/socket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python建立SocketSSL连接</title>
      <link>https://blog.51ai.vip/aLong.github.io/posts/python%E5%BB%BA%E7%AB%8Bsocketssl%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Tue, 04 Jun 2019 10:23:11 +0000</pubDate>
      
      <guid>https://blog.51ai.vip/aLong.github.io/posts/python%E5%BB%BA%E7%AB%8Bsocketssl%E8%BF%9E%E6%8E%A5/</guid>
      <description>Python Socket连接 5月中旬遇到一个功能,需要利用Python建立Socket tcp连接,于设备通讯发送相关数据.
这块没接触,Python也是hello world水平.
赶紧恶补一下:
Socket是网络编程的一个抽象概念。
通常我们用一个Socket表示“打开了一个网络链接”，打开一个Socket需要知道目标计算机的IP地址和端口号，再指定协议类型。
服务端我也不知道什么样,这里只记录客户端的相关.
这里我们得到一个文档说,需要建立socket SSL 连接,通过XML格式发送数据.
非ssl的socket: import socket # 创建一个socket: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 建立连接: s.connect((&amp;#39;192.168.1.230&amp;#39;, 80)) SSL socket: 端口是3344,ssl跳过验证,如果验证参数需要修改.
import socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) c = ssl.wrap_socket(s, cert_reqs=ssl.CERT_NONE) try: c.connect((&amp;#39;192.168.1.230&amp;#39;, &amp;#39;3344&amp;#39;)) except: return 2 这下与那台设备可以正常通讯了,后面实现具体功能就ok了.</description>
    </item>
    
  </channel>
</rss>
