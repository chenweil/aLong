<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSL on aLong blog</title>
    <link>https://blog.51ai.vip/aLong/tags/ssl/</link>
    <description>Recent content in SSL on aLong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jun 2020 13:33:18 +0000</lastBuildDate>
    <atom:link href="https://blog.51ai.vip/aLong/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>申请Let&#39;s Encrypt HTTPS 证书脚本</title>
      <link>https://blog.51ai.vip/aLong/posts/%E7%94%B3%E8%AF%B7let-s-encrypt-https-%E8%AF%81%E4%B9%A6%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 24 Jun 2020 13:33:18 +0000</pubDate>
      <guid>https://blog.51ai.vip/aLong/posts/%E7%94%B3%E8%AF%B7let-s-encrypt-https-%E8%AF%81%E4%B9%A6%E8%84%9A%E6%9C%AC/</guid>
      <description>最近需要到SSL证书，又想免懒。选择脚本来更新SSL证书文件 Let’s Encrypt是一个由非营利性组织互联网安全研究小组（ISRG）提供的免费、自动化和开放的证书颁发机构（CA）。 简单的说，借助Let’s Encrypt颁发的证书可以为我们的网站免费启用HTTPS(SSL/TLS) 。&#xA;那我们通过一个脚本来申请：&#xA;脚本名称： acme.sh&#xA;安装acme.sh： curl https://get.acme.sh | sh&#xA;创建指令： alias acme.sh=~/.acme.sh/acme.sh&#xA;测试收否安装成功： acme.sh --Version 出现版本，安装完成。&#xA;生成证书 acme.sh --issue -d demo.com -d www.demo.con -w /home/wwwroot/demo.com&#xA;–issue是acme.sh脚本用来颁发证书的指令； -d是–domain的简称，其后面须填写已备案的域名； -w是–webroot的简称，其后面须填写网站的根目录。&#xA;查看证书 acme.sh --list&#xA;Nginx 配置 项目是Nginx，下面是对Nginx的配置。&#xA;acme.sh &amp;ndash;installcert -d demo.com &amp;ndash;key-file /etc/nginx/ssl/demo.com.key &amp;ndash;fullchain-file /etc/nginx/ssl/fullchain.cer &amp;ndash;reloadcmd &amp;ldquo;service nginx force-reload&amp;rdquo;&#xA;通过 installcert 来完成安装，此处我们需要把*.key,fullchain.cer 文件拷贝到指定位置。最后通过reload命令让Nginx重载（force-reload 我环境中无法使用此参数，这里换成 restart）。&#xA;最后我们需要配置Nginx的443 server&#xA;server { listen 443 ssl; server_name demo.com; ssl on; ssl_certificate /etc/nginx/ssl/fullchain.cer; ssl_certificate_key /etc/nginx/ssl/esofar.</description>
    </item>
  </channel>
</rss>
