<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>M3DB on aLong Blog</title><link>http://localhost:1313/aLong/tags/m3db/</link><description>Recent content in M3DB on aLong Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 29 Nov 2019 17:41:43 +0000</lastBuildDate><atom:link href="http://localhost:1313/aLong/tags/m3db/index.xml" rel="self" type="application/rss+xml"/><item><title>M3DB笔记</title><link>http://localhost:1313/aLong/posts/m3db%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 29 Nov 2019 17:41:43 +0000</pubDate><guid>http://localhost:1313/aLong/posts/m3db%E7%AC%94%E8%AE%B0/</guid><description>&lt;h2 id="m3db笔记">M3DB笔记&lt;/h2>
&lt;p>前阵子研究prometheus,初期没有考虑存储问题.本地默认存储30天数据.&lt;/p>
&lt;p>监控已经折腾完毕,现在需要来处理存储的方案.&lt;/p>
&lt;p>通过互联网的科普,发现目前有两个方案可以解决这个问题.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>thanos&lt;/p>
&lt;/li>
&lt;li>
&lt;p>M3DB&lt;/p>
&lt;p>thanos是需要存储云端数据(本地存储官方不推荐).不符合我们的考虑范围内.那就来学习M3DB了.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="简介">简介&lt;/h3>
&lt;blockquote>
&lt;p>M3可以在较长的保留时间内可靠地存储大规模指标。为了向更广泛的社区中的其他人提供这些好处，我们决定开放M3平台作为Prometheus的远程存储后端，Prometheus是一种流行的监控和警报解决方案。正如其文档所述，Prometheus的可扩展性和耐用性受到单个节点的限制。 M3平台旨在为Prometheus指标提供安全，可扩展且可配置的多租户的存储。&lt;/p>
&lt;p>M3于2015年发布，目前拥有超过66亿个时间序列。 M3每秒聚合5亿个指标，并在全球范围内（使用M3DB）每秒持续存储2000万个度量指标，批量写入将每个指标持久保存到区域中的三个副本。它还允许工程师编写度量策略，告诉M3以更短或更长的保留时间（两天，一个月，六个月，一年，三年，五年等）以特定的粒度（一秒，十秒，一分钟，十分钟等）。这允许工程师和数据科学家使用与定义的存储策略匹配的度量标签（标签），在精细和粗粒度范围内智能地存储不同保留的时间序列。例如，工程师可以选择存储“应用程序”标记为“mobile_api”且“端点”标记为“注册”的所有度量标准，这些标记在10秒粒度下为30天，在一小时粒度下为5年。&lt;/p>
&lt;/blockquote>
&lt;h3 id="相关组件">相关组件&lt;/h3>
&lt;blockquote>
&lt;h4 id="m3-coordinator">M3 Coordinator&lt;/h4>
&lt;p>M3 Coordinator是一种服务，用于协调上游系统（如Prometheus和M3DB）之间的读写操作。它还提供了管理API，用于设置和配置M3的不同部分。它是用户可以部署以访问M3DB的优势的桥梁，例如长期存储和与其他监控系统（如Prometheus）的多DC设置。&lt;/p>
&lt;h4 id="m3db">M3DB&lt;/h4>
&lt;p>M3DB是一个分布式时间序列数据库，提供可扩展存储和时间序列的反向索引。它经过优化，具有成本效益和可靠的实时和长期保留指标存储和索引&lt;/p>
&lt;h4 id="m3-query">M3 Query&lt;/h4>
&lt;p>M3 Query是一种服务，它包含一个分布式查询引擎，用于查询实时和历史指标，支持多种不同的查询语言。它旨在支持低延迟实时查询和可能需要更长时间执行的查询，聚合更大的数据集，用于分析用例&lt;/p>
&lt;h4 id="m3-aggregator">M3 Aggregator&lt;/h4>
&lt;p>M3 Aggregator是一种作为专用度量聚合器运行的服务，它基于存储在etcd中的动态规则提供基于流的下采样。它使用领导者选举和聚合窗口跟踪，利用etcd来管理此状态，从而可靠地为低采样度量标准发送至少一次聚合到长期存储。这提供了成本有效且可靠的下采样和汇总指标。这些功能也存在于M3协调器中，但专用聚合器是分片和复制的，而M3协调器则不需要并且需要谨慎部署和以高可用性方式运行。还有一些工作要使用户更容易访问聚合器，而无需他们编写自己的兼容生产者和消费者。&lt;/p>
&lt;/blockquote>
&lt;h3 id="入门">入门&lt;/h3>
&lt;p>&lt;img src="https://t1.picb.cc/uploads/2019/11/29/kIj7yu.png" alt="">&lt;/p>
&lt;p>上面的组件通俗讲:&lt;/p>
&lt;p>&lt;em>prometheus&lt;/em> 需要通过&lt;em>M3 Coordinator&lt;/em>来协调存储与查询到M3DB,&lt;em>prometheus&lt;/em>本地存储数据时间与这个没关系.&lt;/p>
&lt;p>上面没有提到一个名字etcd服务.此服务推断拓扑\配置功能. 如果db嵌入此服务就称为种子节点SeedNode.&lt;/p>
&lt;hr>
&lt;p>官方提供了一个镜象,里面包含 M3 Coordinator + SeedNode.&lt;/p>
&lt;p>拉取镜象:&lt;code>docker pull quay.io/m3db/m3dbnode:latest&lt;/code>&lt;/p>
&lt;p>启动名为m3db容器:&lt;code>docker run -d -p 7201:7201 -p 7203:7203 -p 9003:9003 --name m3db -v $(pwd)/m3db_data:/var/lib/m3db quay.io/m3db/m3dbnode:latest&lt;/code>&lt;/p>
&lt;p>该容器的端口为7201（用于管理集群拓扑），端口为7203，Prometheus用来刮除M3DB和M3Coordinator生成的度量，端口9003（用于读取和写入度量）已公开。&lt;/p>
&lt;p>这时候m3db已经启动,需要创建一个初始命名空间.官方镜象默认是type:local,namespace:default. 这个可以进入容器查看到配置位置&lt;code>/etc/d3dbnode/m3dbnode.yml&lt;/code>.如果我们创建其他命名空间需要在m3coordinator中配置好.&lt;/p>
&lt;p>&lt;code>curl -X POST http://localhost:7201/api/v1/database/create -d '{ &amp;quot;type&amp;quot;: &amp;quot;local&amp;quot;, &amp;quot;namespaceName&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;retentionTime&amp;quot;: &amp;quot;24h&amp;quot; }'&lt;/code>&lt;/p></description></item></channel></rss>