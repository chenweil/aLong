<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gulp on aLong blog</title>
    <link>https://blog.51ai.vip/aLong.github.io/tags/gulp/</link>
    <description>Recent content in gulp on aLong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Apr 2019 18:08:54 +0000</lastBuildDate><atom:link href="https://blog.51ai.vip/aLong.github.io/tags/gulp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gulp笔记</title>
      <link>https://blog.51ai.vip/aLong.github.io/posts/gulp%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 22 Apr 2019 18:08:54 +0000</pubDate>
      
      <guid>https://blog.51ai.vip/aLong.github.io/posts/gulp%E7%AC%94%E8%AE%B0/</guid>
      <description>gulp gulp.js是一个前端构建工具。
安装  npm 安装全局gulp，npm install -g gulp。（如果没有梯子，最好安装下cnpm） cnpm 安装 npm install -g cnpm --registry=https://registry.npm.taobao.org 安装完cnpm，下面所有npm操作替换cnpm 执行即可。 进入项目，初始化（npm init） 项目安装gulp，项目文件夹下，npm install --save-dev gulp。 (&amp;ndash;save-dev 加入此项目依赖中，不需要可取消这个参数) 项目根创建gulpfile.js文件，文件内创建任务测试。  var gulp = require(&#39;gulp&#39;); gulp.task(&#39;default&#39;,function(){ console.log(&#39;hello world!&#39;); }); 运行 gulp，可以看到默认执行，输出 hello world! 。测试成功。  gulp API 上面运行 gulp 执行default ，这个是gulp API。 [文档](https://www.gulpjs.com.cn/docs/api/)  gulp工作方式 gulp.src 获取文件流,通过pipe方法导入到插件，插件处理的流通过pipe方法导入 gulp.dest中, gulp.dest 输出目标文件。
  gulp src gulp.src(globs[, options])
 输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。</description>
    </item>
    
  </channel>
</rss>
