[{"content":"一款macOS的APP app网站 : https://snapbox.app/\n我在v2ex上看到此贴.\n作者3.5天的时间通过Claude 3.5 Sonnet协助开发的macOS App.需要M系列芯片的设备.\n看起来像是spotlight,raycast这种工具的方式启动,调出后实现与AI的一系列操作. 比如翻译、对话、优化内容等工作.\n支持ollama和服务提供商API.\n配置内容简单,支持prompt.\n接入配置 呼出主界面时,进入 settings.\n设置界面中的 SELECT PROVIDER中选择模型的厂商.\n我这里配置过Ollama和Custom Endpoint.Custom Endpoint我选择了 siliconflow.\n配置时,输入完 CUSTOM ENDPOINT URL 和 ** CUSTOM ENDPOINT API KEY**后可以获取模型.\n勾选自己使用的模型名字即可.如果API服务商不支持获取可以自己点击+号添加.\n功能演示 我觉得此软件的特色是:\n此软件支持全局快捷键,呼出程序,快捷进入某特定prompt等.\n选择文字后会被程序捕获. 免去了复制粘贴.\n常规对话 复制粘贴、打字与AI交互. 快捷上支持重新生成、继续、继续输入.\n放个视频演示:\nhttps://watch.wave.video/6UP7usIlnYJ9vC0B\nReactor 模式 此模式是监听你的指针选择,剪切板内容.快速响应.\n放个视频演示:\nhttps://watch.wave.video/KRjgWJQ5nJmSj0yX\n最后 看到作者仅用几天时间借助大模型开发出一个功能丰富的app，令人惊叹。\n既体现了大模型的强大能力，也展示了作者高超的开发技巧和创新思维。\n反思自己也在日常工作中尝试利用AI模型来优化脚本编写和项目代码调整，确实感受到了效率的提升。\n展望未来，AI辅助开发很可能成为主流趋势。but我们仍需谨慎对待，在享受AI带来便利的同时，也要注意培养自身解决问题的能力，而不是过度依赖AI。\n完结~ 感谢观看\n","permalink":"http://localhost:1313/aLong/posts/snapbox/","summary":"\u003ch1 id=\"一款macos的app\"\u003e一款macOS的APP\u003c/h1\u003e\n\u003cp\u003eapp网站 : \u003ca href=\"https://snapbox.app/\"\u003ehttps://snapbox.app/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e我在\u003ca href=\"https://www.v2ex.com/t/1062087\"\u003ev2ex\u003c/a\u003e上看到此贴.\u003c/p\u003e\n\u003cp\u003e作者3.5天的时间通过Claude 3.5 Sonnet协助开发的macOS App.需要M系列芯片的设备.\u003c/p\u003e\n\u003cp\u003e看起来像是\u003ccode\u003espotlight\u003c/code\u003e,\u003ccode\u003eraycast\u003c/code\u003e这种工具的方式启动,调出后实现与AI的一系列操作.\n比如翻译、对话、优化内容等工作.\u003c/p\u003e\n\u003cp\u003e支持ollama和服务提供商API.\u003c/p\u003e\n\u003cp\u003e配置内容简单,支持prompt.\u003c/p\u003e\n\u003ch1 id=\"接入配置\"\u003e接入配置\u003c/h1\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/14/z83RnpaOZh56Hwu.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e呼出主界面时,进入 \u003ccode\u003esettings\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/14/CpLyGafc6xA7eRm.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e设置界面中的 \u003cstrong\u003eSELECT PROVIDER\u003c/strong\u003e中选择模型的厂商.\u003c/p\u003e\n\u003cp\u003e我这里配置过\u003ccode\u003eOllama\u003c/code\u003e和\u003ccode\u003eCustom Endpoint\u003c/code\u003e.\u003ccode\u003eCustom Endpoint\u003c/code\u003e我选择了 \u003cstrong\u003esiliconflow\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e配置时,输入完 \u003cstrong\u003eCUSTOM ENDPOINT URL\u003c/strong\u003e 和 ** CUSTOM ENDPOINT API KEY**后可以获取模型.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/14/itNTZsmAGuX17Ik.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e勾选自己使用的模型名字即可.如果API服务商不支持获取可以自己点击\u003ccode\u003e+\u003c/code\u003e号添加.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/14/Gmbf93cek286JBT.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003ch1 id=\"功能演示\"\u003e功能演示\u003c/h1\u003e\n\u003cp\u003e我觉得此软件的特色是:\u003c/p\u003e\n\u003cp\u003e此软件支持全局快捷键,呼出程序,快捷进入某特定prompt等.\u003c/p\u003e\n\u003cp\u003e选择文字后会被程序捕获. 免去了复制粘贴.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e常规对话\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/14/jAsTeFm9kKUSqGV.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e复制粘贴、打字与AI交互. 快捷上支持重新生成、继续、继续输入.\u003c/p\u003e\n\u003cp\u003e放个视频演示:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://watch.wave.video/6UP7usIlnYJ9vC0B\"\u003ehttps://watch.wave.video/6UP7usIlnYJ9vC0B\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eReactor 模式\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e此模式是监听你的指针选择,剪切板内容.快速响应.\u003c/p\u003e\n\u003cp\u003e放个视频演示:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://watch.wave.video/KRjgWJQ5nJmSj0yX\"\u003ehttps://watch.wave.video/KRjgWJQ5nJmSj0yX\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"最后\"\u003e最后\u003c/h1\u003e\n\u003cp\u003e看到作者仅用几天时间借助大模型开发出一个功能丰富的app，令人惊叹。\u003c/p\u003e\n\u003cp\u003e既体现了大模型的强大能力，也展示了作者高超的开发技巧和创新思维。\u003c/p\u003e\n\u003cp\u003e反思自己也在日常工作中尝试利用AI模型来优化脚本编写和项目代码调整，确实感受到了效率的提升。\u003c/p\u003e\n\u003cp\u003e展望未来，AI辅助开发很可能成为主流趋势。but我们仍需谨慎对待，在享受AI带来便利的同时，也要注意培养自身解决问题的能力，而不是过度依赖AI。\u003c/p\u003e\n\u003cp\u003e完结~\n感谢观看\u003c/p\u003e","title":"Snapbox"},{"content":"背景 使用arc浏览器作为主力之前,更喜欢chrome.\n也考虑edge替代朴素的chrome.事与愿违,在后面使用中edge变越越来越不喜欢的东西.\n加入了很多我不喜欢、不去用的功能展示在界面上. 后面我就没继续使用了,不评价edge的好坏.我不喜欢用它.\n后面看到arc,也是简单尝试了一下,后面我觉得不错的菜就换成了主力.\n喜欢的功能 下面我介绍一下我使用这个arc浏览器喜欢的点.\nspace 在每个Space可放不同的标签,做到了管理和分类. 同时还可以定制颜色,样式.\n可以根据不同账号(profile)分配不同的会话信息. 也就是一个浏览器不同space区分账号.满足挂小号、测试等需要多身份在同一个浏览器访问.\n如上图,我新建了一个along的profile,创建了一个space. 在访问linux.do时,如图.如果我有小号就可以这么搞拉.\nEasel 我用这个功能很简单,就是看下动态信息. 比如你想一些动态信息,但又不需要整个页面,是不是想把局部拿出来. 白板可以的,你截取某网页部分放到白板里,开启就可以实现.\n上面是我自己创建的两个页面. 这俩一个是没事看看模型排行. 另一个是关注自己的其他信息.\n可能图片不能直观解释这个用途.放个动图,看那个时间的变化:\n当我想看周刊我就直接在这里点就好了,不需要单独打开此网站去查看这个列表,美滋滋.\n我能想到画架的用途还有: 头脑风暴、协作、笔记、可视化信息、素材灵感搜集、整理内容、组织结构.\n这些做完可以分享.\nBoost 这个功能可更改网页一些元素的颜色，字体类型、字体大小等. 还是以佬友为例:\n主题是默认,我通过boost功能将颜色、字体、英文文字是蛇形、全大写、全小写的配置来自定义一下.\nboost中我最喜欢的是zap. 可以隐藏掉自己不喜欢的页面元素.\n继续以佬友为例: 点击zap后,可以选择页面元素.\n当选择元素后点击 zap this 就可以干掉他.\n这是隐藏掉一些页面元素后的样子.\nFavorite 这是左上角那部分内容,做多可以放12个块.块支持split的组合tab.特定适配过的还有奇效,比如gmail、outlook、slack等等等. 我把常用的网站放在这里,佬友有消息提示,这icon上会有标记的.以便我打开查看消息.\nSplit 通过简单拖拽,可实现tab的分屏. 新打开一个网页想和当前tab做分屏,点击链接时按住option就实现了分屏.\n能分能拆,用起来体验不错.但有一点不太好,就是在分屏中关闭的tab就没了.只能重新pinned.\n搜索 默认地址栏输入内容能搜索,或者自己访问搜索引擎.\n我更喜欢在command + T 弹出来的对话框里进行搜索. 他像 raycast 功能那样快捷搜索.\nGitHub:\nlinux.do:\n在设置中添加:\n红框中就是演示的两个.\n操作 使用工具我比较看重工具是否符合我的需求.已经使用上顺不顺手. 很显然我喜欢arc的一些功能和交互.尤其是在快捷键上也挺顺手的. 举个例子: 我打开佬友后,默认看话题是自定进入话题页面的.有人希望每次单开tab什么的.在arc上选择很多.\n在split上看主题(一般的网页是直接option+链接就打开split模型):\n如果我不知道是否值得,想简单了解一下再做决定呢?那就按住shift 弹出一个浏览器进行浏览,之后可以查看、分屏、关闭等操作.\n如果你想打开新tab查看主题,也可以按住shift+command 点击主题,就是在新的tab也查看.\n如果我想完成上一条的功能,不想记住哪些快捷键怎么办? 那你可以按住control 点击话题,这是浏览器会让你选择一些操作,这里面满足你.\n肯定还有很多不同需求, 这需要个人针对工具进行探索了.\n还有想little窗口功能也不错.\n最后 评估一个工具是否符合你的需求，最终决定权在你自己。\n其他人的建议和意见可以作为参考，但真正的选择是个人的责任。\n你需要根据自己的实际情况和需求来做出判断，因为只有你自己最了解自己的需求和期望。\n完结~\n感谢观看.\n","permalink":"http://localhost:1313/aLong/posts/arc/","summary":"\u003ch1 id=\"背景\"\u003e背景\u003c/h1\u003e\n\u003cp\u003e使用arc浏览器作为主力之前,更喜欢chrome.\u003c/p\u003e\n\u003cp\u003e也考虑edge替代朴素的chrome.事与愿违,在后面使用中edge变越越来越不喜欢的东西.\u003c/p\u003e\n\u003cp\u003e加入了很多我不喜欢、不去用的功能展示在界面上. 后面我就没继续使用了,不评价edge的好坏.我不喜欢用它.\u003c/p\u003e\n\u003cp\u003e后面看到arc,也是简单尝试了一下,后面我觉得不错的菜就换成了主力.\u003c/p\u003e\n\u003ch1 id=\"喜欢的功能\"\u003e喜欢的功能\u003c/h1\u003e\n\u003cp\u003e下面我介绍一下我使用这个arc浏览器喜欢的点.\u003c/p\u003e\n\u003ch2 id=\"space\"\u003espace\u003c/h2\u003e\n\u003cp\u003e在每个Space可放不同的标签,做到了管理和分类. 同时还可以定制颜色,样式.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/hU8qgeYufw4FO1Z.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e可以根据不同账号(profile)分配不同的\u003cstrong\u003e会话信息\u003c/strong\u003e. 也就是一个浏览器不同space区分账号.满足挂小号、测试等需要多身份在同一个浏览器访问.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/HP3ZGCYNQDEjoFe.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e如上图,我新建了一个along的profile,创建了一个space.\n在访问linux.do时,如图.如果我有小号就可以这么搞拉.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/VGZ7zqwAcmxr5kR.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"easel\"\u003eEasel\u003c/h2\u003e\n\u003cp\u003e我用这个功能很简单,就是看下动态信息.\n比如你想一些动态信息,但又不需要整个页面,是不是想把局部拿出来. 白板可以的,你截取某网页部分放到白板里,开启就可以实现.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/olkLjYzgICXZR5y.png\" alt=\"\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/dAZMsg9fh7xcSXW.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e上面是我自己创建的两个页面. 这俩一个是没事看看模型排行. 另一个是关注自己的其他信息.\u003c/p\u003e\n\u003cp\u003e可能图片不能直观解释这个用途.放个动图,看那个时间的变化:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/l8gcuOXb7v2QU3B.gif\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e当我想看周刊我就直接在这里点就好了,不需要单独打开此网站去查看这个列表,美滋滋.\u003c/p\u003e\n\u003cp\u003e我能想到画架的用途还有: 头脑风暴、协作、笔记、可视化信息、素材灵感搜集、整理内容、组织结构.\u003c/p\u003e\n\u003cp\u003e这些做完可以分享.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/hjCG9XRnslwztSo.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"boost\"\u003eBoost\u003c/h2\u003e\n\u003cp\u003e这个功能可更改网页一些元素的颜色，字体类型、字体大小等.\n还是以佬友为例:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/XScBNmgVJFWzdUC.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e主题是默认,我通过boost功能将颜色、字体、英文文字是蛇形、全大写、全小写的配置来自定义一下.\u003c/p\u003e\n\u003cp\u003eboost中我最喜欢的是zap.\n可以隐藏掉自己不喜欢的页面元素.\u003c/p\u003e\n\u003cp\u003e继续以佬友为例:\n点击zap后,可以选择页面元素.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/Ahv7iQMr49Dd1Vt.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e当选择元素后点击 zap this 就可以干掉他.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/F3lUHbRMhV8qmcD.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e这是隐藏掉一些页面元素后的样子.\u003c/p\u003e\n\u003ch2 id=\"favorite\"\u003eFavorite\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/UoHBwWDEJAt1ZQP.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e这是左上角那部分内容,做多可以放12个块.块支持split的组合tab.特定适配过的还有奇效,比如gmail、outlook、slack等等等. 我把常用的网站放在这里,佬友有消息提示,这icon上会有标记的.以便我打开查看消息.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/09/13/tBoPcZLpj1lVADx.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"split\"\u003eSplit\u003c/h2\u003e\n\u003cp\u003e通过简单拖拽,可实现tab的分屏.\n新打开一个网页想和当前tab做分屏,点击链接时按住\u003ccode\u003eoption\u003c/code\u003e就实现了分屏.\u003c/p\u003e\n\u003cp\u003e能分能拆,用起来体验不错.但有一点不太好,就是在分屏中关闭的tab就没了.只能重新pinned.\u003c/p\u003e","title":"Arc"},{"content":"微调 fine-tuning 微调是一种监督学习过程,在这个过程中可以使用一组带标签的示例数据来更新LLM的权重.使其为特定任务生成良好完成的能力.\n指令微调特别擅长提高模型在各种任务中的性能. 比如想让模型翻译能力增强,那就给他一些示例是包括翻译这句话之类的说明.即时完成示例允许模型学习生成遵循给定说明的响应.\n微调大致步骤 准备训练数据,需要特定的格式. 也可以通过数据集+模版来处理使其既是模版又是数据集(指令数据集). 将数据集划分为训练验证和测试.然后使用计算出的损失来更新标准反向传播中的模型权重(standard backpropagation)。多批次重复操作. 更新完进行最终的性能评估.通过测试得出精度. 最终得到一个微调模型(Instruct LLM). ","permalink":"http://localhost:1313/aLong/posts/llm_fine-tuning/","summary":"\u003ch1 id=\"微调-fine-tuning\"\u003e微调 fine-tuning\u003c/h1\u003e\n\u003cp\u003e微调是一种监督学习过程,在这个过程中可以使用一组带标签的示例数据来更新LLM的权重.使其为特定任务生成良好完成的能力.\u003c/p\u003e\n\u003cp\u003e指令微调特别擅长提高模型在各种任务中的性能.\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/08/15/zdjLFeb17cpSwvO.png\" alt=\"image.png\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e比如想让模型翻译能力增强,那就给他一些示例是包括翻译这句话之类的说明.即时完成示例允许模型学习生成遵循给定说明的响应.\u003c/p\u003e\n\u003ch2 id=\"微调大致步骤\"\u003e微调大致步骤\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e准备训练数据,需要特定的格式. 也可以通过数据集+模版来处理使其既是模版又是数据集(指令数据集).\u003c/li\u003e\n\u003cli\u003e将数据集划分为训练验证和测试.然后使用计算出的损失来更新标准反向传播中的模型权重(standard backpropagation)。多批次重复操作.\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/08/15/NnuGVBHyRJAmeSQ.png\" alt=\"image.png\"  /\u003e\n\u003c/li\u003e\n\u003cli\u003e更新完进行最终的性能评估.通过测试得出精度.\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/08/15/7V1TbfgcANhPyk5.png\" alt=\"image.png\"  /\u003e\n\u003c/li\u003e\n\u003cli\u003e最终得到一个微调模型(Instruct LLM).\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2024/08/15/4dINakbHTDw2WRJ.png\" alt=\"image.png\"  /\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","title":"LLM_fine Tuning"},{"content":"技术类的Roadmap（路线图）具有许多好处，下面是其中几个主要的好处：\n明确目标：Roadmap可以帮助技术团队明确目标和愿景。它提供了一个清晰的计划，使团队成员知道他们正在朝着什么方向前进，并且可以更好地集中精力和资源。 规划优先级：Roadmap可以帮助团队确定优先级和时间表。通过将不同的功能、项目和任务安排在时间轴上，团队可以了解何时开始和完成每个任务，从而更好地分配资源和人力。 沟通和协作：Roadmap是与团队成员、管理层和利益相关者进行沟通和协作的重要工具。它提供了一个共同的视觉框架，帮助各方理解技术发展的方向和计划，从而促进更好的合作和决策制定。 风险管理：Roadmap有助于识别和管理潜在的风险和挑战。通过在Roadmap中考虑外部因素、技术依赖关系和风险因素，团队可以更好地规划和应对可能的问题，降低项目失败的风险。 激励和动力：Roadmap可以为团队提供激励和动力。清晰的目标和规划可以激发团队成员的工作热情和投入，使他们感到对项目和组织的价值和重要性。 我之前保存过GitHub: Alikhll/golang-developer-roadmap的roadmap。正好在上周末想看看自己找一块内容来学习学习。我发现作者还是2021年的版本，后面也没有更新什么。那我想在obsidian中把这个图复刻一个，然后根据内容去做计划去学习。后来我又想到另一个roadmap也不错。正好两个整合一下。那么就有了一个我魔改的内容。\n此图是通过Obsidian的canvas 功能进行的制作。并且我后面打算通过双链来完成此图中部分内容的笔记。\n此图整体可以看到通过颜色来区分了一些作者划分的知识点优先级，以便确定哪些内容应优先进行。此图我觉得有个遗憾就是没能够持续进行更新。后面还好我找到另一个认为不错的roadmap进行补充和完善。\n主体还是golang-developer-roadmap，顺便在前后加入了 Backend Developer ,后面加入了Full Stack Developer。 其实还有很多roadmap相关，比如devops，docker，Frontend Developer等等吧都会涉及到一些内容。并且这个roadmap还可以在图中交互，我觉得不错。\n主要不错地方包含：\n可交互。 此roadmap是持续更新的。 比如这个后端内容中，你点击 What is HTTP？ 在右侧弹出内容中，可以看到具体内容，并有相关的链接可以去访问。 最上面还有个状态，可通过状态编辑此内容是否已经达到目的。\n点击Update Status后可以看到有三个选项。\n点击Done之后，图中将做出变化：\n个人认为是个不错的方式。\n个人认为技术类的Roadmap可以帮助团队提高效率、降低风险、改善沟通和协作，并为实现技术目标提供清晰的指导。它是一个重要的管理工具，有助于组织和规划技术团队的工作，使其能够更好地满足业务需求并取得成功。\n完结 祝好 ～\n","permalink":"http://localhost:1313/aLong/posts/roadmapgo/","summary":"\u003cp\u003e技术类的Roadmap（路线图）具有许多好处，下面是其中几个主要的好处：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e明确目标：Roadmap可以帮助技术团队明确目标和愿景。它提供了一个清晰的计划，使团队成员知道他们正在朝着什么方向前进，并且可以更好地集中精力和资源。\u003c/li\u003e\n\u003cli\u003e规划优先级：Roadmap可以帮助团队确定优先级和时间表。通过将不同的功能、项目和任务安排在时间轴上，团队可以了解何时开始和完成每个任务，从而更好地分配资源和人力。\u003c/li\u003e\n\u003cli\u003e沟通和协作：Roadmap是与团队成员、管理层和利益相关者进行沟通和协作的重要工具。它提供了一个共同的视觉框架，帮助各方理解技术发展的方向和计划，从而促进更好的合作和决策制定。\u003c/li\u003e\n\u003cli\u003e风险管理：Roadmap有助于识别和管理潜在的风险和挑战。通过在Roadmap中考虑外部因素、技术依赖关系和风险因素，团队可以更好地规划和应对可能的问题，降低项目失败的风险。\u003c/li\u003e\n\u003cli\u003e激励和动力：Roadmap可以为团队提供激励和动力。清晰的目标和规划可以激发团队成员的工作热情和投入，使他们感到对项目和组织的价值和重要性。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e我之前保存过\u003ca href=\"https://github.com/Alikhll/golang-developer-roadmap\"\u003eGitHub: Alikhll/golang-developer-roadmap\u003c/a\u003e的roadmap。正好在上周末想看看自己找一块内容来学习学习。我发现作者还是2021年的版本，后面也没有更新什么。那我想在obsidian中把这个图复刻一个，然后根据内容去做计划去学习。后来我又想到另一个roadmap也不错。正好两个整合一下。那么就有了一个我魔改的内容。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.imgur.com/IkaIOP6.jpg\" alt=\"IkaIOP6\"  /\u003e\n\n此图是通过Obsidian的canvas 功能进行的制作。并且我后面打算通过双链来完成此图中部分内容的笔记。\u003c/p\u003e\n\u003cp\u003e此图整体可以看到通过颜色来区分了一些作者划分的知识点优先级，以便确定哪些内容应优先进行。此图我觉得有个遗憾就是没能够持续进行更新。后面还好我找到另一个认为不错的\u003ca href=\"https://roadmap.sh/\"\u003eroadmap\u003c/a\u003e进行补充和完善。\u003c/p\u003e\n\u003cp\u003e主体还是\u003ca href=\"https://github.com/Alikhll/golang-developer-roadmap\"\u003egolang-developer-roadmap\u003c/a\u003e，顺便在前后加入了 \u003ca href=\"https://roadmap.sh/backend\"\u003eBackend Developer\u003c/a\u003e ,后面加入了\u003ca href=\"https://roadmap.sh/full-stack\"\u003eFull Stack Developer\u003c/a\u003e。 其实还有很多roadmap相关，比如\u003ccode\u003edevops\u003c/code\u003e，\u003ccode\u003edocker\u003c/code\u003e，\u003ccode\u003eFrontend Developer\u003c/code\u003e等等吧都会涉及到一些内容。并且这个\u003ca href=\"https://roadmap.sh/\"\u003eroadmap\u003c/a\u003e还可以在图中交互，我觉得不错。\u003c/p\u003e\n\u003cp\u003e主要不错地方包含：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e可交互。\u003c/li\u003e\n\u003cli\u003e此roadmap是持续更新的。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.imgur.com/E4QRa5M.png\" alt=\"E4QRa5M\"  /\u003e\n\n比如这个后端内容中，你点击 \u003ccode\u003eWhat is HTTP？\u003c/code\u003e 在右侧弹出内容中，可以看到具体内容，并有相关的链接可以去访问。 最上面还有个状态，可通过状态编辑此内容是否已经达到目的。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.imgur.com/dLk2tVY.png\" alt=\"dLk2tVY\"  /\u003e\n\n点击\u003ccode\u003eUpdate Status\u003c/code\u003e后可以看到有三个选项。\u003c/p\u003e\n\u003cp\u003e点击\u003ccode\u003eDone\u003c/code\u003e之后，图中将做出变化：\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.imgur.com/krk3YT0.png\" alt=\"krk3YT0\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e个人认为是个不错的方式。\u003c/p\u003e\n\u003cp\u003e个人认为技术类的Roadmap可以帮助团队提高效率、降低风险、改善沟通和协作，并为实现技术目标提供清晰的指导。它是一个重要的管理工具，有助于组织和规划技术团队的工作，使其能够更好地满足业务需求并取得成功。\u003c/p\u003e\n\u003cp\u003e完结\n祝好\n～\u003c/p\u003e","title":"Roadmap\u0026Go"},{"content":"Colima GitHub\nColima 是一个轻量级的容器运行时，专门针对开发者在本地环境中运行容器应用。它的目标是提供一种比 Docker Desktop 更简单、更快速、更安全的容器运行时解决方案。\nColima 基于 Moby 和 LinuxKit 构建，具有以下特点：\n由于它只是一个容器运行时，因此相对于 Docker Desktop，它的安装和启动速度更快，所需的资源更少。 它使用了轻量级的虚拟化技术，例如 HyperKit 和 VPNKit，以提高容器的性能和安全性。 Colima 提供了一组简单的 CLI 命令，使得用户可以轻松地启动、停止、删除容器，以及执行其他常见操作。 它还提供了一些有用的功能，例如在本地浏览器中打开容器中运行的应用程序、自动重启容器等。 总的来说，Colima 是一个轻量级、易于使用的容器运行时，旨在为开发者提供一种更快、更安全的容器环境，使得开发和测试容器应用程序变得更加轻松。\n安装 在 macOS 上安装 Colima 很简单，只需要执行以下几个步骤：\n首先，您需要打开终端并使用 Homebrew 包管理器安装 Colima。如果您没有安装 Homebrew，请先安装 Homebrew： /bin/bash -c \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026quot;\n安装 Colima： brew install colima\n安装完成后，您可以使用 colima 命令来启动 Colima： colima start\n如果您想停止 Colima，可以使用以下命令： colima stop\n要卸载 Colima，请运行以下命令： brew uninstall colima\n安装完成后，您就可以使用 Colima 运行和管理容器应用程序了。\ndocker交互 启动 Colima 后，您可以使用 Docker CLI 与容器交互。在 Colima 中，Docker CLI 已经预先安装了，所以您可以直接使用 docker 命令来管理容器。\n以下是一些基本的 Docker CLI 命令：\ndocker run - 运行容器 docker ps - 查看正在运行的容器 docker stop - 停止容器 docker rm - 删除容器 docker images - 查看本地镜像 docker pull - 下载镜像 docker push - 上传镜像 请注意，当您在 Colima 中运行容器时，它们将运行在 Colima 虚拟机中，而不是您的本地计算机上。因此，在使用 Docker CLI 命令时，请确保将其指向 Colima 虚拟机，而不是本地 Docker 安装。\n您可以使用以下命令来配置 Docker CLI，使其指向 Colima 虚拟机：\nbash\neval \u0026#34;$(colima env)\u0026#34; 此命令将设置环境变量，使得 docker 命令指向 Colima 虚拟机中的 Docker 服务。在执行此命令后，您就可以直接使用 docker 命令来管理 Colima 中的容器了。\nColima 部分操作命令说明 以下是一些常见的 Colima CLI 命令及其说明：\ncolima start - 启动 Colima 容器运行时。 colima stop - 停止 Colima 容器运行时。 colima restart - 重启 Colima 容器运行时。 colima status - 显示 Colima 容器运行时的状态信息。 colima ssh - 通过 SSH 连接到 Colima 容器运行时。 colima ip - 显示 Colima 容器运行时的 IP 地址。 colima info - 显示有关 Colima 容器运行时的详细信息，包括版本、磁盘使用情况和安装路径等。 colima doctor - 运行诊断程序以检查 Colima 容器运行时的配置和设置是否正确。 colima web - 在本地浏览器中打开容器中运行的应用程序。 比如你想修改docker源的地址，可以通过colima ssh 进去之后，编辑 Docker 的配置文件 /etc/docker/daemon.json。\n除了以上列出的常见命令外，Colima 还提供了许多其他有用的命令和选项。您可以使用 colima --help 命令来查看完整的命令列表和选项说明。\nColima自定义虚拟机 Colima 使用虚拟机技术来提供容器运行时环境。默认情况下，Colima 会自动创建和配置虚拟机。但是，如果您需要更改虚拟机的配置或行为，可以使用以下命令来配置 Colima 的虚拟机：\ncolima config set - 设置指定的 Colima 配置项。 colima config get - 获取指定的 Colima 配置项的值。 colima config unset - 删除指定的 Colima 配置项。 colima config inspect - 显示所有 Colima 配置项的当前值。 在初始启动时，Colima 使用用户指定的运行时，默认为 Docker。其他还有 Containerd、Kubernetes。\n以下是一些常用的 Colima 配置项：\nvm-cpus - 虚拟机的 CPU 核心数量。 vm-memory - 虚拟机的内存大小。 vm-disk-size - 虚拟机磁盘的大小。 vm-network - 虚拟机的网络配置，如 IP 地址、网关和 DNS 服务器等。 docker-version - Colima 容器运行时中 Docker 的版本号。 例如，要将虚拟机的 CPU 核心数量设置为 4，可以使用以下命令：\ncolima config set vm-cpus 4 完成以上命令后，重新启动 Colima 容器运行时即可使设置生效：\ncolima restart\n您可以使用 colima config get 命令来查看当前的 Colima 配置项值。如果需要删除某个配置项，可以使用 colima config unset 命令。如果需要查看所有 Colima 配置项的当前值，可以使用 colima config inspect 命令。\n重启电脑后 重启电脑后，需要先启动colima的之前创建的虚拟机。 默认启动上次关闭的虚拟机。 colima staer 启动之后，就可以进行docker的操作了。\n完结 祝好～\n","permalink":"http://localhost:1313/aLong/posts/colima-macos%E6%9C%80%E5%B0%8F%E7%9A%84%E8%AE%BE%E7%BD%AE%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9B%BF%E6%8D%A2docker-desktop%E6%96%B9%E6%A1%88/","summary":"\u003ch1 id=\"colima\"\u003eColima\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/abiosoft/colima\"\u003eGitHub\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eColima 是一个轻量级的容器运行时，专门针对开发者在本地环境中运行容器应用。它的目标是提供一种比 Docker Desktop 更简单、更快速、更安全的容器运行时解决方案。\u003c/p\u003e\n\u003cp\u003eColima 基于 Moby 和 LinuxKit 构建，具有以下特点：\u003c/p\u003e\n\u003cp\u003e由于它只是一个容器运行时，因此相对于 Docker Desktop，它的安装和启动速度更快，所需的资源更少。\n它使用了轻量级的虚拟化技术，例如 HyperKit 和 VPNKit，以提高容器的性能和安全性。\nColima 提供了一组简单的 CLI 命令，使得用户可以轻松地启动、停止、删除容器，以及执行其他常见操作。\n它还提供了一些有用的功能，例如在本地浏览器中打开容器中运行的应用程序、自动重启容器等。\n总的来说，Colima 是一个轻量级、易于使用的容器运行时，旨在为开发者提供一种更快、更安全的容器环境，使得开发和测试容器应用程序变得更加轻松。\u003c/p\u003e\n\u003ch2 id=\"安装\"\u003e安装\u003c/h2\u003e\n\u003cp\u003e在 macOS 上安装 Colima 很简单，只需要执行以下几个步骤：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e首先，您需要打开终端并使用 Homebrew 包管理器安装 Colima。如果您没有安装 Homebrew，请先安装 Homebrew：\n\u003ccode\u003e/bin/bash -c \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e安装 Colima：\n\u003ccode\u003ebrew install colima\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e安装完成后，您可以使用 colima 命令来启动 Colima：\n\u003ccode\u003ecolima start\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果您想停止 Colima，可以使用以下命令：\n\u003ccode\u003ecolima stop\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e要卸载 Colima，请运行以下命令：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003ebrew uninstall colima\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e安装完成后，您就可以使用 Colima 运行和管理容器应用程序了。\u003c/p\u003e\n\u003ch2 id=\"docker交互\"\u003edocker交互\u003c/h2\u003e\n\u003cp\u003e启动 Colima 后，您可以使用 Docker CLI 与容器交互。在 Colima 中，Docker CLI 已经预先安装了，所以您可以直接使用 \u003ccode\u003edocker\u003c/code\u003e 命令来管理容器。\u003c/p\u003e","title":"Colima MacOS最小的设置运行容器运行时,替换Docker Desktop方案"},{"content":"学习k8s 学习k8s做笔记，通过kubeadm搭建1master、2node。网络插件：flannel。系统Ubuntu22.04\n系统安装docker Docker官方手册\nmaster、node设备各安装docker、kubelet、 kubeadm、 kubectl。\n为kubeadm准备 master、node进行准备工作：\n将cgroup处理改成systemd nano /etc/docker/daemon.json\n{ \u0026#34;exec-opts\u0026#34;: [\u0026#34;native.cgroupdriver=systemd\u0026#34;], \u0026#34;log-driver\u0026#34;: \u0026#34;json-file\u0026#34;, \u0026#34;log-opts\u0026#34;: { \u0026#34;max-size\u0026#34;: \u0026#34;100m\u0026#34; }, \u0026#34;storage-driver\u0026#34;: \u0026#34;overlay2\u0026#34; } sudo systemctl enable docker sudo systemctl daemon-reload sudo systemctl restart docker\n为了让 Kubernetes 能够检查、转发网络流量，你需要修改 iptables 的配置，启用“br_netfilter”模块 nano /etc/modules-load.d/k8s.conf\nbr_netfilter nano /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward=1 sudo sysctl --system\n修改“/etc/fstab”，关闭 Linux 的 swap 分区，提升 Kubernetes 的性能 sudo swapoff -a sudo sed -ri \u0026#39;/\\sswap\\s/s/^#?/#/\u0026#39; /etc/fstab 安装kubeadm Kuneadm官方手册 在master、node上都需要安装\n更新 apt 包索引并安装使用 Kubernetes apt 仓库所需要的包： sudo apt-get update sudo apt-get install -y apt-transport-https ca-certificates curl (有条件)下载 Google Cloud 公开签名秘钥： sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg 如果上面访问不到，可选择其他,例如清华源提供： 导入gpg key\nsudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg 创建/etc/apt/sources.list.d/kubernetes.list，内容：\ndeb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://mirrors.tuna.tsinghua.edu.cn/kubernetes/apt kubernetes-xenial main 之后 sudo apt update 更新一下。\n安装所需的1.23.x 版本： sudo apt install -y kubeadm=1.23.3-00 kubelet=1.23.3-00 kubectl=1.23.3-00\n锁定这三个软件的版本: sudo apt-mark hold kubelet kubeadm kubectl\nMaster配置 kubeadm init \\ --apiserver-advertise-address=172.20.20.12 \\ --kubernetes-version v1.23.3 \\ --pod-network-cidr=10.20.0.0/16 安装完成后按提示执行：\nmkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config 同时还有一个提示： Then you can join any number of worker nodes by running the following on each as root: 下面那行命令是其他节点就爱如集群的命令。\nMaster的token是有时效性的，默认超过24H后失效，要再创建新的token。在master上执行kubeadm token create --print-join-command\n安装网络插件flannel kube-flannel.yml 修改 net-conf.json： NetWrok地址，与Kubernetes的--pod-network-cidr 网段地址。 修改完成，kubectl apply -f kube-flannel.yml。\nNode节点配置 Node安装好kubeadm之后，通过join指令加入。 例如：\nsudo kubeadm join 172.20.20.12:6443 --token 80duqn.gzxz6rv5gkgosxkb \\ --discovery-token-ca-cert-hash sha256:84d55c1168e9830b4f66e1c0816a218da55f96cce50f750456186fcc726a79ab 验证 在Master上kubectl get node 查看。\n完结 祝好\n","permalink":"http://localhost:1313/aLong/posts/ubuntu22.04%E5%AE%89%E8%A3%85kubeadm/","summary":"\u003ch1 id=\"学习k8s\"\u003e学习k8s\u003c/h1\u003e\n\u003cp\u003e学习k8s做笔记，通过kubeadm搭建1master、2node。网络插件：flannel。系统Ubuntu22.04\u003c/p\u003e\n\u003ch2 id=\"系统安装docker\"\u003e系统安装docker\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.docker.com/engine/install/ubuntu/\"\u003eDocker官方手册\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003emaster、node设备各安装docker、kubelet、 kubeadm、 kubectl。\u003c/p\u003e\n\u003ch2 id=\"为kubeadm准备\"\u003e为kubeadm准备\u003c/h2\u003e\n\u003cp\u003emaster、node进行准备工作：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e将cgroup处理改成systemd\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003enano /etc/docker/daemon.json\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#008000;font-weight:bold\"\u003e\u0026#34;exec-opts\u0026#34;\u003c/span\u003e: [\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;native.cgroupdriver=systemd\u0026#34;\u003c/span\u003e],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#008000;font-weight:bold\"\u003e\u0026#34;log-driver\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ba2121\"\u003e\u0026#34;json-file\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#008000;font-weight:bold\"\u003e\u0026#34;log-opts\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#008000;font-weight:bold\"\u003e\u0026#34;max-size\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ba2121\"\u003e\u0026#34;100m\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#008000;font-weight:bold\"\u003e\u0026#34;storage-driver\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ba2121\"\u003e\u0026#34;overlay2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003esudo systemctl enable docker\u003c/code\u003e\n\u003ccode\u003esudo systemctl daemon-reload\u003c/code\u003e\n\u003ccode\u003esudo systemctl restart docker\u003c/code\u003e\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e为了让 Kubernetes 能够检查、转发网络流量，你需要修改 iptables 的配置，启用“br_netfilter”模块\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ccode\u003enano /etc/modules-load.d/k8s.conf\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003ebr_netfilter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003enano /etc/sysctl.d/k8s.conf\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003enet.bridge.bridge-nf-call-ip6tables\u003c/span\u003e \u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ba2121\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003enet.bridge.bridge-nf-call-iptables\u003c/span\u003e \u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ba2121\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003enet.ipv4.ip_forward\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003esudo sysctl --system\u003c/code\u003e\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e修改“/etc/fstab”，关闭 Linux 的 swap 分区，提升 Kubernetes 的性能\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003esudo swapoff -a\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003esudo sed -ri \u0026#39;/\\sswap\\s/s/^#?/#/\u0026#39; /etc/fstab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"安装kubeadm\"\u003e安装kubeadm\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/\"\u003eKuneadm官方手册\u003c/a\u003e\n\u003cstrong\u003e在master、node上都需要安装\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e更新 \u003ccode\u003eapt\u003c/code\u003e 包索引并安装使用 Kubernetes \u003ccode\u003eapt\u003c/code\u003e 仓库所需要的包：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt-get update\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt-get install -y apt-transport-https ca-certificates curl\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e(有条件)下载 Google Cloud 公开签名秘钥：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果上面访问不到，可选择其他,例如\u003ca href=\"https://mirrors.tuna.tsinghua.edu.cn/help/kubernetes/\"\u003e清华源\u003c/a\u003e提供：\n导入gpg key\u003c/p\u003e","title":"Ubuntu22.04安装kubeadm"},{"content":"Minikube 是本地 Kubernetes，专注于让 Kubernetes 易于学习和开发。\nMacOS部署方式: 官方教程\n本次使用的驱动是 parallels驱动。所以本机需要安装此软件。 安装kubectl：brew install kubectl 安装minikube：\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 sudo install minikube-darwin-amd64 /usr/local/bin/minikube 通过minikube启动集群 minikube start \\ --kubernetes-version=v1.23.9 \\ --image-mirror-country=\u0026#39;cn\u0026#39; \\ --registry-mirror=https://？？？？？.mirror.aliyuncs.com 因为是国内，所以--image-mirror-country='cn'。通过--registry-mirror为 Docker daemon 配置镜像加速。例如上面是阿里云镜像服务地址。 因为我学习的版本是1.23.x，所以制定了版本--kubernetes-version=v1.23.9。 默认他读去了驱动配置，识别是parallels,自己定义方式--driver=hyperkit。\n安装结果： 错误： 如果存在错误请看具体上面的问题，很多情况都能直观看到提示。其中图标是❗️提示一些问题、💡给你一些建议等等。\n驱动选择： 使用docker驱动需要安装docker desktop。其他驱动：virtualbox、vmware、ssh、Hyperkit等。具体详见drivers page\n验证结果 查询minikube状态 进入面板 kubectl控制 minikube kubectl -- get pods -A kubectl在minikube中使用，需要写 nimikune kubectl --后面加入执行的命令。 macos默认使用的zsh，在zsh加入alias就可以敲的少的了。\nvi ~/.zshrc #加入一行 alias kubectl=\u0026#34;minikube kubectl --\u0026#34; #退出 source ~/.zshrc 再创建一个Pod 创建： kubectl run nginx --image=nginx:alpine 查询： kubectl get pods nginx 详情： kubectl describe pods nginx 到这里k8s可以使用了。\nUbuntu22.04部署方式 我在续集上安装了一个Ubuntu的操作系统。在上面安装一遍，这次驱动是docker。 装完系统后，安装docker。 官方手册\n准备源操作 sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get -y install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release sudo mkdir -p /etc/apt/keyrings \u0026amp;\u0026amp; curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null 安装Docker Engine sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin #给当前用户加入docker组，加入完成注销再登陆 sudo usermod -aG docker $USER # 自启 sudo systemctl enable docker.service 安装minikube curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube 部署k8s minikube start \\ --kubernetes-version=v1.23.9 \\ --image-mirror-country=\u0026#39;cn\u0026#39; \\ --registry-mirror=https://????????.mirror.aliyuncs.com 可以看到装完他还提示我 kubectl没有。 5. 安装kubectl curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nsudo chmod +x kubectl \u0026amp;\u0026amp; sudo mv ./kubectl /usr/local/bin/kubectl 到此再Ubuntu2204也部署完成。\n后面继续学习\n祝好～\n","permalink":"http://localhost:1313/aLong/posts/%E9%80%9A%E8%BF%87minikube%E9%83%A8%E7%BD%B2k8s%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/","summary":"\u003cp\u003eMinikube 是本地 Kubernetes，专注于让 Kubernetes 易于学习和开发。\u003c/p\u003e\n\u003ch1 id=\"macos部署方式\"\u003eMacOS部署方式:\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://minikube.sigs.k8s.io/docs/start/\"\u003e官方教程\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本次使用的驱动是 parallels驱动。所以本机需要安装此软件。\n安装kubectl：\u003ccode\u003ebrew install kubectl\u003c/code\u003e\n安装minikube：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo install minikube-darwin-amd64 /usr/local/bin/minikube\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"通过minikube启动集群\"\u003e通过minikube启动集群\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eminikube start \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e--kubernetes-version\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003ev1.23.9 \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e--image-mirror-country\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;cn\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e--registry-mirror\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003ehttps://？？？？？.mirror.aliyuncs.com\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因为是国内，所以\u003ccode\u003e--image-mirror-country='cn'\u003c/code\u003e。通过\u003ccode\u003e--registry-mirror\u003c/code\u003e为 Docker daemon 配置镜像加速。例如上面是阿里云镜像服务地址。\n因为我学习的版本是1.23.x，所以制定了版本\u003ccode\u003e--kubernetes-version=v1.23.9\u003c/code\u003e。\n默认他读去了驱动配置，识别是\u003ccode\u003eparallels\u003c/code\u003e,自己定义方式\u003ccode\u003e--driver=hyperkit\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e安装结果：\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2023/01/06/C3AFxdiPbq8aIuR.jpg\" alt=\"C3AFxdiPbq8aIuR\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e错误\u003c/em\u003e：\n如果存在错误请看具体上面的问题，很多情况都能直观看到提示。其中图标是❗️提示一些问题、💡给你一些建议等等。\u003c/p\u003e\n\u003ch4 id=\"驱动选择\"\u003e驱动选择：\u003c/h4\u003e\n\u003cp\u003e使用docker驱动需要安装docker desktop。其他驱动：virtualbox、vmware、ssh、Hyperkit等。具体详见\u003ca href=\"https://minikube.sigs.k8s.io/docs/drivers/\"\u003edrivers page\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"验证结果\"\u003e验证结果\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e查询minikube状态\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2023/01/06/otU8LYBjuFeDa31.png\" alt=\"otU8LYBjuFeDa31\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e进入面板\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2023/01/06/FmrBXOTJ1N2AZgU.png\" alt=\"FmrBXOTJ1N2AZgU\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2023/01/06/IPBCwUSx7Fb28Ee.png\" alt=\"IPBCwUSx7Fb28Ee\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ekubectl控制\n\u003ccode\u003eminikube kubectl -- get pods -A\u003c/code\u003e\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2023/01/06/EziUHcpln27ufeB.png\" alt=\"EziUHcpln27ufeB\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ekubectl在minikube中使用，需要写 \u003ccode\u003enimikune kubectl --\u003c/code\u003e后面加入执行的命令。\nmacos默认使用的zsh，在zsh加入alias就可以敲的少的了。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003evi ~/.zshrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#加入一行\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003ealias\u003c/span\u003e \u003cspan style=\"color:#19177c\"\u003ekubectl\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;minikube kubectl --\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#退出\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003esource\u003c/span\u003e ~/.zshrc\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e再创建一个Pod\n创建：\n\u003ccode\u003ekubectl run nginx --image=nginx:alpine\u003c/code\u003e\n查询：\n\u003ccode\u003ekubectl get pods nginx\u003c/code\u003e\n详情：\n\u003ccode\u003ekubectl describe pods nginx\u003c/code\u003e\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2023/01/06/pYPqIgt84LzBcEU.png\" alt=\"pYPqIgt84LzBcEU\"  /\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e到这里k8s可以使用了。\u003c/p\u003e","title":"通过minikube部署K8S学习环境"},{"content":"前提需要手机安装ShadowRocket。没有可以自己去找共享ID。 长按后弹出选项： 打开配置，例如在default上添加规则。点击default，编辑纯文本。 在文本最下面加入内容：\n[Script] EmbyPremiere = type=http-response,script-path=https://gitlab.com/iptv-org/embypublic/-/raw/master/Script/EmbyPremiere.js,pattern=^https?:\\/\\/mb3admin.com\\/admin\\/service\\/registration\\/validateDevice,max-size=131072,requires-body=true,timeout=10,enable=true [MITM] hostname = mb3admin.com 点击保存后，点右侧!进入。点击HTTPS解密。 开启HTTPS加密，会生成证书。同意安装描述文件。右上角点击勾。 去手机设置中，通用-\u0026gt;描述文件与设备管理-\u0026gt;点击描述文件(名称大概有Shadowrocket那个)-\u0026gt;安装。 注意在Shadowrocket的首页上，全局路由选择配置。\n最后进入Emby软件。可能会提示证书点OK。如果没有提示，点一个影片后也会提示，点OK。如果Shadowrocket开启通知可以看到提示认证成功。 后面就可以畅快看影视啦。\n下次进入Emby时不需要Shadowrocket的配置了。当出现付费提示再开启那个配置就可以激活了。\n完结～ 祝好！\n","permalink":"http://localhost:1313/aLong/posts/ios%E4%BD%BF%E7%94%A8shadowrocket%E6%BF%80%E6%B4%BBembyx/","summary":"\u003cp\u003e前提需要手机安装ShadowRocket。没有可以自己去找共享ID。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/aMKuwbEe1Y3BVgF.png\" alt=\"aMKuwbEe1Y3BVgF\"  /\u003e\n\n长按后弹出选项：\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/1HKa2Vywfq9uU8L.png\" alt=\"1HKa2Vywfq9uU8L\"  /\u003e\n\n打开配置，例如在default上添加规则。点击default，编辑纯文本。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/aMNLtnGY6TxwuHS.png\" alt=\"aMNLtnGY6TxwuHS\"  /\u003e\n\n在文本最下面加入内容：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-conf\" data-lang=\"conf\"\u003e[Script]\nEmbyPremiere = type=http-response,script-path=https://gitlab.com/iptv-org/embypublic/-/raw/master/Script/EmbyPremiere.js,pattern=^https?:\\/\\/mb3admin.com\\/admin\\/service\\/registration\\/validateDevice,max-size=131072,requires-body=true,timeout=10,enable=true\n\n[MITM]\nhostname = mb3admin.com\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/S3tpX5xZlwqKCYe.png\" alt=\"S3tpX5xZlwqKCYe\"  /\u003e\n\n点击保存后，点右侧!进入。点击HTTPS解密。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/oP4D65aX2MKbwxO.png\" alt=\"oP4D65aX2MKbwxO\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/5pQf9oy73ISxi1M.png\" alt=\"5pQf9oy73ISxi1M\"  /\u003e\n\n开启HTTPS加密，会生成证书。同意安装描述文件。右上角点击勾。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/gnRNIqTBvfZVsMd.png\" alt=\"gnRNIqTBvfZVsMd\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/3gsU81y6Av9OoFT.png\" alt=\"3gsU81y6Av9OoFT\"  /\u003e\n\n去手机设置中，通用-\u0026gt;描述文件与设备管理-\u0026gt;点击描述文件(名称大概有Shadowrocket那个)-\u0026gt;安装。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/wVqbC231FH945Zn.png\" alt=\"wVqbC231FH945Zn\"  /\u003e\n\n注意在Shadowrocket的首页上，全局路由选择配置。\u003c/p\u003e\n\u003cp\u003e最后进入Emby软件。可能会提示证书点OK。如果没有提示，点一个影片后也会提示，点OK。如果Shadowrocket开启通知可以看到提示认证成功。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/11/16/TgfoqKyI2pFNrt8.png\" alt=\"TgfoqKyI2pFNrt8\"  /\u003e\n\n后面就可以畅快看影视啦。\u003c/p\u003e\n\u003cp\u003e下次进入Emby时不需要Shadowrocket的配置了。当出现付费提示再开启那个配置就可以激活了。\u003c/p\u003e\n\u003cp\u003e完结～\n祝好！\u003c/p\u003e","title":"IOS使用Shadowrocket激活Emby"},{"content":" Zabbix提供高效灵活的网络自动发现功能。 网络发现的优势：\n加快部署速度 简化管理 在快速变化的环境中避免过度管理 manual-zh 发现SNMP例子 网段内存在几天设备，其中一台是SNMPv2，一台SNMPv3，通过发现将他们加入并监控\n大概流程：\n发现规则，通过发现规则去发现设备。 发现后的动作，发现设备后做什么。 验证发现结果。 创建发现规则 Configuration -\u0026gt; Discovery -\u0026gt; Create discovery rule 通过SNMPv2协议，根据oid检查。 这个oid是设备名。 community是根据设备来的。通过SNMP取设备名，host名称是IP地址，可见名称是SNMP取的设备名称。\n重点配置内容：\nIP range 发现IP范围 Update interval 发现周期 Checks 使用此检查列表来执行网络发现 Device uniqueness criteria 唯一标识 Host name 主机名称 Visible name 可见名称 创建发现动作 Configuration -\u0026gt; Actions -\u0026gt; Discovery actions\nAction 选项中： 主要配置Conditions内容： 我写了两个条件，因为我发现写了v2，v3版本的协议。所以有两个条件。如果都是v2就写一个就ok。简单来讲满足我demo。\nOperations 选项： 发现的设备添加， Add host 。 加入设备组， Add to host groups：组名。 关联模版，Link to templates：模版名。 开启Host。 通过这个配置后，发现的主机会根据这个配置进行操作。\n最终结果 通过Monitoring -\u0026gt; Discovery 能看到发现信息。\n并且监控的主机配置参数都正常，可以取到模版配置的数据。\n简单的demo完成。 完结 祝好 ～\n","permalink":"http://localhost:1313/aLong/posts/zabbix%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0snmp%E8%AE%BE%E5%A4%87/","summary":"\u003cblockquote\u003e\n\u003cp\u003eZabbix提供高效灵活的网络自动发现功能。\n网络发现的优势：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e加快部署速度\u003c/li\u003e\n\u003cli\u003e简化管理\u003c/li\u003e\n\u003cli\u003e在快速变化的环境中避免过度管理\n\u003ca href=\"https://www.zabbix.com/documentation/6.0/zh/manual/discovery/network_discovery\"\u003emanual-zh\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"发现snmp例子\"\u003e发现SNMP例子\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003e网段内存在几天设备，其中一台是SNMPv2，一台SNMPv3，通过发现将他们加入并监控\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e大概流程：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e发现规则，通过发现规则去发现设备。\u003c/li\u003e\n\u003cli\u003e发现后的动作，发现设备后做什么。\u003c/li\u003e\n\u003cli\u003e验证发现结果。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"创建发现规则\"\u003e创建发现规则\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/09/21/QkadRCY9h4MlpH1.png\" alt=\"QkadRCY9h4MlpH1\"  /\u003e\n\n\u003ccode\u003eConfiguration -\u0026gt; Discovery -\u0026gt; Create discovery rule \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/09/21/lUKJ59gjF6wtWzv.png\" alt=\"lUKJ59gjF6wtWzv\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e通过SNMPv2协议，根据oid检查。 这个oid是设备名。 community是根据设备来的。通过SNMP取设备名，host名称是IP地址，可见名称是SNMP取的设备名称。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e重点配置内容\u003c/strong\u003e：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIP range  发现IP范围\u003c/li\u003e\n\u003cli\u003eUpdate interval 发现周期\u003c/li\u003e\n\u003cli\u003eChecks  使用此检查列表来执行网络发现\u003c/li\u003e\n\u003cli\u003eDevice uniqueness criteria 唯一标识\u003c/li\u003e\n\u003cli\u003eHost name  主机名称\u003c/li\u003e\n\u003cli\u003eVisible name 可见名称\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"创建发现动作\"\u003e创建发现动作\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/09/21/aE74jtgmZpHCJkG.png\" alt=\"aE74jtgmZpHCJkG\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eConfiguration -\u0026gt; Actions -\u0026gt; Discovery actions\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/09/21/k2zJWCjy13bVt7Z.png\" alt=\"k2zJWCjy13bVt7Z\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003eAction 选项中：\n主要配置Conditions内容：\n我写了两个条件，因为我发现写了v2，v3版本的协议。所以有两个条件。如果都是v2就写一个就ok。简单来讲满足我demo。\u003c/p\u003e\n\u003cp\u003eOperations 选项：\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/09/21/rEc2Y5apTeO6JK3.png\" alt=\"rEc2Y5apTeO6JK3\"  /\u003e\n\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e发现的设备添加， Add host 。\u003c/li\u003e\n\u003cli\u003e加入设备组， Add to host groups：组名。\u003c/li\u003e\n\u003cli\u003e关联模版，Link to templates：模版名。\u003c/li\u003e\n\u003cli\u003e开启Host。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e通过这个配置后，发现的主机会根据这个配置进行操作。\u003c/p\u003e","title":"Zabbix自动发现SNMP设备"},{"content":"简介 是一个下载视频的软件. 我一般通过此软件下载b站视频.支持专辑下载. 支持的站点: 介绍\n仓库 github:lux\n安装(mac) brew install lux\n需要的依赖 ffmpeg\n使用 命令: lux [OPTIONS] URL [URL...]\n例子:\n#我想下载某专辑视频,首先创建一个文件夹 mkdir golang #然后进入文件夹 cd golang ##执行lux 下载专辑 (-eto bilibili每集文件名不包含播放列表标题) lux -p -eto https://www.bilibiLi.com/video/BV1SF411z7XW ##选择性下载 例如只下载 10-20集 lux -p -eto -items 10-20 https://www.bilibiLi.com/video/BV1SF411z7XW ## 选择清晰度 需要-i查看一下清晰度.查看 download with值 lux -i https://www.bilibili.com/video/BV1SF411z7XW ## 加入清晰度参数1080(不建议,列表执行清晰度可能不全是1080会导致报错) lux -p -eto -f 80-7 https://www.bilibili.com/video/BV1SF411z7XW 图片展示 下载: 下载完成结果 查询清晰度 ","permalink":"http://localhost:1313/aLong/posts/lux%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/","summary":"\u003ch2 id=\"简介\"\u003e简介\u003c/h2\u003e\n\u003cp\u003e是一个下载视频的软件. 我一般通过此软件下载b站视频.支持专辑下载.\n支持的站点: \u003ca href=\"https://github.com/iawia002/lux#supported-sites\"\u003e介绍\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"仓库\"\u003e仓库\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/iawia002/lux\"\u003egithub:lux\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"安装mac\"\u003e安装(mac)\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003ebrew install lux\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"需要的依赖\"\u003e需要的依赖\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://www.ffmpeg.org/\"\u003effmpeg\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"使用\"\u003e使用\u003c/h2\u003e\n\u003cp\u003e命令: \u003ccode\u003elux [OPTIONS] URL [URL...]\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#我想下载某专辑视频,首先创建一个文件夹\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir golang\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#然后进入文件夹\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003ecd\u003c/span\u003e golang\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e##执行lux 下载专辑 (-eto bilibili每集文件名不包含播放列表标题)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elux -p -eto https://www.bilibiLi.com/video/BV1SF411z7XW\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e##选择性下载 例如只下载 10-20集\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elux -p -eto -items 10-20 https://www.bilibiLi.com/video/BV1SF411z7XW\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e## 选择清晰度 需要-i查看一下清晰度.查看 download with值\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elux -i https://www.bilibili.com/video/BV1SF411z7XW\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e## 加入清晰度参数1080(不建议,列表执行清晰度可能不全是1080会导致报错)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elux -p -eto -f 80-7 https://www.bilibili.com/video/BV1SF411z7XW\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"图片展示\"\u003e图片展示\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e下载:\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/08/24/5MYUxakfXPiBZIq.png\" alt=\"下载\"  /\u003e\n\u003c/li\u003e\n\u003cli\u003e下载完成结果\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/08/24/41QIMdEcWzi2s5K.png\" alt=\"41QIMdEcWzi2s5K\"  /\u003e\n\u003c/li\u003e\n\u003cli\u003e查询清晰度\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/08/24/mEfOYcG9Uq76L2D.png\" alt=\"mEfOYcG9Uq76L2D\"  /\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Lux视频下载工具"},{"content":"Zabbix6 网络发现\n功能 快速发现并添加主机\n简单的管理\n随着环境的改变而快速搭建系统\n发现配置依据 IP地址段\n基于服务(FTP、SSH、Web、POP3、IMAP、TCP\u0026hellip;)的\n从Zabbix-Agent接收到的信息\nSNMP agent接收的信息\n添加方式 创建 Discovery rule\nName：规则名称（唯一）\nDiscovery by proxy： 是否由代理执行\nIP range： IP地址范围\n单个IP: 192.168.1.33 IP段: 192.168.1-10.1-255. 范围受限于覆盖地址的总数（小于64K）。 子网掩码: : 192.168.4.0/24 支持的子网掩码: /16 - /30 for IPv4 addresses /112 - /128 for IPv6 addresses\\IP列表: 192.168.1.1-255, 192.168.2.1-100, 192.168.2.200, 192.168.4.0/24 Zabbix 3.0.0起，此字段支持空格，表格和多行。\nUpdate interval: Zabbix执行规则的频率\nChecks: 发现的方式\nDevice uniqueness criteria：设备唯一标识\nHost name ： 主机名\nVisible name：描述名\n这三个选项是根据，checks里面的相关类型出来的数据。基本上都有IP地址，当checks Type 选择了 SNMP或者zabbix agent时，下面选项可以提供这两种对应的数据作为选项。\n唯一标识可以通过IP(默认)，或者SNMP的取值，或者zabbix agent取值。重复的名称不会处理。\nHost name 和 Visible name选项类似。Host name肯定是要唯一的。\n创建 Discovery actions\naction配置： Name ： action 名称\nConditions：action的条件\nEnabled: action的开关\n条件详情：\nType多个方式：\n可以通过多种类型适配条件。\n根据选择的Type类型，下面的Operator是根据Type来配置的选项。\nOperator： 基本就是 等于或不等于。\n第三个选项是动态的，当选择 Type 是Discovery check，下面是配置 Discovery check的名称。\n如果Type 是Host IP，那么第三个选项就变成了Value。\n配置Operations：\n配置这个Operations 的意思是，当通过前面action条件匹配的到数据后续的操作内容。例如加入/移除设备组、关联/取消模版、发送通知等操作。\n验证结果 我上面截图的例子中：\nactions 配置的内容为，通过icmp ping 发现负责此条件的设备，把这些设备分配到xxx网络摄像头的设备组里；并把主机关联的模版是icmp ping。\n发现之后的结果就是：\n在内网找到很多摄像头\n","permalink":"http://localhost:1313/aLong/posts/zabbix-%E7%BD%91%E7%BB%9C%E5%8F%91%E7%8E%B0/","summary":"\u003cp\u003eZabbix6 网络发现\u003c/p\u003e\n\u003ch3 id=\"功能\"\u003e功能\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e快速发现并添加主机\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e简单的管理\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e随着环境的改变而快速搭建系统\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"发现配置依据\"\u003e发现配置依据\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eIP地址段\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e基于服务(FTP、SSH、Web、POP3、IMAP、TCP\u0026hellip;)的\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e从Zabbix-Agent接收到的信息\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSNMP agent接收的信息\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"添加方式\"\u003e添加方式\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e创建 Discovery rule\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/8kqFzeiKIAr6fDN.png\" alt=\"3qoFJE.png\"  /\u003e\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eName：规则名称（唯一）\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDiscovery by proxy： 是否由代理执行\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIP range： IP地址范围\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e单个IP: 192.168.1.33\nIP段: 192.168.1-10.1-255. 范围受限于覆盖地址的总数（小于64K）。\n子网掩码: : 192.168.4.0/24\n支持的子网掩码:\n/16 - /30 for IPv4 addresses\n/112 - /128 for IPv6 addresses\\IP列表: 192.168.1.1-255, 192.168.2.1-100, 192.168.2.200, 192.168.4.0/24\nZabbix 3.0.0起，此字段支持空格，表格和多行。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eUpdate interval: Zabbix执行规则的频率\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChecks: 发现的方式\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/Y8R6VhGNgmFq7KS.png\" alt=\"FTCW1e.png\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDevice uniqueness criteria：设备唯一标识\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHost name ： 主机名\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eVisible name：描述名\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/8azsd4mVbDPU39L.png\" alt=\"ohbmIZ.png\"  /\u003e\n\u003c/p\u003e","title":"Zabbix6 网络发现"},{"content":"前提 系统部署在ubuntu20.04中，用到redis数据库。 但是测试时候，设备重启发现redis服务没有启动。 由于是变异安装的，系统找不到redis.service。\n解决方案 系统添加服务文件，并执行。\n编写文件 文件路径/usr/lib/systemd/system\n编写文件 vi /usr/lib/systemd/system/redis.service\n[Unit] #服务描述 Description=Redis persistent key-value database #服务依赖 After=network.target After=network-online.target Wants=network-online.target [Service] #启动 命令 ExecStart=/home/monitor/redis-6.0.8/src/redis-server /home/monitor/redis-6.0.8/redis.conf --protected-mode no #停止命令 ExecStop=/home/monitor/redis-6.0.8/src/redis-cli shutdown # Restart=always #服务类型 Type=forking #User=redis #Group=redis RuntimeDirectory=redis RuntimeDirectoryMode=0755 [Install] #服务安装设置 WantedBy=multi-user.target 服务配置文件分为[Unit]、[Service]和[Install]三部分。 具体详细的解释需要结合linux知识补充。\n服务生效 系统重新读取所有服务文件： systemctl daemon-reload 启用/禁用开机自启动: systemctl enable/disable redis 启动/重启redis： systemctl start/restart redis\n","permalink":"http://localhost:1313/aLong/posts/linux%E7%8E%AF%E5%A2%83redis%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/","summary":"\u003ch2 id=\"前提\"\u003e前提\u003c/h2\u003e\n\u003cp\u003e系统部署在ubuntu20.04中，用到redis数据库。\n但是测试时候，设备重启发现redis服务没有启动。\n由于是变异安装的，系统找不到redis.service。\u003c/p\u003e\n\u003ch2 id=\"解决方案\"\u003e解决方案\u003c/h2\u003e\n\u003cp\u003e系统添加服务文件，并执行。\u003c/p\u003e\n\u003ch3 id=\"编写文件\"\u003e编写文件\u003c/h3\u003e\n\u003cp\u003e文件路径\u003ccode\u003e/usr/lib/systemd/system\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e编写文件 \u003ccode\u003evi /usr/lib/systemd/system/redis.service\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003e[Unit]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#服务描述\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eDescription\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003eRedis persistent key-value database\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#服务依赖\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eAfter\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003enetwork.target\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eAfter\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003enetwork-online.target\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eWants\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003enetwork-online.target\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003e[Service]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#启动 命令\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eExecStart\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e/home/monitor/redis-6.0.8/src/redis-server /home/monitor/redis-6.0.8/redis.conf --protected-mode no\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#停止命令\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eExecStop\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e/home/monitor/redis-6.0.8/src/redis-cli shutdown\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eRestart\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003ealways\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#服务类型\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eType\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003eforking\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#User=redis\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#Group=redis\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eRuntimeDirectory\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003eredis\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eRuntimeDirectoryMode\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e0755\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003e[Install]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#服务安装设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eWantedBy\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003emulti-user.target\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务配置文件分为[Unit]、[Service]和[Install]三部分。\n具体详细的解释需要结合linux知识补充。\u003c/p\u003e\n\u003ch3 id=\"服务生效\"\u003e服务生效\u003c/h3\u003e\n\u003cp\u003e系统重新读取所有服务文件： \u003ccode\u003esystemctl daemon-reload\u003c/code\u003e\n启用/禁用开机自启动: \u003ccode\u003esystemctl enable/disable redis\u003c/code\u003e\n启动/重启redis： \u003ccode\u003esystemctl start/restart redis\u003c/code\u003e\u003c/p\u003e","title":"linux环境redis开机启动"},{"content":"armbian配置（N1盒子）\n设置时区： timedatectl set-timezone Asia/Shanghai\n安装docker apt update\napt install ca-certificates curl gnupg lsb-release\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\necho \\ \u0026quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026quot; | tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null\napt update\napt install docker-ce docker-ce-cli containerd.io\n安装docker-compose wget地址是加速器转换地址，版本和地址请根据版本号编辑地址\nwget https://download.fastgit.org/docker/compose/releases/download/v2.1.1/docker-compose-linux-aarch64 \u0026amp;\u0026amp; mv docker-compose-linux-aarch64 /usr/local/bin/docker-compose \u0026amp;\u0026amp; chmod +x /usr/local/bin/docker-compose\nWIFI 查看附近无线网络信号：nmcli dev wifi list\n无密码的 WIFI：nmcli device wifi connect \u0026lt;SSID|BSSID\u0026gt;\n加密WIFI： nmcli device wifi connect \u0026lt;SSID|BSSID\u0026gt; password 网卡配置 设置多IP auto eth0:1 allow-hotplug eth0:1 iface eth0:1 inet static address 1.1.1.1/30 ","permalink":"http://localhost:1313/aLong/posts/armbian%E7%B3%BB%E7%BB%9F%E6%96%90%E8%AE%AFn1%E7%9B%92%E5%AD%90%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/","summary":"\u003cp\u003earmbian配置（N1盒子）\u003c/p\u003e\n\u003ch2 id=\"设置时区\"\u003e设置时区：\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003etimedatectl set-timezone Asia/Shanghai\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"安装docker\"\u003e安装docker\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eapt update\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eapt install ca-certificates  curl  gnupg  lsb-release\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ecurl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eecho \\ \u0026quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026quot; | tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eapt update\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eapt install docker-ce docker-ce-cli containerd.io\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"安装docker-compose\"\u003e安装docker-compose\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003ewget地址是加速器转换地址，版本和地址请根据版本号编辑地址\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ewget https://download.fastgit.org/docker/compose/releases/download/v2.1.1/docker-compose-linux-aarch64 \u0026amp;\u0026amp; mv docker-compose-linux-aarch64 /usr/local/bin/docker-compose \u0026amp;\u0026amp; chmod +x /usr/local/bin/docker-compose\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"wifi\"\u003eWIFI\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e查看附近无线网络信号：nmcli dev wifi list\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e无密码的 WIFI：nmcli device wifi connect \u0026lt;SSID|BSSID\u0026gt;\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e加密WIFI： nmcli device wifi connect \u0026lt;SSID|BSSID\u0026gt; password \u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"armbian配置-N1盒子"},{"content":"S5720 SNMP v3配置 系统视图 system-view\nSNMP服务 snmp-agent\n管理端口(默认161) snmp-agent udp-port *port-num*\n配置版本(默认v3) snmp-agent sys-info version *v3*\n配置用户组 snmp-agent group v3 *group-name* {authentication | privacy | noauthentication}\n三种认证加密方式\n配置v3用户 snmp-agent usm-user v3 *user-name* [ group *group-name*] 配置用户认证密码 snmp-agent usm-user v3 *user-name* authentication-mode { md5 | sha } [ cipher *password* ]\n配置加密密码 snmp-agent usm-user v3 *user-name* privacy-mode { des56 | aes128 |aes192 | aes256 | 3des } [ cipher *password* ]\n","permalink":"http://localhost:1313/aLong/posts/s5720-snmp-v3/","summary":"\u003ch2 id=\"s5720-snmp-v3配置\"\u003eS5720 SNMP v3配置\u003c/h2\u003e\n\u003ch3 id=\"系统视图\"\u003e系统视图\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esystem-view\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"snmp服务\"\u003eSNMP服务\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"管理端口默认161\"\u003e管理端口(默认161)\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent udp-port *port-num*\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"配置版本默认v3\"\u003e配置版本(默认v3)\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent sys-info version *v3*\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"配置用户组\"\u003e配置用户组\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent group v3 *group-name* {authentication | privacy | noauthentication}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e三种认证加密方式\u003c/p\u003e\n\u003ch3 id=\"配置v3用户\"\u003e配置v3用户\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent usm-user v3 *user-name* [ group *group-name*] \u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"配置用户认证密码\"\u003e配置用户认证密码\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent usm-user v3 *user-name* authentication-mode { md5 | sha } [ cipher *password* ]\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"配置加密密码\"\u003e配置加密密码\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esnmp-agent usm-user v3 *user-name* privacy-mode { des56 | aes128 |aes192 | aes256 | 3des } [ cipher *password* ]\u003c/code\u003e\u003c/p\u003e","title":"S5720 SNMP v3配置"},{"content":"zabbix proxy cannot perform check now for itemid [xxxxx]: item is not in cache 情况 接上次做完容器部署proxy后，为其添加host进行添加任务。\n发现一直没有数据，就到item里面执行 execute now。\n然后过了几分钟回来一看，还是没有。\nEmmm，看下log吧。\nServer没一场，那问题就在proxy了吧。\n连上proxy去看看： 提示好像是去检查对应的itemid，然后说item不在还cache中。 赶紧上网科普！\n原因 因为是主动的proxy，那他会定期去server要数据。\n这个3600就是配置的更新周期了。1个小时才去要一次，所以肯定是没监控了。\n为了验证，就等了1小时看看： 实锤了，1小时。后面也就有了数据。 Host是1小时之后开始有数据的，也就是他同步后就开始执行监控项了。\n查询到的内容： [地址](https://subscription.packtpub.com/book/networking_and_servers/9781784399764/1/ch01lvl1sec10/understanding-the-zabbix-proxies-data-flow) 解决 Ok，那么在重新部署的容器加上此参数(ZBX_CONFIGFREQUENCY)。\ndocker run --name zbxproxy -d \\ -e ZBX_SERVER_HOST=192.168.10.66 \\ -e ZBX_HOSTNAME=\u0026#34;testproxy\u0026#34; \\ -e ZBX_TIMEOUT=\u0026#34;10\u0026#34; \\ -e ZBX_TLSACCEPT=psk \\ -e ZBX_TLSCONNECT=psk \\ -e ZBX_TLSPSKIDENTITY=helloworld \\ -e ZBX_TLSPSKFILE=zbx_proxy.psk \\ -e ZBX_CONFIGFREQUENCY=600 \\ -v /etc/localtime:/etc/localtime:ro \\ -v /zbx_proxy.psk:/var/lib/zabbix/enc/zbx_proxy.psk \\ --restart=always \\ zabbix/zabbix-proxy-sqlite3:alpine-trunk \u0026ndash;祝好\n本文结束\n","permalink":"http://localhost:1313/aLong/posts/zabbix-proxy-cannot-perform-check-now-for-itemid-xxxxx-item-is-not-in-cache/","summary":"\u003ch1 id=\"zabbix-proxy-cannot-perform-check-now-for-itemid-xxxxx-item-is-not-in-cache\"\u003ezabbix proxy cannot perform check now for itemid [xxxxx]: item is not in cache\u003c/h1\u003e\n\u003ch2 id=\"情况\"\u003e情况\u003c/h2\u003e\n\u003cp\u003e接上次做完容器部署proxy后，为其添加host进行添加任务。\u003c/p\u003e\n\u003cp\u003e发现一直没有数据，就到item里面执行 \u003ccode\u003eexecute now\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e然后过了几分钟回来一看，还是没有。\u003c/p\u003e\n\u003cp\u003eEmmm，看下log吧。\u003c/p\u003e\n\u003cp\u003eServer没一场，那问题就在proxy了吧。\u003c/p\u003e\n\u003cp\u003e连上proxy去看看：\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/LSCEA9yqXHwiZmk.png\" alt=\"TQcfjq.png\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e提示好像是去检查对应的itemid，然后说item不在还cache中。\n赶紧上网科普！\u003c/p\u003e\n\u003ch2 id=\"原因\"\u003e原因\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/lorCR8jJaw1OAQ6.png\" alt=\"I5WWwc.png\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e因为是主动的proxy，那他会定期去server要数据。\u003c/p\u003e\n\u003cp\u003e这个3600就是配置的更新周期了。1个小时才去要一次，所以肯定是没监控了。\u003c/p\u003e\n\u003cp\u003e为了验证，就等了1小时看看：\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/jBIEmozFDgJ6dq5.png\" alt=\"EWJu2V.png\"  /\u003e\n\n实锤了，1小时。后面也就有了数据。\n\u003cimg loading=\"lazy\" src=\"https://s2.loli.net/2022/05/30/oN5DvPXsLW6gyVQ.png\" alt=\"C0pDSl.png\"  /\u003e\n\nHost是1小时之后开始有数据的，也就是他同步后就开始执行监控项了。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e查询到的内容：\n[地址](https://subscription.packtpub.com/book/networking_and_servers/9781784399764/1/ch01lvl1sec10/understanding-the-zabbix-proxies-data-flow)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"解决\"\u003e解决\u003c/h2\u003e\n\u003cp\u003eOk，那么在重新部署的容器加上此参数(ZBX_CONFIGFREQUENCY)。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker run --name zbxproxy -d \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_SERVER_HOST\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e192.168.10.66 \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_HOSTNAME\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;testproxy\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_TIMEOUT\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;10\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_TLSACCEPT\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003epsk \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_TLSCONNECT\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003epsk \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_TLSPSKIDENTITY\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003ehelloworld \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_TLSPSKFILE\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003ezbx_proxy.psk \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-e \u003cspan style=\"color:#19177c\"\u003eZBX_CONFIGFREQUENCY\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e600\u003c/span\u003e \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-v /etc/localtime:/etc/localtime:ro \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-v /zbx_proxy.psk:/var/lib/zabbix/enc/zbx_proxy.psk \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e--restart\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003ealways \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003ezabbix/zabbix-proxy-sqlite3:alpine-trunk\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u0026ndash;祝好\u003c/p\u003e\n\u003cp\u003e本文结束\u003c/p\u003e","title":"zabbix proxy cannot perform check now for itemid [xxxxx]: item is not in cache"},{"content":"前提 版本： zabbix-server 5.4\n任务： 通过SNMP监控网络设备，需要需通过zabbix-proxy 发送到zabbix-server。\n安装Zabbix-Proxy 安装Zabbix仓库 wget https://repo.zabbix.com/zabbix/5.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.4-1+ubuntu20.04_all.deb dpkg -i zabbix-release_5.4-1+ubuntu20.04_all.deb apt update 安装Zabbix-proxy \u0026amp; mysql 这里我选择的是mysql作为数据库\napt install mysql-server\napt install zabbix-proxy-mysql\n导入数据 zcat /usr/share/doc/zabbix-proxy-mysql/schema.sql.gz | mysql -uzabbix -p zabbix\n这里可能跑不通。我装了两次都发现没有 schema.sql.gz 这个文件。 如果你也是，那需要找一下这个sql文件。\n下载5.4源码包： wget https://cdn.zabbix.com/zabbix/sources/stable/5.4/zabbix-5.4.1.tar.gz 解压之后，在 /zabbix-5.4.1/databases/mysql/ 中\n通过 cat schema.sql | mysql -uzabbix -p 导入到数据库中。\n4.配置zabbix-proxy\nvim /etc/zabbix/zabbix_proxy.conf\n修改Zabbix Server地址,Hostname，在server添加中，此名称要与这里一致。\n修改为正确的数据库名字、用户名、密码。\n其他配置可以酌情配置。例如server配置频率，log位置，本地缓存时间、主动被动、监听端口等等。\n启动zabbix-proxy systemctl start zabbix-proxy \u0026amp;\u0026amp; systemctl enable zabbix-proxy 在zabbix-server 中添加proxy，然后在对应的host主机上选择proxy。 zabbix-proxy log 默认配置的位置： /var/log/zabbix/zabbix_proxy.log\n祝好！ 本文结束。\n","permalink":"http://localhost:1313/aLong/posts/zabbix-proxy-%E9%83%A8%E7%BD%B2-%E8%BF%90%E8%A1%8C/","summary":"\u003ch2 id=\"前提\"\u003e前提\u003c/h2\u003e\n\u003cp\u003e版本： zabbix-server 5.4\u003c/p\u003e\n\u003cp\u003e任务： 通过SNMP监控网络设备，需要需通过zabbix-proxy 发送到zabbix-server。\u003c/p\u003e\n\u003ch2 id=\"安装zabbix-proxy\"\u003e安装Zabbix-Proxy\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e安装Zabbix仓库\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    wget https://repo.zabbix.com/zabbix/5.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.4-1+ubuntu20.04_all.deb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    dpkg -i zabbix-release_5.4-1+ubuntu20.04_all.deb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    apt update\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003e安装Zabbix-proxy \u0026amp; mysql\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cem\u003e这里我选择的是mysql作为数据库\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eapt install mysql-server\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eapt install zabbix-proxy-mysql\u003c/code\u003e\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e导入数据\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ccode\u003ezcat /usr/share/doc/zabbix-proxy-mysql/schema.sql.gz | mysql -uzabbix -p zabbix\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e这里可能跑不通。我装了两次都发现没有 schema.sql.gz 这个文件。\n如果你也是，那需要找一下这个sql文件。\u003c/p\u003e\n\u003cp\u003e下载5.4源码包：\n\u003ccode\u003ewget https://cdn.zabbix.com/zabbix/sources/stable/5.4/zabbix-5.4.1.tar.gz\u003c/code\u003e\n\u003cimg loading=\"lazy\" src=\"https://img-blog.csdnimg.cn/img_convert/8eadb68dbe4f2051e1c72a2919286f07.png#id=yP1Gu\u0026amp;originHeight=1340\u0026amp;originWidth=652\u0026amp;originalType=binary\u0026amp;ratio=1\u0026amp;status=done\u0026amp;style=none\" alt=\"\"  /\u003e\n\n解压之后，在 \u003ccode\u003e/zabbix-5.4.1/databases/mysql/\u003c/code\u003e 中\u003c/p\u003e\n\u003cp\u003e通过 \u003ccode\u003ecat schema.sql | mysql -uzabbix -p\u003c/code\u003e 导入到数据库中。\u003c/p\u003e\n\u003cp\u003e4.配置zabbix-proxy\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evim /etc/zabbix/zabbix_proxy.conf\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e修改Zabbix Server地址,Hostname，在server添加中，此名称要与这里一致。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://img-blog.csdnimg.cn/img_convert/8e3e758e82804c0909ee74bd40d1b988.png#id=HVbW6\u0026amp;originHeight=820\u0026amp;originWidth=1968\u0026amp;originalType=binary\u0026amp;ratio=1\u0026amp;status=done\u0026amp;style=none\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e修改为正确的数据库名字、用户名、密码。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://img-blog.csdnimg.cn/img_convert/4f0b8f22d1c7753e24705f37025297a1.png#id=ogGz5\u0026amp;originHeight=994\u0026amp;originWidth=1230\u0026amp;originalType=binary\u0026amp;ratio=1\u0026amp;status=done\u0026amp;style=none\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e其他配置可以酌情配置。例如server配置频率，log位置，本地缓存时间、主动被动、监听端口等等。\u003c/p\u003e\n\u003col start=\"5\"\u003e\n\u003cli\u003e启动zabbix-proxy\n\u003ccode\u003esystemctl start zabbix-proxy \u0026amp;\u0026amp; systemctl enable zabbix-proxy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e在zabbix-server 中添加proxy，然后在对应的host主机上选择proxy。\n\u003cimg loading=\"lazy\" src=\"https://img-blog.csdnimg.cn/img_convert/c869c5c2e48a6d94965c4ee9afd1d3a3.png#id=XryPJ\u0026amp;originHeight=1252\u0026amp;originWidth=1686\u0026amp;originalType=binary\u0026amp;ratio=1\u0026amp;status=done\u0026amp;style=none\" alt=\"\"  /\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://img-blog.csdnimg.cn/img_convert/4236f0501054b223da6b5dde07a340a0.png#id=UMgsH\u0026amp;originHeight=930\u0026amp;originWidth=3870\u0026amp;originalType=binary\u0026amp;ratio=1\u0026amp;status=done\u0026amp;style=none\" alt=\"\"  /\u003e\n\u003c/p\u003e","title":"Zabbix-Proxy 部署运行"},{"content":"通过小米手环解锁笔记本 官方windows是提供了方法的。 我目前用的MacBookPro，所以说下苹果笔记本的解锁方式。\n安装软件BLEUnlock 库\n安装方式： brew 安装 brew install bleunlock\n或下载程序 下载发布的程序\n安装好打开软件： 设备列表选择手环，如果发现不到就在小米运动app中打开实验室选项里小米笔记本解锁开关。\n设备列表选择你的小米手环。\n解锁RSSI与锁定RSSI 是根据你dBM值来判断是否锁定/解锁笔记本。是一个阈值。\n延迟锁定，无信号超时是时间阈值。功能顾名思义。\n我这里选择开启了屏保来锁定、以及开机启动。\n通过以上配置之后，我们就可以通过小米手环来解锁MacOS笔记本了。\n请注意一点 如果你是每天背着本上下班的话，那我建议上下班前后别开启此功能。 为什么呢，因为你设定的RSSI值肯定是离近笔记本的。这时候你带着手环和笔记本的时候。他很容易就吧本解锁了。然后你发现从书包拿出来本巨热无比。\n为啥呢，他唤醒了设备啊 还解锁了～\n这点我不知道怎么搞定呢，好 结束～\n祝好\n拜拜～\n","permalink":"http://localhost:1313/aLong/posts/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E8%A7%A3%E9%94%81macbookpro%E7%AC%94%E8%AE%B0%E6%9C%AC/","summary":"\u003ch2 id=\"通过小米手环解锁笔记本\"\u003e通过小米手环解锁笔记本\u003c/h2\u003e\n\u003cp\u003e官方windows是提供了方法的。\n我目前用的MacBookPro，所以说下苹果笔记本的解锁方式。\u003c/p\u003e\n\u003ch2 id=\"安装软件bleunlock\"\u003e安装软件\u003ccode\u003eBLEUnlock\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/ts1/BLEUnlock\"\u003e库\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"安装方式\"\u003e安装方式：\u003c/h3\u003e\n\u003cp\u003ebrew 安装 \u003ccode\u003ebrew install bleunlock\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e或下载程序 \u003ca href=\"https://github.com/ts1/BLEUnlock/releases\"\u003e下载发布的程序\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"安装好打开软件\"\u003e安装好打开软件：\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/21/BAINRZxyTp3zV5Y.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e设备列表选择手环，如果发现不到就在\u003ccode\u003e小米运动app\u003c/code\u003e中打开\u003ccode\u003e实验室\u003c/code\u003e选项里\u003ccode\u003e小米笔记本解锁\u003c/code\u003e开关。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/21/vtHLPFJ2jIfoAWR.jpg\" alt=\"实验室功能\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e设备列表选择你的小米手环。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/21/JjhRDlLHA4idP3O.png\" alt=\"选择设备\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e解锁RSSI与锁定RSSI 是根据你dBM值来判断是否锁定/解锁笔记本。是一个阈值。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/21/wJcOye9SYs7QLXM.png\" alt=\"锁定RSSI\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e延迟锁定，无信号超时是时间阈值。功能顾名思义。\u003c/p\u003e\n\u003cp\u003e我这里选择开启了屏保来锁定、以及开机启动。\u003c/p\u003e\n\u003cp\u003e通过以上配置之后，我们就可以通过小米手环来解锁MacOS笔记本了。\u003c/p\u003e\n\u003ch2 id=\"请注意一点\"\u003e请注意一点\u003c/h2\u003e\n\u003cp\u003e如果你是每天背着本上下班的话，那我建议上下班前后别开启此功能。\n为什么呢，因为你设定的RSSI值肯定是离近笔记本的。这时候你带着手环和笔记本的时候。他很容易就吧本解锁了。然后你发现从书包拿出来本巨热无比。\u003c/p\u003e\n\u003cp\u003e为啥呢，他唤醒了设备啊 还解锁了～\u003c/p\u003e\n\u003cp\u003e这点我不知道怎么搞定呢，好 结束～\u003c/p\u003e\n\u003cp\u003e祝好\u003c/p\u003e\n\u003cp\u003e拜拜～\u003c/p\u003e","title":"小米手环解锁MacOS系统笔记本MacBookPro"},{"content":"前阵子媳妇给买了个手环。小米手环5NFC，价格还可以。 定义表盘 手环就不做评价了，我感觉续航不错。屏幕划痕太容了吧。\n吐槽完了说下能玩的也就表盘了吧。\n出小米运动能同步的那些之外，总想搞点与众不同的。\n请访问-\u0026gt;AW 不仅是小米5，6都有了。\n我们根据自己的设备来选择。\n可以看到有面上方有个分类，语言筛选。\n这个还是很有用的，如果你只希望看到中文表盘，那就选择中文。 但是中文可能相对较少，我建议所有，然后看喜欢的界面吧。毕竟表盘上也没几个字。\n当我们点中某一个表盘，他会进到详情页。 点击下载，可以弹出来具体的表盘文件。 可以看到不同的文件有一些描述，比如语言，以及其他的一些描述。根据喜好下载。\n我建议手机下载，省的再从电脑发到手机上。\n下完之后，下面就需要同步表盘了。\n我目前知道的方式，就是通过一些APP来同步。其他方式我没研究过。\n我使用的手机是Iphone，所以我安装此软件：amaztools。 安装完软件进入： 主页同步信息等这些不重要略过。 这里app也提供了一些表盘。相比之下，这里面内容不多。喜欢可以看看，下载。在这里的下载后，同步就好。\n这里展示从app下载的表盘。 在More里面，有我们需要的功能，install custom file。安装我们下载的表盘。\n点击 install custom file 选择我们下载的变盘，然后同步到手环上。 过程就结束了。\n真的结束了吗？！ 还要下载好多一个个去试～ 哈哈哈哈\n结束 祝好 ","permalink":"http://localhost:1313/aLong/posts/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E5%8F%98%E7%9B%98%E8%87%AA%E5%AE%9A%E4%B9%89/","summary":"\u003cp\u003e前阵子媳妇给买了个手环。小米手环5NFC，价格还可以。\n\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/pSb2DolBKGYfd38.jpg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"定义表盘\"\u003e定义表盘\u003c/h2\u003e\n\u003cp\u003e手环就不做评价了，我感觉续航不错。屏幕划痕太容了吧。\u003c/p\u003e\n\u003cp\u003e吐槽完了说下能玩的也就表盘了吧。\u003c/p\u003e\n\u003cp\u003e出小米运动能同步的那些之外，总想搞点与众不同的。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e请访问-\u0026gt;\u003ca href=\"https://amazfitwatchfaces.com/\"\u003eAW\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/aYhGMESFAt3PHpq.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e不仅是小米5，6都有了。\u003c/p\u003e\n\u003cp\u003e我们根据自己的设备来选择。\u003c/p\u003e\n\u003cp\u003e可以看到有面上方有个分类，语言筛选。\u003c/p\u003e\n\u003cp\u003e这个还是很有用的，如果你只希望看到中文表盘，那就选择中文。\n但是中文可能相对较少，我建议所有，然后看喜欢的界面吧。毕竟表盘上也没几个字。\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e当我们点中某一个表盘，他会进到详情页。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/jKSMhXgiu8HLRy3.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e点击下载，可以弹出来具体的表盘文件。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/nsa9xkZdiuTlcmI.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e可以看到不同的文件有一些描述，比如语言，以及其他的一些描述。根据喜好下载。\u003c/p\u003e\n\u003cp\u003e我建议手机下载，省的再从电脑发到手机上。\u003c/p\u003e\n\u003cp\u003e下完之后，下面就需要同步表盘了。\u003c/p\u003e\n\u003cp\u003e我目前知道的方式，就是通过一些APP来同步。其他方式我没研究过。\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003e我使用的手机是Iphone，所以我安装此软件：\u003ccode\u003eamaztools\u003c/code\u003e。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/pmMfVPBR3AC1dIY.jpg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003col start=\"5\"\u003e\n\u003cli\u003e安装完软件进入：\n主页同步信息等这些不重要略过。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/zpkCwt9GxTjAsLE.png\" alt=\"Home\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e这里app也提供了一些表盘。相比之下，这里面内容不多。喜欢可以看看，下载。在这里的下载后，同步就好。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/9MGnzhjtbpogfld.png\" alt=\"Browse\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e这里展示从app下载的表盘。\n\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/PdufqrKl7JSYAoM.png\" alt=\"Downloads\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e在More里面，有我们需要的功能，\u003ccode\u003einstall custom file\u003c/code\u003e。安装我们下载的表盘。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/pMEZWwuaSqhRdvA.png\" alt=\"More\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e点击 \u003ccode\u003einstall custom file\u003c/code\u003e\n\u003cimg loading=\"lazy\" src=\"https://i.loli.net/2021/05/20/AMHrGvTR8N4ks29.png\" alt=\"Install Custom File\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e选择我们下载的变盘，然后同步到手环上。 过程就结束了。\u003c/p\u003e\n\u003cp\u003e真的结束了吗？！ 还要下载好多一个个去试～ 哈哈哈哈\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e结束\n祝好\u003c/code\u003e\u003c/pre\u003e","title":"小米手环表盘自定义"},{"content":"自己使用Mac一年多 自己在19年12月换了mac 16\u0026quot; 笔记本。之前一直windwos，后来看很多讲师在讲课的时候都是mac本本。又觉得windws10更新频繁，还强制让我很不爽。\n最后凑巧16\u0026quot;出来后，自己媳妇送了我一台。美滋滋～\n讲讲我说的小软件 一些好玩的，实用的软件。\nBob Hidden Bar itsycal pap.er uPic Go2Shell uTools PicGo electerm BLEUnlock Clipy ","permalink":"http://localhost:1313/aLong/posts/mac-os%E8%87%AA%E5%B7%B1%E5%AE%89%E8%A3%85%E7%9A%84%E5%B0%8F%E8%BD%AF%E4%BB%B6/","summary":"\u003ch2 id=\"自己使用mac一年多\"\u003e自己使用Mac一年多\u003c/h2\u003e\n\u003cp\u003e自己在19年12月换了mac 16\u0026quot; 笔记本。之前一直windwos，后来看很多讲师在讲课的时候都是mac本本。又觉得windws10更新频繁，还强制让我很不爽。\u003c/p\u003e\n\u003cp\u003e最后凑巧16\u0026quot;出来后，自己媳妇送了我一台。美滋滋～\u003c/p\u003e\n\u003ch2 id=\"讲讲我说的小软件\"\u003e讲讲我说的小软件\u003c/h2\u003e\n\u003cp\u003e一些好玩的，实用的软件。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eBob\u003c/li\u003e\n\u003cli\u003eHidden Bar\u003c/li\u003e\n\u003cli\u003eitsycal\u003c/li\u003e\n\u003cli\u003epap.er\u003c/li\u003e\n\u003cli\u003euPic\u003c/li\u003e\n\u003cli\u003eGo2Shell\u003c/li\u003e\n\u003cli\u003euTools\u003c/li\u003e\n\u003cli\u003ePicGo\u003c/li\u003e\n\u003cli\u003eelecterm\u003c/li\u003e\n\u003cli\u003eBLEUnlock\u003c/li\u003e\n\u003cli\u003eClipy\u003c/li\u003e\n\u003c/ol\u003e","title":"Mac OS自己安装的小软件"},{"content":"很尴尬 今天测试，一个通过隧道远程到设备的功能。\n隧道创建完成，然后我就要ssh到哪台设备。反复连接一直不通，心里万马奔腾啊！～\n查看配置没问题啊，怎么就！@#¥%！！！\n后来发现 自己的锅， ssh user@ip：prot Hahaha～～\nSSH连接 SSH 默认端口22，通常我们ssh 时候指令是这样的 ssh user@ip\n指定端口 指定端口 我很少用，即便是改端口的我也大部分终端软件去连的。\n正确方式： ssh -p port user@ip\n记忆深刻，这下很尴尬。 特此记录。\n","permalink":"http://localhost:1313/aLong/posts/ssh-%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/","summary":"\u003ch2 id=\"很尴尬\"\u003e很尴尬\u003c/h2\u003e\n\u003cp\u003e今天测试，一个通过隧道远程到设备的功能。\u003c/p\u003e\n\u003cp\u003e隧道创建完成，然后我就要ssh到哪台设备。反复连接一直不通，心里万马奔腾啊！～\u003c/p\u003e\n\u003cp\u003e查看配置没问题啊，怎么就！@#¥%！！！\u003c/p\u003e\n\u003cp\u003e后来发现 自己的锅， \u003ccode\u003essh user@ip：prot\u003c/code\u003e  Hahaha～～\u003c/p\u003e\n\u003ch2 id=\"ssh连接\"\u003eSSH连接\u003c/h2\u003e\n\u003cp\u003eSSH 默认端口22，通常我们ssh 时候指令是这样的 \u003ccode\u003essh user@ip\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"指定端口\"\u003e指定端口\u003c/h3\u003e\n\u003cp\u003e指定端口 我很少用，即便是改端口的我也大部分终端软件去连的。\u003c/p\u003e\n\u003cp\u003e正确方式： \u003ccode\u003essh -p port user@ip\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e记忆深刻，这下很尴尬。 特此记录。\u003c/p\u003e","title":"SSH 指定端口访问"},{"content":"最近Goland在run的时候发现一个问题 open /usr/local/go/pkg/darwin_amd64/runtime/cgo.a: permission denied\n情况具体是当我run的时候有问题。debug可以。根据错误提示看到是权限的事。\n解决方式 执行 sudo chown -R xxx:yyy /usr/local/go\nxxx 用户名， yyy 组名\n命令的目的：更改go目录的所有者用户和组。\n查看用户名\u0026amp;用户组 当前用户名 常用命令 who am i 查看当前用户名和组 ls -la\n参考 https://github.com/golang/go/issues/37962\n","permalink":"http://localhost:1313/aLong/posts/%E8%A7%A3%E5%86%B3-usr-local-go-pkg-darwin-amd64-runtime-cgo-a-permission-denied%E9%97%AE%E9%A2%98/","summary":"\u003ch3 id=\"最近goland在run的时候发现一个问题\"\u003e最近Goland在run的时候发现一个问题\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eopen /usr/local/go/pkg/darwin_amd64/runtime/cgo.a: permission denied\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e情况具体是当我run的时候有问题。debug可以。根据错误提示看到是权限的事。\u003c/p\u003e\n\u003ch3 id=\"解决方式\"\u003e解决方式\u003c/h3\u003e\n\u003cp\u003e执行 \u003ccode\u003esudo chown -R xxx:yyy /usr/local/go\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003exxx 用户名， yyy 组名\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e命令的目的：更改go目录的所有者用户和组。\u003c/p\u003e\n\u003ch3 id=\"查看用户名用户组\"\u003e查看用户名\u0026amp;用户组\u003c/h3\u003e\n\u003cp\u003e当前用户名 常用命令 \u003ccode\u003ewho am i\u003c/code\u003e\n查看当前用户名和组 \u003ccode\u003els -la\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"参考\"\u003e参考\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/golang/go/issues/37962\"\u003ehttps://github.com/golang/go/issues/37962\u003c/a\u003e\u003c/p\u003e","title":"解决/usr/local/go/pkg/darwin_amd64/runtime/cgo.a: permission denied问题"},{"content":"汉化三方插件 前面说过汉化Grafana的工作。目前在7.2.1上面，大部分已经完成。细节继续完善。 今天考虑在第三方插件上做一些汉化。点到插件一看全是英文感觉很突出。领导看到了也不爽啊-.-！。\n找个软的捏 饼图在展示方面比较直观。Grafana上有一个插件Pie Chart 。这个现象比较少，同时在一些模版上使用中。就拿这个热热身。\n具体步骤 下载项目\n项目地址：piechart-panel 文件结构：\ngit clone git@github.com:grafana/piechart-panel.git cd piechart-panel # 进入到目录 yarn install 我直接把项目clone到grafana存放插件的位置，我的grafana是为了测试run的一个docker镜像。把插件目录挂载到本机，代码clone到目录中。\n汉化工作\n根据上面目录看，主要修改文件都在src里面。 IDE打开此项目，在src中修改需要编辑的文件。\n图片举例，选项第一项选择图形类型。选项内容pie / donut。通过翻译我修改成了 派/甜甜圈。根据修改内容其他地方设计修改的都需要修改。我通过查询替换方式，在其他文件中修改了代码中的判断。例如上图右侧展示的文件类似。\nbuild插件\n修改完需要的内容之后，grafana是能识别到有一个插件，但没有build时候他会提示你没有build插件。就是他不认识你的项目代码。\n这个怎么处理呢？看官方的文档\n执行 yarn dev\n# 执行结束提示，美滋滋～ ✔ Bundling plugin in dev mode ✨ Done in 4.91s. 执行完毕我们重启grafana就可以看到成果了。\n对比下原来的版本和汉化后的版本：\nbefore：\nAfter：\n测试\u0026amp;调试\n以上2，3步骤基本就是一个测试、调试的过程。\n我开始先把所有配置项汉化。然后再处理选项参数。 接着build，重启grafana查看。如此往复达到预期目标。 我本机调试用docker启动grafana，测完删了容器就好了。\n持续改进 考虑持续处理某个插件，可以考虑fork原插件项目，remote add XXX源。 然后新建分之来做自己的处理。master fetch XXX源 以跟踪上游的更新。 这样自己项目安装插件时候拉自己的就好啦，美滋滋。\n","permalink":"http://localhost:1313/aLong/posts/grafana%E6%8F%92%E4%BB%B6plugin%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/","summary":"\u003ch2 id=\"汉化三方插件\"\u003e汉化三方插件\u003c/h2\u003e\n\u003cp\u003e前面说过汉化Grafana的工作。目前在7.2.1上面，大部分已经完成。细节继续完善。\n今天考虑在第三方插件上做一些汉化。点到插件一看全是英文感觉很突出。领导看到了也不爽啊-.-！。\u003c/p\u003e\n\u003ch2 id=\"找个软的捏\"\u003e找个软的捏\u003c/h2\u003e\n\u003cp\u003e饼图在展示方面比较直观。Grafana上有一个插件\u003ca href=\"https://grafana.com/grafana/plugins/grafana-piechart-panel\"\u003ePie Chart\u003c/a\u003e\n。这个现象比较少，同时在一些模版上使用中。就拿这个热热身。\u003c/p\u003e\n\u003ch2 id=\"具体步骤\"\u003e具体步骤\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e下载项目\u003c/p\u003e\n\u003cp\u003e项目地址：\u003ca href=\"https://github.com/grafana/piechart-panel\"\u003epiechart-panel\u003c/a\u003e\n文件结构：\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2020/11/30/ZVbHPT.jpg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit clone git@github.com:grafana/piechart-panel.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003ecd\u003c/span\u003e piechart-panel \u003cspan style=\"color:#408080;font-style:italic\"\u003e# 进入到目录\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eyarn install  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e我直接把项目clone到grafana存放插件的位置，我的grafana是为了测试run的一个docker镜像。把插件目录挂载到本机，代码clone到目录中。\u003c/strong\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e汉化工作\u003c/p\u003e\n\u003cp\u003e根据上面目录看，主要修改文件都在src里面。\nIDE打开此项目，在src中修改需要编辑的文件。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2020/11/30/ZVb8Ht.jpg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e图片举例，选项第一项选择图形类型。选项内容\u003ccode\u003epie\u003c/code\u003e / \u003ccode\u003edonut\u003c/code\u003e。通过翻译我修改成了 派/甜甜圈。根据修改内容其他地方设计修改的都需要修改。我通过查询替换方式，在其他文件中修改了代码中的判断。例如上图右侧展示的文件类似。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ebuild插件\u003c/p\u003e\n\u003cp\u003e修改完需要的内容之后，grafana是能识别到有一个插件，但没有build时候他会提示你没有build插件。就是他不认识你的项目代码。\u003c/p\u003e\n\u003cp\u003e这个怎么处理呢？看\u003ca href=\"https://grafana.com/tutorials/build-a-panel-plugin/#3\"\u003e\u003cstrong\u003e官方的文档\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e执行 \u003ccode\u003eyarn dev\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 执行结束提示，美滋滋～\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ Bundling plugin in dev mode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✨  Done in 4.91s.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e执行完毕我们重启grafana就可以看到成果了。\u003c/p\u003e\n\u003cp\u003e对比下原来的版本和汉化后的版本：\u003c/p\u003e\n\u003cp\u003ebefore：\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2020/11/30/ZVb5gM.jpg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003eAfter：\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2020/11/30/ZVbGO6.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e测试\u0026amp;调试\u003c/p\u003e\n\u003cp\u003e以上2，3步骤基本就是一个测试、调试的过程。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e我开始先把所有配置项汉化。然后再处理选项参数。\u003c/li\u003e\n\u003cli\u003e接着build，重启grafana查看。如此往复达到预期目标。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e我本机调试用docker启动grafana，测完删了容器就好了。\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"持续改进\"\u003e持续改进\u003c/h2\u003e\n\u003cp\u003e考虑持续处理某个插件，可以考虑fork原插件项目，remote add XXX源。\n然后新建分之来做自己的处理。master fetch XXX源 以跟踪上游的更新。\n这样自己项目安装插件时候拉自己的就好啦，美滋滋。\u003c/p\u003e","title":"Grafana插件Plugin中文汉化"},{"content":"Docker-compose 目前集成很多Exporter，加上grafana的image-renderer，后面又加上ping-exporter，很多东西加起来发现操作一次docker 很烦啊。\n科普之后感觉自己对k8s还有有些发怵的。从简单的一个入手吧，选择了docker-compose。\nDocker-Compose项目是Docker官方的开源项目，负责实现对Docker容器集群的快速编排。\n安装 安装方式看了一下，我选择直接下载bin文件方式：\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` \u0026gt; /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose``` 通过 docker-compose version 看到版本信息算是安装完成。\n编写docker-compose.yml 目录结构： ├── docker-compose.yaml ├── prometheus │ ├── rules │ │ └── *(rules).yaml/json │ ├── nodes │ │ └── *(nodes).yaml │ ├── data │ │ └── ... # 挂载prom的data数据 │ └── prometheus.yaml ├── alertmanager │ ├── templates │ │ └── *.tmpl │ └── alertmanager.yaml ├── grafana │ ├── data │ │ ├── plugins #插件目录 │ │ ├── png │ │ └── grafana.db │ └── grafana.ini ├── snmp(snmp_exporter) │ └── snmp.yml └── blackbox(balck box-exporter) └── blackbox.yml 根据结构编写\nversion: \u0026#34;3.8\u0026#34; networks: monitor: driver: bridge services: snmp-exporter: image: prom/snmp-exporter:v0.19.0 container_name: snmp restart: always expose: - 9116 volumes: - \u0026#34;./snmp/snmp.yml:/etc/snmp_exporter/snmp.yml\u0026#34; networks: - monitor node-exporter: image: prom/node-exporter:v1.0.1 container_name: node-exporter volumes: - /proc:/host/proc:ro - /sys:/host/sys:ro - /:/rootfs:ro command: - \u0026#39;--path.procfs=/host/proc\u0026#39; - \u0026#39;--path.rootfs=/rootfs\u0026#39; - \u0026#39;--path.sysfs=/host/sys\u0026#39; - \u0026#39;--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)\u0026#39; restart: unless-stopped expose: - 9100 networks: - monitor blackbox-exporter: image: prom/blackbox-exporter:v0.18.0 expose: - 9115 container_name: blackbox restart: unless-stopped volumes: - \u0026#34;./blackbox/:/config\u0026#34; command: - \u0026#34;--config.file=/config/blackbox.yml\u0026#34; networks: - monitor cadvisor: image: google/cadvisor:v0.33.0 container_name: cadvisor volumes: - /:/rootfs:ro - /var/run:/var/run:rw - /sys:/sys:ro - /var/lib/docker:/var/lib/docker:ro restart: unless-stopped expose: - 8080 networks: - monitor depends_on: - prometheus prometheus: image: prom/prometheus:v2.22.1 container_name: prom restart: always user: \u0026#34;0\u0026#34; ports: - \u0026#34;9090:9090\u0026#34; volumes: - \u0026#34;./prometheus/:/prometheus\u0026#34; command: - \u0026#34;--storage.tsdb.retention.time=60d\u0026#34; - \u0026#34;--config.file=/prometheus/prometheus.yml\u0026#34; - \u0026#34;--web.enable-lifecycle\u0026#34; networks: - monitor depends_on: - blackbox-exporter - node-exporter - snmp-exporter alertmanager: image: prom/alertmanager:v0.21.0 restart: always container_name: alert volumes: - ./alertmanager/:/alert command: - \u0026#39;--config.file=/alert/alertmanager.yml\u0026#39; - \u0026#39;--storage.path=/alert\u0026#39; ports: - \u0026#34;9093:9093\u0026#34; networks: - monitor depends_on: - prometheus grafana: image: chenwl2016/grafana-chs:0.1.4 restart: always container_name: grafana user: \u0026#34;0\u0026#34; ports: - \u0026#34;3000:3000\u0026#34; environment: - \u0026#34;GF_SECURITY_ADMIN_PASSWORD=helloGf\u0026#34; - \u0026#34;GF_RENDERING_SERVER_URL=http://renderer:8081/render\u0026#34; - \u0026#34;GF_RENDERING_CALLBACK_URL=http://grafana:3000/\u0026#34; - \u0026#34;GF_LOG_FILTERS=rendering:debug\u0026#34; volumes: - ./grafana/:/grafana - ./grafana/data/:/var/lib/grafana networks: - monitor depends_on: - prometheus - renderer renderer: image: grafana/grafana-image-renderer:latest container_name: renderer ports: - \u0026#34;8081:8081\u0026#34; environment: - \u0026#34;ENABLE_METRICS=true\u0026#34; - \u0026#34;RENDERING_MODE=clustered\u0026#34; - \u0026#34;RENDERING_CLUSTERING_MODE=context\u0026#34; - \u0026#34;RENDERING_CLUSTERING_MAX_CONCURRENCY=5\u0026#34; networks: - monitor ​ 当前的配置，主要是文件存储到宿主机上。通过容器挂载卷到容器内部。存储到宿主机目录时prometheus与grafana 会有权限问题。 配置中我是在user: \u0026ldquo;0\u0026quot;账户下，挂载目录 prometheus/grafana 都是 root:root。如果你不是root 需要根据uid:gid进行对应的配置。\nprometheus 目录下的nodes是file_sd的配置文件，结合实际考虑docker-compose 的具体细节。\n","permalink":"http://localhost:1313/aLong/posts/docker-compose%E7%BC%96%E6%8E%92%E6%90%AD%E5%BB%BAprometheus-grafana-alertmanager-node-exporter-snmp-exporter/","summary":"\u003ch2 id=\"docker-compose\"\u003eDocker-compose\u003c/h2\u003e\n\u003cp\u003e目前集成很多Exporter，加上grafana的image-renderer，后面又加上ping-exporter，很多东西加起来发现操作一次docker 很烦啊。\u003c/p\u003e\n\u003cp\u003e科普之后感觉自己对k8s还有有些发怵的。从简单的一个入手吧，选择了docker-compose。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDocker-Compose项目是Docker官方的开源项目，负责实现对Docker容器集群的快速编排。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"安装\"\u003e安装\u003c/h3\u003e\n\u003cp\u003e安装方式看了一下，我选择直接下载bin文件方式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl -L https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-\u003cspan style=\"color:#ba2121\"\u003e`\u003c/span\u003euname -s\u003cspan style=\"color:#ba2121\"\u003e`\u003c/span\u003e-\u003cspan style=\"color:#ba2121\"\u003e`\u003c/span\u003euname -m\u003cspan style=\"color:#ba2121\"\u003e`\u003c/span\u003e \u0026gt; /usr/local/bin/docker-compose\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003echmod +x /usr/local/bin/docker-compose\u003cspan style=\"color:#ba2121\"\u003e```\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e通过 \u003ccode\u003edocker-compose version\u003c/code\u003e  看到版本信息算是安装完成。\u003c/p\u003e\n\u003ch3 id=\"编写docker-composeyml\"\u003e编写docker-compose.yml\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e目录结构：\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e├── docker-compose.yaml\n├── prometheus\n│   ├── rules \n│   │   └── *(rules).yaml/json\n│   ├── nodes\n│   │   └── *(nodes).yaml\n│   ├── data\n│   │   └── ... # 挂载prom的data数据\n│   └── prometheus.yaml\n├── alertmanager\n│   ├── templates\n│   │   └── *.tmpl\n│   └── alertmanager.yaml\n├── grafana\n│   ├── data\n│   │   ├── plugins #插件目录\n│   │   ├── png     \n│   │   └── grafana.db\n│   └── grafana.ini\n├── snmp(snmp_exporter)\n│   └── snmp.yml\n└── blackbox(balck box-exporter)\n    └── blackbox.yml\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"2\"\u003e\n\u003cli\u003e\n\u003cp\u003e根据结构编写\u003c/p\u003e","title":"docker-compose编排搭建prometheus+grafana+alertmanager+node-exporter+snmp-exporter"},{"content":"最近使用Office 发现AutoUpdate一直会启动。我也不需要里面的更新。每次还要把它推出。\n网上看到有两种方法，一种是暴力删除，另一种是通过权限限制。\n暴力可不是我喜欢的方式，所以选择后者。\n方法：\n打开终端\ncd /Library/Application\\ Support/Microsoft/MAU2.0 sudo chmod 000 Microsoft\\ AutoUpdate.app 两行命令后，输入密码就可以了。\n","permalink":"http://localhost:1313/aLong/posts/%E5%85%B3%E9%97%ADmac%E7%9A%84microsoft-autoupdate/","summary":"\u003cp\u003e最近使用Office 发现AutoUpdate一直会启动。我也不需要里面的更新。每次还要把它推出。\u003c/p\u003e\n\u003cp\u003e网上看到有两种方法，一种是暴力删除，另一种是通过权限限制。\u003c/p\u003e\n\u003cp\u003e暴力可不是我喜欢的方式，所以选择后者。\u003c/p\u003e\n\u003cp\u003e方法：\u003c/p\u003e\n\u003cp\u003e打开终端\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003ecd\u003c/span\u003e /Library/Application\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\ \u003c/span\u003eSupport/Microsoft/MAU2.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo chmod \u003cspan style=\"color:#666\"\u003e000\u003c/span\u003e Microsoft\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\ \u003c/span\u003eAutoUpdate.app  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e两行命令后，输入密码就可以了。\u003c/p\u003e","title":"关闭Mac的Microsoft AutoUpdate"},{"content":"最近需要到SSL证书，又想免懒。选择脚本来更新SSL证书文件 Let’s Encrypt是一个由非营利性组织互联网安全研究小组（ISRG）提供的免费、自动化和开放的证书颁发机构（CA）。 简单的说，借助Let’s Encrypt颁发的证书可以为我们的网站免费启用HTTPS(SSL/TLS) 。\n那我们通过一个脚本来申请：\n脚本名称： acme.sh\n安装acme.sh： curl https://get.acme.sh | sh\n创建指令： alias acme.sh=~/.acme.sh/acme.sh\n测试收否安装成功： acme.sh --Version 出现版本，安装完成。\n生成证书 acme.sh --issue -d demo.com -d www.demo.con -w /home/wwwroot/demo.com\n–issue是acme.sh脚本用来颁发证书的指令； -d是–domain的简称，其后面须填写已备案的域名； -w是–webroot的简称，其后面须填写网站的根目录。\n查看证书 acme.sh --list\nNginx 配置 项目是Nginx，下面是对Nginx的配置。\nacme.sh \u0026ndash;installcert -d demo.com \u0026ndash;key-file /etc/nginx/ssl/demo.com.key \u0026ndash;fullchain-file /etc/nginx/ssl/fullchain.cer \u0026ndash;reloadcmd \u0026ldquo;service nginx force-reload\u0026rdquo;\n通过 installcert 来完成安装，此处我们需要把*.key,fullchain.cer 文件拷贝到指定位置。最后通过reload命令让Nginx重载（force-reload 我环境中无法使用此参数，这里换成 restart）。\n最后我们需要配置Nginx的443 server\nserver { listen 443 ssl; server_name demo.com; ssl on; ssl_certificate /etc/nginx/ssl/fullchain.cer; ssl_certificate_key /etc/nginx/ssl/esofar.cn.key; ... 到此基本上配置完成了。 Acme.sh 通过定时任务可以实现定期更新。 查看 crontab -l\nacme.sh的更新维护 acme 协议和 letsencrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步。\n手动更新： acme.sh --upgrade\n自动更新：acme.sh --upgrade --auto-upgrade\n取消自动更新： acme.sh --upgrade --auto-upgrade 0\n","permalink":"http://localhost:1313/aLong/posts/%E7%94%B3%E8%AF%B7let-s-encrypt-https-%E8%AF%81%E4%B9%A6%E8%84%9A%E6%9C%AC/","summary":"\u003ch2 id=\"最近需要到ssl证书又想免懒选择脚本来更新ssl证书文件\"\u003e最近需要到SSL证书，又想免懒。选择脚本来更新SSL证书文件\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eLet’s Encrypt是一个由非营利性组织互联网安全研究小组（ISRG）提供的免费、自动化和开放的证书颁发机构（CA）。\n简单的说，借助Let’s Encrypt颁发的证书可以为我们的网站免费启用HTTPS(SSL/TLS) 。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e那我们通过一个脚本来申请：\u003c/p\u003e\n\u003cp\u003e脚本名称： \u003ca href=\"https://github.com/acmesh-official/acme.sh\"\u003eacme.sh\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"安装acmesh\"\u003e安装acme.sh：\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ecurl https://get.acme.sh | sh\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e创建指令： \u003ccode\u003ealias acme.sh=~/.acme.sh/acme.sh\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e测试收否安装成功： \u003ccode\u003eacme.sh --Version\u003c/code\u003e\n出现版本，安装完成。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"生成证书\"\u003e生成证书\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eacme.sh --issue -d demo.com -d www.demo.con -w  /home/wwwroot/demo.com\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e–issue是acme.sh脚本用来颁发证书的指令；\n-d是–domain的简称，其后面须填写已备案的域名；\n-w是–webroot的简称，其后面须填写网站的根目录。\u003c/p\u003e\n\u003ch3 id=\"查看证书\"\u003e查看证书\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eacme.sh --list\u003c/code\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"nginx-配置\"\u003eNginx 配置\u003c/h3\u003e\n\u003cp\u003e项目是Nginx，下面是对Nginx的配置。\u003c/p\u003e\n\u003cp\u003eacme.sh  \u0026ndash;installcert -d demo.com \u003cbr\u003e\n\u0026ndash;key-file /etc/nginx/ssl/demo.com.key \u003cbr\u003e\n\u0026ndash;fullchain-file /etc/nginx/ssl/fullchain.cer \u003cbr\u003e\n\u0026ndash;reloadcmd \u0026ldquo;service nginx force-reload\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e通过 installcert 来完成安装，此处我们需要把*.key,fullchain.cer 文件拷贝到指定位置。最后通过reload命令让Nginx重载（force-reload 我环境中无法使用此参数，这里换成 restart）。\u003c/p\u003e\n\u003cp\u003e最后我们需要配置Nginx的443 server\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-nginx\" data-lang=\"nginx\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eserver\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#008000;font-weight:bold\"\u003elisten\u003c/span\u003e \u003cspan style=\"color:#666\"\u003e443\u003c/span\u003e \u003cspan style=\"color:#ba2121\"\u003essl\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#008000;font-weight:bold\"\u003eserver_name\u003c/span\u003e \u003cspan style=\"color:#ba2121\"\u003edemo.com\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#008000;font-weight:bold\"\u003essl\u003c/span\u003e \u003cspan style=\"color:#800\"\u003eon\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#008000;font-weight:bold\"\u003essl_certificate\u003c/span\u003e      \u003cspan style=\"color:#ba2121\"\u003e/etc/nginx/ssl/fullchain.cer\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#008000;font-weight:bold\"\u003essl_certificate_key\u003c/span\u003e  \u003cspan style=\"color:#ba2121\"\u003e/etc/nginx/ssl/esofar.cn.key\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#008000;font-weight:bold\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e到此基本上配置完成了。\nAcme.sh 通过定时任务可以实现定期更新。 查看 \u003ccode\u003ecrontab -l\u003c/code\u003e\u003c/p\u003e","title":"申请Let's Encrypt HTTPS 证书脚本"},{"content":"GROM创建联合索引 之前提到一个联合约束，那么根据需求再次做一个演示：\ntype Demo struct { ID uint `gorm:\u0026#34;primary_key\u0026#34;` CreatedAt time.Time UpdatedAt time.Time DeletedAt *time.Time `gorm:\u0026#34;index;unique_index:name_d\u0026#34;` Name string `gorm:\u0026#34;unique_index:name_d\u0026#34;` Status int } 通过demo 迁移后，deleted_at 与 name 会形成一个联合约束。\n-OK,完结-\n","permalink":"http://localhost:1313/aLong/posts/gorm-%E5%88%9B%E5%BB%BA%E8%81%94%E5%90%88%E7%BA%A6%E6%9D%9F-%E7%B4%A2%E5%BC%95/","summary":"\u003ch3 id=\"grom创建联合索引\"\u003eGROM创建联合索引\u003c/h3\u003e\n\u003cp\u003e之前提到一个联合约束，那么根据需求再次做一个演示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etype\u003c/span\u003e Demo \u003cspan style=\"color:#008000;font-weight:bold\"\u003estruct\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tID           \u003cspan style=\"color:#b00040\"\u003euint\u003c/span\u003e          \u003cspan style=\"color:#ba2121\"\u003e`gorm:\u0026#34;primary_key\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tCreatedAt    time.Time\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tUpdatedAt    time.Time\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tDeletedAt    \u003cspan style=\"color:#666\"\u003e*\u003c/span\u003etime.Time    \u003cspan style=\"color:#ba2121\"\u003e`gorm:\u0026#34;index;unique_index:name_d\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tName     \u003cspan style=\"color:#b00040\"\u003estring\u003c/span\u003e            \u003cspan style=\"color:#ba2121\"\u003e`gorm:\u0026#34;unique_index:name_d\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tStatus       \u003cspan style=\"color:#b00040\"\u003eint\u003c/span\u003e         \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e通过demo 迁移后，\u003ccode\u003edeleted_at\u003c/code\u003e 与 \u003ccode\u003ename\u003c/code\u003e 会形成一个联合约束。\u003c/p\u003e\n\u003cp\u003e-OK,完结-\u003c/p\u003e","title":"GORM 创建联合约束/索引"},{"content":"约束\u0026amp;软删除冲突 本咸鱼对数据库方面研究甚少。能存数据就没多考虑其他问题。尤其是在设计方面。都是按照接口或者业务推到一下就好了。 这次考虑一个问题，学习了一个小问题的处理。 就是标题所述 约束与软删除的冲突。\n场景问题例子：\n一表单 字段为：\n|:\u0026ndash;| | id | | name | |\u0026hellip; | | u_number | | deleted_at |\n考虑 u_number 唯一问题，添加 约束 UNIQUE。 u_number 是可复用的一些唯一数据。\n那么问题来了：\n当操作软删除时候，deleted_at (类型 datetime) 填充删除时间后，我理想化数据已经被删除。当 u_number 被其他用户使用插入此表结果是失败的。\n解决方式 u_number 因为唯一，导致后续使用此前删除的数据是不可行的，如果直接删前者数据也是不太有B格，不科学的事情。 通过 联合的约束来完善此事，deleted_at 正好是时间， 与其联合使用即解决此事。\n约束不再是单一约束 u_number 修改成 u_number,deleted_at。\n-OK，完结。-\n","permalink":"http://localhost:1313/aLong/posts/%E8%A7%A3%E5%86%B3%E7%BA%A6%E6%9D%9F-%E8%BD%AF%E5%88%A0%E9%99%A4%E5%86%B2%E7%AA%81/","summary":"\u003ch3 id=\"约束软删除冲突\"\u003e约束\u0026amp;软删除冲突\u003c/h3\u003e\n\u003cp\u003e本咸鱼对数据库方面研究甚少。能存数据就没多考虑其他问题。尤其是在设计方面。都是按照接口或者业务推到一下就好了。\n这次考虑一个问题，学习了一个小问题的处理。\n就是标题所述 约束与软删除的冲突。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e场景问题例子：\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e一表单 字段为：\u003c/p\u003e\n\u003cp\u003e|:\u0026ndash;|\n| id |\n| name |\n|\u0026hellip; |\n| u_number |\n| deleted_at |\u003c/p\u003e\n\u003cp\u003e考虑 \u003ccode\u003eu_number\u003c/code\u003e 唯一问题，添加 约束 \u003ccode\u003eUNIQUE\u003c/code\u003e。\n\u003ccode\u003eu_number\u003c/code\u003e 是可复用的一些唯一数据。\u003c/p\u003e\n\u003cp\u003e那么问题来了：\u003c/p\u003e\n\u003cp\u003e当操作软删除时候，deleted_at (类型 \u003ccode\u003edatetime\u003c/code\u003e) 填充删除时间后，我理想化数据已经被删除。当 \u003ccode\u003eu_number\u003c/code\u003e 被其他用户使用插入此表结果是失败的。\u003c/p\u003e\n\u003ch4 id=\"解决方式\"\u003e解决方式\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eu_number\u003c/code\u003e 因为唯一，导致后续使用此前删除的数据是不可行的，如果直接删前者数据也是不太有B格，不科学的事情。\n通过 联合的约束来完善此事，\u003ccode\u003edeleted_at\u003c/code\u003e 正好是时间， 与其联合使用即解决此事。\u003c/p\u003e\n\u003cp\u003e约束不再是单一约束 \u003ccode\u003eu_number\u003c/code\u003e 修改成 \u003ccode\u003eu_number,deleted_at\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e-OK，完结。-\u003c/p\u003e","title":"解决约束与软删除冲突"},{"content":"Linux系统重启后Docker自动启动 系统重启后，如果docker没有启动，那么docker下所有的服务就都挂了。 配置过一次总是忘记命令，这里特意记录一下： systemctl enable docker.service\n容器自动启动配置 容器配置好自动启动后，当docker运行后，容器也自动启动。这样能保证服务的稳定性。不用再登录到系统来操作各种容易启动问题。 涉及到的参数为： --restart=always\n参数有：\nno，默认策略，在容器退出时不重启容器\non-failure，在容器非正常退出时（退出状态非0），才会重启容器。例如：on-failure:3，在容器非正常退出时重启容器，最多重启3次\nalways，在容器退出时总是重启容器\nunless-stopped，在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器\n容器已存在更新重启配置 可能容器我们已经生成了，后面想实现always这个参数，可以用到下面的命令： docker container update --restart=always 容器名XXX 这样就达到了想要的目的。\n","permalink":"http://localhost:1313/aLong/posts/linux%E9%87%8D%E5%90%AF%E5%90%8Edocker%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8-%E5%AE%B9%E5%99%A8%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%E8%AE%BE%E7%BD%AE/","summary":"\u003ch2 id=\"linux系统重启后docker自动启动\"\u003eLinux系统重启后Docker自动启动\u003c/h2\u003e\n\u003cp\u003e系统重启后，如果docker没有启动，那么docker下所有的服务就都挂了。\n配置过一次总是忘记命令，这里特意记录一下：\n\u003ccode\u003esystemctl enable docker.service\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"容器自动启动配置\"\u003e容器自动启动配置\u003c/h2\u003e\n\u003cp\u003e容器配置好自动启动后，当docker运行后，容器也自动启动。这样能保证服务的稳定性。不用再登录到系统来操作各种容易启动问题。\n涉及到的参数为：\n\u003ccode\u003e--restart=always\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e参数有：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eno，默认策略，在容器退出时不重启容器\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eon-failure，在容器非正常退出时（退出状态非0），才会重启容器。例如：on-failure:3，在容器非正常退出时重启容器，最多重启3次\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ealways，在容器退出时总是重启容器\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eunless-stopped，在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"容器已存在更新重启配置\"\u003e容器已存在更新重启配置\u003c/h3\u003e\n\u003cp\u003e可能容器我们已经生成了，后面想实现always这个参数，可以用到下面的命令：\n\u003ccode\u003edocker container update --restart=always 容器名XXX\u003c/code\u003e\n这样就达到了想要的目的。\u003c/p\u003e","title":"Linux重启后Docker设置自动启动\u0026容器自动启动设置"},{"content":"系统版本 macOS Catalina 10.15.1\n方法一\n允许任何来源的应用。\n系统偏好设置 -\u0026gt; 安全性和隐私： 在 允许从以下位置下载的应用程序 选项中选择 任何来源\n在 Sierra 10.12 中可能看不到这个选项，开启此功能需要执行命令sudo spctl --master-disable,\n输入密码就可以看到此选项。\n方法二\n如果上面发法还是打不开，可能需要此方法。\nsudo xattr -r -d com.apple.quarantine /Applications/xxxx.app/\n这里的x x.app如果你不知道名字，可以通过\f应用中查看应用简介中的名称与扩展名,\n或者在Applications目录下输入名称补全\n","permalink":"http://localhost:1313/aLong/posts/%E8%A7%A3%E5%86%B3mac%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%88%96%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/","summary":"\u003ch3 id=\"系统版本\"\u003e系统版本\u003c/h3\u003e\n\u003cp\u003emacOS Catalina 10.15.1\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e方法一\u003c/p\u003e\n\u003cp\u003e允许任何来源的应用。\u003c/p\u003e\n\u003cp\u003e系统偏好设置 -\u0026gt; 安全性和隐私： 在 \u003cstrong\u003e允许从以下位置下载的应用程序\u003c/strong\u003e 选项中选择 \u003cstrong\u003e任何来源\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在 Sierra 10.12 中可能看不到这个选项，开启此功能需要执行命令\u003ccode\u003esudo spctl --master-disable\u003c/code\u003e,\u003c/p\u003e\n\u003cp\u003e输入密码就可以看到此选项。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e方法二\u003c/p\u003e\n\u003cp\u003e如果上面发法还是打不开，可能需要此方法。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo xattr -r -d com.apple.quarantine /Applications/xxxx.app/\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e这里的x x.app如果你不知道名字，可以通过\f应用中查看应用简介中的名称与扩展名,\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e或者在Applications目录下输入名称补全\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.ax1x.com/2020/02/07/12ElE6.jpg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"解决MAC软件提示已损坏或移到废纸篓"},{"content":"mac 终端走ssr代理 前提是你已经知道怎么使用shadowsocks软件，并且可以出去之后。\n看下自己ssr 代理端口号是多少 高级设置看下 本地Socks5监听端口 记住这个端口号。 后面： mac 现在默认终端是用的zsh 编辑 vi ～/.zshrc 在最后加入 //alias 后面的名字自己可以按照习惯定义， 比如我定义proxy 是 ss。 每当我需要时候 ss 一下就可以了。 不需要的时候执行第二句。\n//端口按照你的来配置alias unproxy=\u0026#39;unset all_proxy\u0026#39; alias proxy=\u0026#39;export all_proxy=socks5://127.0.0.1:1086\u0026#39; 测试： 首先在没有走ss 的时候， curl cip.cc 得到一个国内的信息。 当使用ss之后， 再通过这个查询就可以看到变化了。\n为了便捷，我觉得这个命令也可以设置成别名方式。\n设置一个where 每次当我迷茫不知道自己出没出去的时候，就可以 输入where 看下。 alias where='curl cip.cc'\n","permalink":"http://localhost:1313/aLong/posts/mac-book-pro-%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/","summary":"\u003ch3 id=\"mac-终端走ssr代理\"\u003emac 终端走ssr代理\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e前提是你已经知道怎么使用shadowsocks软件，并且可以出去之后。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e看下自己ssr 代理端口号是多少\n高级设置看下 本地Socks5监听端口\n\u003cimg loading=\"lazy\" src=\"https://s2.ax1x.com/2020/01/20/1PYNKs.png\" alt=\"高级设置\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://s2.ax1x.com/2020/01/20/1PYabq.png\" alt=\"端口号\"  /\u003e\n\n记住这个端口号。\n后面：\nmac 现在默认终端是用的zsh\n编辑 \u003ccode\u003evi ～/.zshrc\u003c/code\u003e\n在最后加入\n//alias 后面的名字自己可以按照习惯定义， 比如我定义proxy 是 ss。 每当我需要时候 ss 一下就可以了。 不需要的时候执行第二句。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003e//端口按照你的来配置alias unproxy\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;unset all_proxy\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003ealias proxy\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;export all_proxy=socks5://127.0.0.1:1086\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e测试：\n首先在没有走ss 的时候， \u003ccode\u003ecurl cip.cc\u003c/code\u003e 得到一个国内的信息。\n当使用ss之后， 再通过这个查询就可以看到变化了。\u003c/p\u003e\n\u003cp\u003e为了便捷，我觉得这个命令也可以设置成别名方式。\u003c/p\u003e\n\u003cp\u003e设置一个where 每次当我迷茫不知道自己出没出去的时候，就可以 输入where 看下。\n\u003ccode\u003ealias where='curl cip.cc'\u003c/code\u003e\u003c/p\u003e","title":"Mac book pro 终端走代理配置"},{"content":"项目初始化遇到问题 错误为：\n../go/pkg/mod/golang.org/x/xerrors@v0.0.0-20190410155217-1f06c39b4373/adaptor_go1_13.go:16:14: undefined: errors.Frame ../go/pkg/mod/golang.org/x/xerrors@v0.0.0-20190410155217-1f06c39b4373/format_go1_13.go:12:18: undefined: errors.Formatter exit status 2 exit status 1 通过科普得到一个方法： go get -u golang.org/x/xerrors\n问题解决了。\n","permalink":"http://localhost:1313/aLong/posts/golang-org-x-xerrorsundefined-errors-frame/","summary":"\u003ch3 id=\"项目初始化遇到问题\"\u003e项目初始化遇到问题\u003c/h3\u003e\n\u003cp\u003e错误为：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-bahs\" data-lang=\"bahs\"\u003e../go/pkg/mod/golang.org/x/xerrors@v0.0.0-20190410155217-1f06c39b4373/adaptor_go1_13.go:16:14: undefined: errors.Frame\n../go/pkg/mod/golang.org/x/xerrors@v0.0.0-20190410155217-1f06c39b4373/format_go1_13.go:12:18: undefined: errors.Formatter\nexit status 2\nexit status 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e通过科普得到一个方法：\n\u003ccode\u003ego get -u golang.org/x/xerrors\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e问题解决了。\u003c/p\u003e","title":"golang.org/x/xerrors：undefined: errors.Frame"},{"content":"安装GOlang 环境:macOS\nshell: zsh\n安装步骤： brew update \u0026amp;\u0026amp; brew upgrade # 更新 brew install go # 安装 go 配置环境变量 我的本shell 是zsh 下面是按照zsh配置： 如果需要修改默认的环境变量配置修改 vim ~/.bash_profile 或 vim ~/.zshrc # GOROOT安装的路径 export GOROOT=/usr/local/Cellar/go/1.9/libexec #GOPATH root bin export GOBIN=$GOROOT/bin export PATH=$PATH:$GOBIN #GOPATH export GOPATH=$HOME/go #GOPATH bin export PATH=$PATH:$GOPATH/bin 退出保存后，使文件生效 source ~/.zshrc= ","permalink":"http://localhost:1313/aLong/posts/golang-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/","summary":"\u003ch2 id=\"安装golang\"\u003e安装GOlang\u003c/h2\u003e\n\u003cp\u003e环境:macOS\u003c/p\u003e\n\u003cp\u003eshell: zsh\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e安装步骤：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew update \u003cspan style=\"color:#666\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e brew upgrade \u003cspan style=\"color:#408080;font-style:italic\"\u003e# 更新\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install go             \u003cspan style=\"color:#408080;font-style:italic\"\u003e# 安装 go\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e配置环境变量\n我的本shell 是zsh 下面是按照zsh配置：\n如果需要修改默认的环境变量配置修改 \u003ccode\u003evim ~/.bash_profile\u003c/code\u003e 或 \u003ccode\u003evim ~/.zshrc\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# GOROOT安装的路径\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003eexport\u003c/span\u003e \u003cspan style=\"color:#19177c\"\u003eGOROOT\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e/usr/local/Cellar/go/1.9/libexec\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#GOPATH root bin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003eexport\u003c/span\u003e \u003cspan style=\"color:#19177c\"\u003eGOBIN\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#19177c\"\u003e$GOROOT\u003c/span\u003e/bin\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003eexport\u003c/span\u003e \u003cspan style=\"color:#19177c\"\u003ePATH\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#19177c\"\u003e$PATH\u003c/span\u003e:\u003cspan style=\"color:#19177c\"\u003e$GOBIN\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#GOPATH\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003eexport\u003c/span\u003e \u003cspan style=\"color:#19177c\"\u003eGOPATH\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#19177c\"\u003e$HOME\u003c/span\u003e/go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#GOPATH bin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003eexport\u003c/span\u003e \u003cspan style=\"color:#19177c\"\u003ePATH\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#19177c\"\u003e$PATH\u003c/span\u003e:\u003cspan style=\"color:#19177c\"\u003e$GOPATH\u003c/span\u003e/bin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e退出保存后，使文件生效 \u003ccode\u003esource ~/.zshrc=\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Golang 环境准备"},{"content":"项目yarn install 出现phantomjs-prebuilt： Command failed. 自己在项目中发现执行 yarn install时候，一直卡住没走完。\n最后报错， error phantomjs-prebuilt： Command failed.\n可以看到错误中，他是从 github.com/Medium/\u0026hellip; 感觉就是没下载成功吧。\n最开始以为网络问题，翻墙等方式都试过后发现还是没完成。\n没办法，借助网络得知。可以轻松搞定：\nnpm config set phantomjs_cdnurl=http://cdn.npm.taobao.org/dis\u0026hellip; yarn config set \u0026ldquo;phantomjs_cdnurl\u0026rdquo; \u0026ldquo;https://npm.taobao.org/mirrors/phantomjs\u0026quot;\n看你是npm 还是node。按照上面方式设置一下。\nrm -rf path/node_moudels\nyarn install\n解决问题，美滋滋。\n引用地址\n","permalink":"http://localhost:1313/aLong/posts/yarn-install-phantomjs-prebuilt-command-failed/","summary":"\u003ch3 id=\"项目yarn-install-出现phantomjs-prebuilt-command-failed\"\u003e项目yarn install 出现phantomjs-prebuilt： Command failed.\u003c/h3\u003e\n\u003cp\u003e自己在项目中发现执行 \u003ccode\u003eyarn install\u003c/code\u003e时候，一直卡住没走完。\u003c/p\u003e\n\u003cp\u003e最后报错， \u003cem\u003eerror phantomjs-prebuilt： Command failed.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e可以看到错误中，他是从 github.com/Medium/\u0026hellip;   感觉就是没下载成功吧。\u003c/p\u003e\n\u003cp\u003e最开始以为网络问题，翻墙等方式都试过后发现还是没完成。\u003c/p\u003e\n\u003cp\u003e没办法，借助网络得知。可以轻松搞定：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003enpm config set phantomjs_cdnurl=\u003ca href=\"http://cdn.npm.taobao.org/dist/phantomjs_cdnurl\"\u003ehttp://cdn.npm.taobao.org/dis\u0026hellip;\u003c/a\u003e\nyarn config set \u0026ldquo;phantomjs_cdnurl\u0026rdquo; \u0026ldquo;\u003ca href=\"https://npm.taobao.org/mirrors/phantomjs%22\"\u003ehttps://npm.taobao.org/mirrors/phantomjs\u0026quot;\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e看你是npm 还是node。按照上面方式设置一下。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003erm -rf path/node_moudels\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eyarn install\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e解决问题，美滋滋。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://segmentfault.com/q/1010000010278132\"\u003e引用地址\u003c/a\u003e\u003c/p\u003e","title":"yarn install phantomjs-prebuilt: Command failed."},{"content":"最近维护一个MySQL数据库，由于各种原因，密码已经不知道了。现在让我在这台服务器上使用里面的MySQL数据库。\n怎么办？\n首先问了一圈没有人知道。那么只能靠自己了。\n查看软件版本: mysql --version\n之后通过神奇的Google科普了一下。 知道了具体的方法：\n关闭mysql服务。\n修改my.conf 在里面[mysqld] 下面最后加入一行\n[mysqld] ... skip-grant-tables 修改完保存退出。\n重启mysql服务。\nmysql 进入mysql 不需要密码了。\nshow databases; 查看数据库\nuse mysql; 选择 mysql 数据库 在此数据库执行更新语句（修改root用户的密码为root）： update user set authentication_string=password('root') where user='root'; flush privileges; 更新权限\n退出mysql\n把最开始my.conf加入的语句删除。\n重启mysql服务\n最后可以通过设置的密码登陆数据库了。\n","permalink":"http://localhost:1313/aLong/posts/mysql5-7%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/","summary":"\u003cp\u003e最近维护一个MySQL数据库，由于各种原因，密码已经不知道了。现在让我在这台服务器上使用里面的MySQL数据库。\u003c/p\u003e\n\u003cp\u003e怎么办？\u003c/p\u003e\n\u003cp\u003e首先问了一圈没有人知道。那么只能靠自己了。\u003c/p\u003e\n\u003cp\u003e查看软件版本:  \u003ccode\u003emysql --version\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e之后通过神奇的Google科普了一下。\n知道了具体的方法：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e关闭mysql服务。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e修改my.conf\n在里面[mysqld] 下面最后加入一行\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003e[mysqld]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#7d9029\"\u003eskip-grant-tables\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e修改完保存退出。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e重启mysql服务。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003emysql\u003c/code\u003e 进入mysql 不需要密码了。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eshow databases;\u003c/code\u003e  查看数据库\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003euse mysql;\u003c/code\u003e 选择 mysql 数据库\n在此数据库执行更新语句（修改root用户的密码为root）：\n\u003ccode\u003eupdate user set authentication_string=password('root') where user='root'; \u003c/code\u003e\n\u003ccode\u003eflush privileges;\u003c/code\u003e 更新权限\u003c/p\u003e\n\u003cp\u003e退出mysql\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e把最开始my.conf加入的语句删除。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e重启mysql服务\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e最后可以通过设置的密码登陆数据库了。\u003c/p\u003e","title":"MySQL5.7修改root密码"},{"content":"Prometheus-SNMP Exporter 生成器从generator.yml读取并写入snmp.yml。\n之前在说Prometheus-snmp_export部署时,没有具体提到snmp.yml的生成器是怎么生成的.几乎用的都是github上的snmp.yml文件(只在demo中添加了auth配置).\n因为刚好所有通用的指标都取得通用的mib树. 在后期我搜集设备的信息需要一些私有mib的数据,这时候需要自己通过生成器来生成snmp.yml.\nGenerator 的操作步骤 下载需要的程序(Docker方式跳过此步骤) # Debian-based distributions. sudo apt-get install unzip build-essential libsnmp-dev # Debian-based distros # Redhat-based distributions. sudo yum install gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel # RHEL-based distros go get github.com/prometheus/snmp_exporter/generator cd ${GOPATH-$HOME/go}/src/github.com/prometheus/snmp_exporter/generator go build make mibs(不建议直接make) 这里直接make mibs 可能会失败,在make文件里设置的源有些已经不能访问了或执行出现错误.\n我建议先下载好mibs ,我已经上传github.\n建议自行搜集mib 不执行make mibs会方便一些\n把所有的mib放入mibs 目录下.\n需要准备好所有需要涉及到的mib文件. 除了公有的mib,我们还需要监控目标设备的私有mib.思科/华为之类的会提供这些mib,像锐捷这种需要和商务部联系.\n一些mib:\nhttps://github.com/netdisco/netdisco-mibs\nhttps://github.com/pgmillon/observium/tree/master/mibs\nhttps://github.com/librenms/librenms/tree/master/mibs\n当我们准备好所有的mib后,需要编写一个generator.yml. 下面是一个翻译的官方文档(翻译比较烂,自行查阅[原文]([https://github.com/prometheus/snmp\\_exporter/tree/master/generator](https://github.com/prometheus/snmp\\_exporter/tree/master/generator))):\nmodules: module_name: # 模块名称。您可以根据需要拥有任意数量的模块。 walk: # 要walk的OID列表。 也可以是SNMP对象名称或特定实例。 - 1.3.6.1.2.1.2 # 与“接口”相同。 - sysUpTime # 与“ 1.3.6.1.2.1.1.3”相同。 - 1.3.6.1.2.1.31.1.1.1.6.40 # 索引为“ 40”的“ ifHCInOctets”的实例。 version: 2 # 要使用的SNMP版本。 默认2。 # 1将使用GETNEXT，2和3将使用GETBULK。 max_repetitions: 25 # 使用GET / GETBULK请求多少个对象，默认为25。 # 对于有故障的设备，可能需要减少。 retries: 3 # 重试失败请求的次数，默认为3。 timeout: 10s # 每次步行的超时时间，默认为10秒。 auth: # 社区字符串与SNMP v1和v2一起使用。 默认为“ public”。 community: public # v3具有不同且更复杂的设置。 # 需要哪些取决于security_level。 # 还列出了NetSNMP命令上的等效选项，例如snmpbulkwalk和snmpget。 # 请参见snmpcmd（1）。 username: user # 必需，无默认值。 NetSNMP的-u选项。 security_level: noAuthNoPriv # 默认为noAuthNoPriv。 NetSNMP的-l选项。 # 可以是noAuthNoPriv，authNoPriv或authPriv。 password: pass # 没有默认值。 也称为authKey，NetSNMP的-A选项。 # 如果security_level是authNoPriv或authPriv，则为必需。 auth_protocol: MD5 # MD5或SHA，默认为MD5。 -NetSNMP的选项。 # 如果security_level为authNoPriv或authPriv，则使用此属性。 priv_protocol: DES # DES或AES，默认为DES。 NetSNMP的-x选项。 # 如果security_level为authPriv，则使用。 priv_password: otherPass # 没有默认值。 也称为privKey，NetSNMP的-X选项。 # 如果security_level是authPriv，则为必需。 context_name: context # 没有默认值。 NetSNMP的-n选项。 # 如果在设备上配置了上下文，则为必需。 lookups: # 要执行的查找的可选列表。 # “keep_source_indexes”的默认值为false。 # 索引必须唯一，才能使用此选项。 # 如果表的索引是bsnDot11EssIndex，则通常是该表结果度量的标签。 # 相反,使用索引查找bsnDot11EssSsid表条目，并使用该值创建一个bsnDot11EssSsid标签。 - source_indexes: [bsnDot11EssIndex] lookup: bsnDot11EssSsid drop_source_indexes: false # 如果为true，则删除此查找的源索引标签。 # 当新索引唯一时，这可以避免标签混乱。 overrides: # 允许每个模块覆盖MIB的位 metricName: ignore: true # 从输出中删除度量。 regex_extracts: Temp: # 将创建一个新的度量，并将其附加到metricName上，成为metricNameTemp。 - regex: \u0026#39;(.*)\u0026#39; # 正则表达式从返回的SNMP walk的值中提取一个值。 value: \u0026#39;$1\u0026#39; # 结果将解析为float64，默认为$1。 Status: - regex: \u0026#39;.*Example\u0026#39; value: \u0026#39;1\u0026#39; - regex: \u0026#39;.*\u0026#39; value: \u0026#39;0\u0026#39; type: DisplayString # 覆盖度量标准类型，可能的类型有： # gauge: 带gauge的整数。 # counter: 带类型计数器的整数。 # OctetString: 一个位字符串，呈现为0xff34。 # DateAndTime: RFC 2579日期和时间字节序列。如果设备没有时区数据，则使用UTC。 # DisplayString: ASCII或UTF-8字符串。 # PhysAddress48: 一个48位的MAC地址，呈现为00:01:02:03:04:ff。 # Float: 一个32位浮点值，带有类型gauge。 # Double: 一个64位浮点值，带有类型gauge。 # InetAddressIPv4: IPv4地址，呈现为1.2.3.4。 # InetAddressIPv6: IPv6地址，呈现为0102:0304:0506:0708:090A:0B0C:0D0E:0F10。 # InetAddress: 每个RFC 4001有一个InetAddress。必须以InetAddressType开头。 # InetAddressMissingSize: 因索引中没有大小而违反RFC 4001第4.1节的InetAddress。 # 必须以InetAddressType开头。 # EnumAsInfo: 为其创建单个时间序列的枚举。适用于恒定值。 # EnumAsStateSet: 每个状态具有时间序列的枚举。适用于可变低基数枚举。 # Bits: 一种RFC2578位结构，它产生一个具有每位时间序列的状态集。 下面提供一个自己编写的generator.yml\nmodules: ruijie_mib: walk: - interfaces - ifXTable - sysUpTime - sysName - myMemoryPoolCurrentUtilization - myCPUUtilization5Sec timeout: 12s version: 2 auth: community: Monitor@#@Jkj lookups: - source_indexes: [ifIndex] lookup: ifAlias - source_indexes: [ifIndex] lookup: ifDescr - source_indexes: [ifIndex] lookup: 1.3.6.1.2.1.31.1.1.1.1 overrides: ifAlias: ignore: true ifDescr: ignore: true ifName: ignore: true ifType: type: EnumAsInfo sysDescr: type: DisplayString sysLocation: type: DisplayString ifPhysAddress: type: PhysAddress48 sysName: type: DisplayString 解释一下此配置的目的:\n模块名称 ruijie_mib 通过名字可以知道是作用锐捷设备\nwalk 中, 是需要获取的指标. 其中前四个是共有mib获取到的,后面是私有mib获取到的.\ntimeout 超时定义12秒\nversion snmp协议是v2\nauth 定义的团体名\nlooksups 通过索引查找列表\noverrides 前三个指标删除,后面几项是定义了他们的数据类型.\n万事具备,只差执行. 准备工作完成之后,就可以执行程序了.\nbin执行 export MIBDIRS=mibs ./generator generate 执行后,可以看到snmp.yml.\nDocker方式 通过dicker方式时，除上面需要的 mibs 文件夹和 generate.yml 再生成一个容器就好了。\npull镜像\ndocker pull prom/snmp-exporter:latest (查看具体版本)[https://hub.docker.com/r/prom/snmp-exporter/tags]\n镜像通过挂在宿主机文件后，通过generate.yml生成snmp.yml\n目录结构：\n./generate.yml ./mibs 执行生成snmp.yml\ndocker run -ti -v \u0026quot;${PWD}:/opt/\u0026quot; prom/snmp-generator generate 此容器挂载了一个目录，此目录下包含之前准备的 mibs 文件夹和 generate.yml。\n执行完毕会在目录中生成 snmp.yml 文件。\n出现错误排查：\ngenerate 命令改成 parse_errors\n通常这样使用：\ndocker run -ti -v \u0026quot;${PWD}:/opt/\u0026quot; snmp-generator parse_errors | head\n生成出现问题两个方向： generate.yml 编写存在错误，格式 或者 指令。 可参考官方提供**模版**测试。 mib文件准备不足，缺少mib文件。可通过官方介绍提供的**地址。我在github**上分享了自己收集一些mib文件 ","permalink":"http://localhost:1313/aLong/posts/prometheus-snmp-exporter-generator/","summary":"\u003ch2 id=\"prometheus-snmp-exporter\"\u003ePrometheus-SNMP Exporter\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e生成器从generator.yml读取并写入snmp.yml。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e之前在说\u003ca href=\"https://blog.51ai.vip/2019/08/29/Prometheus-snmp-export%E9%83%A8%E7%BD%B2/\"\u003ePrometheus-snmp_export部署\u003c/a\u003e时,没有具体提到snmp.yml的生成器是怎么生成的.几乎用的都是github上的\u003ca href=\"https://github.com/prometheus/snmp_exporter/blob/master/snmp.yml\"\u003esnmp.yml\u003c/a\u003e文件(只在demo中添加了auth配置).\u003c/p\u003e\n\u003cp\u003e因为刚好所有通用的指标都取得通用的mib树. 在后期我搜集设备的信息需要一些私有mib的数据,这时候需要自己通过生成器来生成snmp.yml.\u003c/p\u003e\n\u003ch2 id=\"generator-的操作步骤\"\u003eGenerator 的操作步骤\u003c/h2\u003e\n\u003ch3 id=\"下载需要的程序docker方式跳过此步骤\"\u003e下载需要的程序(Docker方式跳过此步骤)\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Debian-based distributions.\nsudo apt-get install unzip build-essential libsnmp-dev # Debian-based distros\n# Redhat-based distributions.\nsudo yum install gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel # RHEL-based distros\n\ngo get github.com/prometheus/snmp_exporter/generator\ncd ${GOPATH-$HOME/go}/src/github.com/prometheus/snmp_exporter/generator\ngo build\nmake mibs(不建议直接make)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这里直接make mibs 可能会失败,在make文件里设置的源有些已经不能访问了或执行出现错误.\u003c/p\u003e\n\u003cp\u003e我建议先下载好mibs ,我已经上传\u003ca href=\"https://github.com/chenweil/mibs\"\u003egithub\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e建议自行搜集mib 不执行make mibs会方便一些\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e把所有的mib放入mibs 目录下.\u003c/p\u003e\n\u003cp\u003e需要准备好所有需要涉及到的mib文件. 除了公有的mib,我们还需要监控目标设备的私有mib.思科/华为之类的会提供这些mib,像锐捷这种需要和商务部联系.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003e一些mib:\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/netdisco/netdisco-mibs\"\u003ehttps://github.com/netdisco/netdisco-mibs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/pgmillon/observium/tree/master/mibs\"\u003ehttps://github.com/pgmillon/observium/tree/master/mibs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/librenms/librenms/tree/master/mibs\"\u003ehttps://github.com/librenms/librenms/tree/master/mibs\u003c/a\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"当我们准备好所有的mib后需要编写一个generatoryml\"\u003e当我们准备好所有的mib后,需要编写一个generator.yml.\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e下面是一个翻译的官方文档(翻译比较烂,自行查阅[原文]([https://github.com/prometheus/snmp\\_exporter/tree/master/generator](https://github.com/prometheus/snmp\\_exporter/tree/master/generator))):\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emodules\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emodule_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 模块名称。您可以根据需要拥有任意数量的模块。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ewalk\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e       \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 要walk的OID列表。 也可以是SNMP对象名称或特定实例。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e1.3.6.1.2.1.2\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e              \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 与“接口”相同。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- sysUpTime                 \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 与“ 1.3.6.1.2.1.1.3”相同。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e1.3.6.1.2.1.31.1.1.1.6.40\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 索引为“ 40”的“ ifHCInOctets”的实例。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eversion\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e2\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 要使用的SNMP版本。 默认2。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 1将使用GETNEXT，2和3将使用GETBULK。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emax_repetitions\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e25\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 使用GET / GETBULK请求多少个对象，默认为25。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                         \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 对于有故障的设备，可能需要减少。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eretries\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e3\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e   \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 重试失败请求的次数，默认为3。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etimeout\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e10s\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 每次步行的超时时间，默认为10秒。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eauth\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 社区字符串与SNMP v1和v2一起使用。 默认为“ public”。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ecommunity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003epublic\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# v3具有不同且更复杂的设置。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 需要哪些取决于security_level。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 还列出了NetSNMP命令上的等效选项，例如snmpbulkwalk和snmpget。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 请参见snmpcmd（1）。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eusername\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003euser \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 必需，无默认值。 NetSNMP的-u选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esecurity_level\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003enoAuthNoPriv \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 默认为noAuthNoPriv。 NetSNMP的-l选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                                    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 可以是noAuthNoPriv，authNoPriv或authPriv。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003epassword\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003epass \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 没有默认值。 也称为authKey，NetSNMP的-A选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果security_level是authNoPriv或authPriv，则为必需。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eauth_protocol\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eMD5 \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# MD5或SHA，默认为MD5。 -NetSNMP的选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                          \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果security_level为authNoPriv或authPriv，则使用此属性。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003epriv_protocol\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eDES \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# DES或AES，默认为DES。 NetSNMP的-x选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                          \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果security_level为authPriv，则使用。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003epriv_password\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eotherPass\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 没有默认值。 也称为privKey，NetSNMP的-X选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                               \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果security_level是authPriv，则为必需。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003econtext_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003econtext\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 没有默认值。 NetSNMP的-n选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                            \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果在设备上配置了上下文，则为必需。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003elookups\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 要执行的查找的可选列表。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e              \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# “keep_source_indexes”的默认值为false。 \u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e              \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 索引必须唯一，才能使用此选项。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果表的索引是bsnDot11EssIndex，则通常是该表结果度量的标签。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 相反,使用索引查找bsnDot11EssSsid表条目，并使用该值创建一个bsnDot11EssSsid标签。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_indexes\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[bsnDot11EssIndex]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e        \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003elookup\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ebsnDot11EssSsid\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e        \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003edrop_source_indexes\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003efalse\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 如果为true，则删除此查找的源索引标签。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                                    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 当新索引唯一时，这可以避免标签混乱。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e     \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eoverrides\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 允许每个模块覆盖MIB的位\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e       \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emetricName\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e         \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eignore\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etrue\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 从输出中删除度量。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e         \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex_extracts\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e           \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eTemp\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 将创建一个新的度量，并将其附加到metricName上，成为metricNameTemp。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e             \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;(.*)\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 正则表达式从返回的SNMP walk的值中提取一个值。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e               \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003evalue\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;$1\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 结果将解析为float64，默认为$1。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e           \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eStatus\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e             \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;.*Example\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e               \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003evalue\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;1\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e             \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;.*\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e               \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003evalue\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;0\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e         \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etype\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eDisplayString\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 覆盖度量标准类型，可能的类型有：\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   gauge:   带gauge的整数。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   counter: 带类型计数器的整数。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   OctetString: 一个位字符串，呈现为0xff34。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   DateAndTime: RFC 2579日期和时间字节序列。如果设备没有时区数据，则使用UTC。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   DisplayString: ASCII或UTF-8字符串。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   PhysAddress48: 一个48位的MAC地址，呈现为00:01:02:03:04:ff。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   Float: 一个32位浮点值，带有类型gauge。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   Double: 一个64位浮点值，带有类型gauge。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   InetAddressIPv4: IPv4地址，呈现为1.2.3.4。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   InetAddressIPv6: IPv6地址，呈现为0102:0304:0506:0708:090A:0B0C:0D0E:0F10。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   InetAddress: 每个RFC 4001有一个InetAddress。必须以InetAddressType开头。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   InetAddressMissingSize: 因索引中没有大小而违反RFC 4001第4.1节的InetAddress。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#                           必须以InetAddressType开头。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   EnumAsInfo: 为其创建单个时间序列的枚举。适用于恒定值。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   EnumAsStateSet: 每个状态具有时间序列的枚举。适用于可变低基数枚举。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#   Bits: 一种RFC2578位结构，它产生一个具有每位时间序列的状态集。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面提供一个自己编写的generator.yml\u003c/p\u003e","title":"Prometheus-SNMP_Exporter Generator"},{"content":"目的 之前配置告警之后,可以发送告警信息.但对于数据具体的结构信息,在模板中数据读取都比较懵.原因是不太清除警报都提供了哪些数据,除了我们设置的信息,还有没有其他的信息.\n告警数据结构 官方docs\n推送数据结构:\nAlerts数据 KV数据的处理方式 KV结构很简单,键值对.通过键获取对应的值.下面提供了一些方法处理这种结构的一些方法.\n字符串相关方法 警报提供的数据是通过GO模板解析的,GO模板的功能通过GO模板文档可以了解.\n下面提供了一些处理字符串的方法:\n微信通知的DEMO 上图中是微信接受的通知,下面展示通知模板的代码.\n{{- define \u0026#34;_alert_list\u0026#34; -}} {{- range .Alerts.Firing -}} ----------------------- 告警类型：{{ .Labels.alertname }} 告警主题: {{ .Annotations.summary }} 告警详情: {{ .Annotations.description }} 触发时间: {{ (.StartsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }} {{ end -}} ---------结束----------------- {{- end -}} {{- define \u0026#34;_resolve_list\u0026#34; -}} {{- range .Alerts.Resolved -}} ************************** 告警类型：{{ .Labels.alertname }} 告警主题: {{ .Annotations.summary }} 告警详情: {{ .Annotations.description }} 触发时间: {{ (.StartsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }} 恢复时间: {{ (.EndsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }} {{ end -}} ************结束***************** {{- end -}} {{- define \u0026#34;wechat.message\u0026#34; -}} {{- if and (gt (len .Alerts.Firing) 0) (gt (len .Alerts.Resolved) 0) -}} 告警数量:{{.Alerts.Firing | len}} 告警设备:{{ .GroupLabels.server}} {{ template \u0026#34;_alert_list\u0026#34; . }} ==================================== 告警恢复:{{len .Alerts.Resolved}} 告警设备:{{ .GroupLabels.server}} {{ template \u0026#34;_resolve_list\u0026#34; . }} {{- else -}} {{- if gt (len .Alerts.Firing) 0 -}} 告警数量:{{.Alerts.Firing | len}} 告警设备:{{ .GroupLabels.server}} {{ template \u0026#34;_alert_list\u0026#34; . }} {{- end -}} {{- if gt (len .Alerts.Resolved) 0 -}} 告警恢复:{{len .Alerts.Resolved}} 告警设备:{{ .GroupLabels.server}} {{ template \u0026#34;_resolve_list\u0026#34; . }} {{- end -}} {{- end -}} {{- end -}} 其中告警设备 server 这个标签是自定义的.如果没有可以删除此行或根据自己标签定义.\n","permalink":"http://localhost:1313/aLong/posts/prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF%E8%AF%A6%E8%A7%A3/","summary":"\u003ch2 id=\"目的\"\u003e目的\u003c/h2\u003e\n\u003cp\u003e之前配置告警之后,可以发送告警信息.但对于数据具体的结构信息,在模板中数据读取都比较懵.原因是不太清除警报都提供了哪些数据,除了我们设置的信息,还有没有其他的信息.\u003c/p\u003e\n\u003ch3 id=\"告警数据结构\"\u003e告警数据结构\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://prometheus.io/docs/alerting/notifications/#alert\"\u003e官方docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e推送数据结构:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch3 id=\"alerts数据\"\u003eAlerts数据\u003c/h3\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch3 id=\"kv数据的处理方式\"\u003eKV数据的处理方式\u003c/h3\u003e\n\u003cp\u003eKV结构很简单,键值对.通过键获取对应的值.下面提供了一些方法处理这种结构的一些方法.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch3 id=\"字符串相关方法\"\u003e字符串相关方法\u003c/h3\u003e\n\u003cp\u003e警报提供的数据是通过GO模板解析的,GO模板的功能通过\u003ca href=\"https://golang.org/pkg/text/template/#hdr-Functions\"\u003eGO模板文档\u003c/a\u003e可以了解.\u003c/p\u003e\n\u003cp\u003e下面提供了一些处理字符串的方法:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2019/12/05/kngppe.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003ch3 id=\"微信通知的demo\"\u003e微信通知的DEMO\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2019/12/05/kngxOt.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e上图中是微信接受的通知,下面展示通知模板的代码.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-tmpl\" data-lang=\"tmpl\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- define \u0026#34;_alert_list\u0026#34; -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- range .Alerts.Firing -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-----------------------\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警类型：{{ .Labels.alertname }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警主题: {{ .Annotations.summary }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警详情: {{ .Annotations.description }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e触发时间: {{ (.StartsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---------结束-----------------\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- define \u0026#34;_resolve_list\u0026#34; -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- range .Alerts.Resolved -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e**************************\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警类型：{{ .Labels.alertname }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警主题: {{ .Annotations.summary }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警详情: {{ .Annotations.description }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e触发时间: {{ (.StartsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e恢复时间: {{ (.EndsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e************结束*****************\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- define \u0026#34;wechat.message\u0026#34; -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- if and (gt (len .Alerts.Firing) 0) (gt (len .Alerts.Resolved) 0) -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警数量:{{.Alerts.Firing | len}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警设备:{{ .GroupLabels.server}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ template \u0026#34;_alert_list\u0026#34; . }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e====================================\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警恢复:{{len .Alerts.Resolved}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警设备:{{ .GroupLabels.server}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ template \u0026#34;_resolve_list\u0026#34; . }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- else -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  {{- if gt (len .Alerts.Firing) 0 -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警数量:{{.Alerts.Firing | len}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警设备:{{ .GroupLabels.server}}  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ template \u0026#34;_alert_list\u0026#34; . }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  {{- end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  {{- if gt (len .Alerts.Resolved) 0 -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警恢复:{{len .Alerts.Resolved}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e告警设备:{{ .GroupLabels.server}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ template \u0026#34;_resolve_list\u0026#34; . }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  {{- end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- end -}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{- end -}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e其中告警设备 server 这个标签是自定义的.如果没有可以删除此行或根据自己标签定义.\u003c/strong\u003e\u003c/p\u003e","title":"Prometheus告警模板详解"},{"content":"标签处理的重要性 之前的[配置](https://blog.51ai.vip/2019/10/09/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/中提到了标签的处理,不过由于写的是静态的配置,标签可以自己设置或者不设置都可以.\n当使用服务发现之后发现标签处理的重要性提升了更高的级别.\n标签处理 - job_name: \u0026#39;node\u0026#39; static_configs: - targets: [\u0026#39;172.16.23.110:9100\u0026#39;,\u0026#39;172.16.23.111:9100\u0026#39;] metric_relable_configs: #通过正则重命名标签 - action: replace #replace替换是默认动作。keep（只参加匹配标签的实例）、drop（不采集匹配正则的实例）、labelkeep\\labeldrop(对标签进行过滤处理而非实例)等动作 source_labels: [\u0026#39;job\u0026#39;] #原标签，job是默认就会产生的标签，这里job标签的值是node regex: (.*) #正则匹配，这里匹配job标签内的内容，也就是node replacement: beijing #替换成什么内容，如果写$1就是将正则里读取的值 target_label: idc #把替换内容赋值给idc标签 - action: labeldrop #删除标签 regex: job #把原job标签删除 - job_name: \u0026#39;prometheus\u0026#39; static_configs: - targets: [\u0026#39;localhost:9090\u0026#39;] labels: location: bj3 relabel_configs: - action: replace source_labels: [\u0026#39;job\u0026#39;] regex: (.*) replacement: $1 target_label: server 以上两个例子都是替换标签,job:node中,删除了前job标签,下面的job新增了\u0026rsquo;server\u0026rsquo;标签内容取的job内容,但没删除job标签.\n通过标签我们组成多维模型.可以对标签重命名,删除,过滤信息等.\n服务发现 之前配置中的静态配置需要一个一些写配置,设备或者服务多的时候容易头大.\n这里可以通过服务发现简化手动配置工作.\nPrometheus支持多种服务发现机制,例如: consul、dns、openstack、file、kubernetes等.\n这里举例file.比较简单的方式.\nfile机制中:需要提供文件来获取内容.文件格式为YAML 或 JSON格式.\nprometheus配置:\nscrape_configs:\r- job_name: \u0026#39;prometheus\u0026#39;\rfile_sd_configs: - files: [\u0026#39;/usr/local/prometheus/files_sd_configs/*.yaml\u0026#39;] ##指定服务发现文件位置\rrefresh_interval: 5s\r##刷新间隔改为5秒 Prometheus 每5秒扫描一次指定位置的配置文件.\n服务发现文件格式:\n- targets: [\u0026#39;localhost:9090\u0026#39;] # 监控目标 labels: # 配置标签 server: local ","permalink":"http://localhost:1313/aLong/posts/prometheus%E6%A0%87%E7%AD%BE%E5%A4%84%E7%90%86-%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/","summary":"\u003ch3 id=\"标签处理的重要性\"\u003e标签处理的重要性\u003c/h3\u003e\n\u003cp\u003e之前的[配置](\u003ca href=\"https://blog.51ai.vip/2019/10/09/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/\"\u003ehttps://blog.51ai.vip/2019/10/09/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/\u003c/a\u003e中提到了标签的处理,不过由于写的是静态的配置,标签可以自己设置或者不设置都可以.\u003c/p\u003e\n\u003cp\u003e当使用服务发现之后发现标签处理的重要性提升了更高的级别.\u003c/p\u003e\n\u003ch3 id=\"标签处理\"\u003e标签处理\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ejob_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;node\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003estatic_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etargets\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;172.16.23.110:9100\u0026#39;\u003c/span\u003e,\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;172.16.23.111:9100\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emetric_relable_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#通过正则重命名标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eaction\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ereplace \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#replace替换是默认动作。keep（只参加匹配标签的实例）、drop（不采集匹配正则的实例）、labelkeep\\labeldrop(对标签进行过滤处理而非实例)等动作\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;job\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#原标签，job是默认就会产生的标签，这里job标签的值是node\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e(.*) \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#正则匹配，这里匹配job标签内的内容，也就是node\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereplacement\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ebeijing \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#替换成什么内容，如果写$1就是将正则里读取的值\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eidc \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#把替换内容赋值给idc标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eaction\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003elabeldrop \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#删除标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ejob \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#把原job标签删除\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ejob_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;prometheus\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e   \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003estatic_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etargets\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;localhost:9090\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003elabels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e        \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003elocation\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ebj3\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003erelabel_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eaction\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ereplace\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;job\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e(.*)\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereplacement\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e$1\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eserver\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以上两个例子都是替换标签,job:node中,删除了前job标签,下面的job新增了\u0026rsquo;server\u0026rsquo;标签内容取的job内容,但没删除job标签.\u003c/p\u003e","title":"Prometheus标签处理\u0026服务发现"},{"content":"M3DB笔记 前阵子研究prometheus,初期没有考虑存储问题.本地默认存储30天数据.\n监控已经折腾完毕,现在需要来处理存储的方案.\n通过互联网的科普,发现目前有两个方案可以解决这个问题.\nthanos\nM3DB\nthanos是需要存储云端数据(本地存储官方不推荐).不符合我们的考虑范围内.那就来学习M3DB了.\n简介 M3可以在较长的保留时间内可靠地存储大规模指标。为了向更广泛的社区中的其他人提供这些好处，我们决定开放M3平台作为Prometheus的远程存储后端，Prometheus是一种流行的监控和警报解决方案。正如其文档所述，Prometheus的可扩展性和耐用性受到单个节点的限制。 M3平台旨在为Prometheus指标提供安全，可扩展且可配置的多租户的存储。\nM3于2015年发布，目前拥有超过66亿个时间序列。 M3每秒聚合5亿个指标，并在全球范围内（使用M3DB）每秒持续存储2000万个度量指标，批量写入将每个指标持久保存到区域中的三个副本。它还允许工程师编写度量策略，告诉M3以更短或更长的保留时间（两天，一个月，六个月，一年，三年，五年等）以特定的粒度（一秒，十秒，一分钟，十分钟等）。这允许工程师和数据科学家使用与定义的存储策略匹配的度量标签（标签），在精细和粗粒度范围内智能地存储不同保留的时间序列。例如，工程师可以选择存储“应用程序”标记为“mobile_api”且“端点”标记为“注册”的所有度量标准，这些标记在10秒粒度下为30天，在一小时粒度下为5年。\n相关组件 M3 Coordinator M3 Coordinator是一种服务，用于协调上游系统（如Prometheus和M3DB）之间的读写操作。它还提供了管理API，用于设置和配置M3的不同部分。它是用户可以部署以访问M3DB的优势的桥梁，例如长期存储和与其他监控系统（如Prometheus）的多DC设置。\nM3DB M3DB是一个分布式时间序列数据库，提供可扩展存储和时间序列的反向索引。它经过优化，具有成本效益和可靠的实时和长期保留指标存储和索引\nM3 Query M3 Query是一种服务，它包含一个分布式查询引擎，用于查询实时和历史指标，支持多种不同的查询语言。它旨在支持低延迟实时查询和可能需要更长时间执行的查询，聚合更大的数据集，用于分析用例\nM3 Aggregator M3 Aggregator是一种作为专用度量聚合器运行的服务，它基于存储在etcd中的动态规则提供基于流的下采样。它使用领导者选举和聚合窗口跟踪，利用etcd来管理此状态，从而可靠地为低采样度量标准发送至少一次聚合到长期存储。这提供了成本有效且可靠的下采样和汇总指标。这些功能也存在于M3协调器中，但专用聚合器是分片和复制的，而M3协调器则不需要并且需要谨慎部署和以高可用性方式运行。还有一些工作要使用户更容易访问聚合器，而无需他们编写自己的兼容生产者和消费者。\n入门 上面的组件通俗讲:\nprometheus 需要通过M3 Coordinator来协调存储与查询到M3DB,prometheus本地存储数据时间与这个没关系.\n上面没有提到一个名字etcd服务.此服务推断拓扑\\配置功能. 如果db嵌入此服务就称为种子节点SeedNode.\n官方提供了一个镜象,里面包含 M3 Coordinator + SeedNode.\n拉取镜象:docker pull quay.io/m3db/m3dbnode:latest\n启动名为m3db容器:docker run -d -p 7201:7201 -p 7203:7203 -p 9003:9003 --name m3db -v $(pwd)/m3db_data:/var/lib/m3db quay.io/m3db/m3dbnode:latest\n该容器的端口为7201（用于管理集群拓扑），端口为7203，Prometheus用来刮除M3DB和M3Coordinator生成的度量，端口9003（用于读取和写入度量）已公开。\n这时候m3db已经启动,需要创建一个初始命名空间.官方镜象默认是type:local,namespace:default. 这个可以进入容器查看到配置位置/etc/d3dbnode/m3dbnode.yml.如果我们创建其他命名空间需要在m3coordinator中配置好.\ncurl -X POST http://localhost:7201/api/v1/database/create -d '{ \u0026quot;type\u0026quot;: \u0026quot;local\u0026quot;, \u0026quot;namespaceName\u0026quot;: \u0026quot;default\u0026quot;, \u0026quot;retentionTime\u0026quot;: \u0026quot;24h\u0026quot; }'\n这里配置的参数除了type与namespaceName,还有一个保留时间.超过时间就被清除了.我们测试设置24小时可以了,如果我是监测自己的设备,不是生产的情况其实偷懒可以用这个单机存储设置一个较长时间.例如:1y(看你了兄嘚).\n设置完稍等几分钟就可以使用了.\n通过接口可以查看: curl http://localhost:7201/api/v1/placement\n看到很多AVAILABLE 就是ok了.\n访问localhost:7201/api/v1/openapi 可以看到官方提供的接口文档.\n配置远程读写 上面的库已经ok了,现在配置一下Prometheus.配置很简单只有两条.一条写,一条读.\nremote_read: - url: \u0026#34;http://localhost:7201/api/v1/prom/remote/read\u0026#34; read_recent: true remote_write: - url: \u0026#34;http://localhost:7201/api/v1/prom/remote/write\u0026#34; 监控指标 我们这个用的是官方提供的镜象,嵌入式M3Coordinator的M3DB.所以按照下面这种方式配置.\n- job_name: \u0026#39;m3\u0026#39; static_configs: - targets: [\u0026#39;\u0026lt;HOST_NAME\u0026gt;:7203\u0026#39;] ","permalink":"http://localhost:1313/aLong/posts/m3db%E7%AC%94%E8%AE%B0/","summary":"\u003ch2 id=\"m3db笔记\"\u003eM3DB笔记\u003c/h2\u003e\n\u003cp\u003e前阵子研究prometheus,初期没有考虑存储问题.本地默认存储30天数据.\u003c/p\u003e\n\u003cp\u003e监控已经折腾完毕,现在需要来处理存储的方案.\u003c/p\u003e\n\u003cp\u003e通过互联网的科普,发现目前有两个方案可以解决这个问题.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003ethanos\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eM3DB\u003c/p\u003e\n\u003cp\u003ethanos是需要存储云端数据(本地存储官方不推荐).不符合我们的考虑范围内.那就来学习M3DB了.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"简介\"\u003e简介\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eM3可以在较长的保留时间内可靠地存储大规模指标。为了向更广泛的社区中的其他人提供这些好处，我们决定开放M3平台作为Prometheus的远程存储后端，Prometheus是一种流行的监控和警报解决方案。正如其文档所述，Prometheus的可扩展性和耐用性受到单个节点的限制。 M3平台旨在为Prometheus指标提供安全，可扩展且可配置的多租户的存储。\u003c/p\u003e\n\u003cp\u003eM3于2015年发布，目前拥有超过66亿个时间序列。 M3每秒聚合5亿个指标，并在全球范围内（使用M3DB）每秒持续存储2000万个度量指标，批量写入将每个指标持久保存到区域中的三个副本。它还允许工程师编写度量策略，告诉M3以更短或更长的保留时间（两天，一个月，六个月，一年，三年，五年等）以特定的粒度（一秒，十秒，一分钟，十分钟等）。这允许工程师和数据科学家使用与定义的存储策略匹配的度量标签（标签），在精细和粗粒度范围内智能地存储不同保留的时间序列。例如，工程师可以选择存储“应用程序”标记为“mobile_api”且“端点”标记为“注册”的所有度量标准，这些标记在10秒粒度下为30天，在一小时粒度下为5年。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"相关组件\"\u003e相关组件\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003ch4 id=\"m3-coordinator\"\u003eM3 Coordinator\u003c/h4\u003e\n\u003cp\u003eM3 Coordinator是一种服务，用于协调上游系统（如Prometheus和M3DB）之间的读写操作。它还提供了管理API，用于设置和配置M3的不同部分。它是用户可以部署以访问M3DB的优势的桥梁，例如长期存储和与其他监控系统（如Prometheus）的多DC设置。\u003c/p\u003e\n\u003ch4 id=\"m3db\"\u003eM3DB\u003c/h4\u003e\n\u003cp\u003eM3DB是一个分布式时间序列数据库，提供可扩展存储和时间序列的反向索引。它经过优化，具有成本效益和可靠的实时和长期保留指标存储和索引\u003c/p\u003e\n\u003ch4 id=\"m3-query\"\u003eM3 Query\u003c/h4\u003e\n\u003cp\u003eM3 Query是一种服务，它包含一个分布式查询引擎，用于查询实时和历史指标，支持多种不同的查询语言。它旨在支持低延迟实时查询和可能需要更长时间执行的查询，聚合更大的数据集，用于分析用例\u003c/p\u003e\n\u003ch4 id=\"m3-aggregator\"\u003eM3 Aggregator\u003c/h4\u003e\n\u003cp\u003eM3 Aggregator是一种作为专用度量聚合器运行的服务，它基于存储在etcd中的动态规则提供基于流的下采样。它使用领导者选举和聚合窗口跟踪，利用etcd来管理此状态，从而可靠地为低采样度量标准发送至少一次聚合到长期存储。这提供了成本有效且可靠的下采样和汇总指标。这些功能也存在于M3协调器中，但专用聚合器是分片和复制的，而M3协调器则不需要并且需要谨慎部署和以高可用性方式运行。还有一些工作要使用户更容易访问聚合器，而无需他们编写自己的兼容生产者和消费者。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"入门\"\u003e入门\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2019/11/29/kIj7yu.png\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e上面的组件通俗讲:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eprometheus\u003c/em\u003e 需要通过\u003cem\u003eM3 Coordinator\u003c/em\u003e来协调存储与查询到M3DB,\u003cem\u003eprometheus\u003c/em\u003e本地存储数据时间与这个没关系.\u003c/p\u003e\n\u003cp\u003e上面没有提到一个名字etcd服务.此服务推断拓扑\\配置功能. 如果db嵌入此服务就称为种子节点SeedNode.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e官方提供了一个镜象,里面包含 M3 Coordinator + SeedNode.\u003c/p\u003e\n\u003cp\u003e拉取镜象:\u003ccode\u003edocker pull quay.io/m3db/m3dbnode:latest\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e启动名为m3db容器:\u003ccode\u003edocker run -d -p 7201:7201 -p 7203:7203 -p 9003:9003 --name m3db -v $(pwd)/m3db_data:/var/lib/m3db quay.io/m3db/m3dbnode:latest\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e该容器的端口为7201（用于管理集群拓扑），端口为7203，Prometheus用来刮除M3DB和M3Coordinator生成的度量，端口9003（用于读取和写入度量）已公开。\u003c/p\u003e\n\u003cp\u003e这时候m3db已经启动,需要创建一个初始命名空间.官方镜象默认是type:local,namespace:default. 这个可以进入容器查看到配置位置\u003ccode\u003e/etc/d3dbnode/m3dbnode.yml\u003c/code\u003e.如果我们创建其他命名空间需要在m3coordinator中配置好.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecurl -X POST http://localhost:7201/api/v1/database/create -d '{ \u0026quot;type\u0026quot;: \u0026quot;local\u0026quot;, \u0026quot;namespaceName\u0026quot;: \u0026quot;default\u0026quot;, \u0026quot;retentionTime\u0026quot;: \u0026quot;24h\u0026quot; }'\u003c/code\u003e\u003c/p\u003e","title":"M3DB笔记"},{"content":"网络传输测试软件 最近公司测试限速,搜集软件发现两款,iperf,LANSpeedTest. iperf,多平台. LANSpeedTest,读写显示,操作简单. 局域网测试传输,优先考虑UDP.\niperf Iperf可以报告带宽,延迟抖动和数据包丢失. 官方文档 安装不写了.跳过\niperf常用参数介绍\n-i 2\t#表示每2秒显示一次报告 -w 80k\t#对于TCP方式，此设置为TCP窗口大小。对于UDP方式，此设置为接受UDP数据包的缓冲区大小，限制可以接受数据包的最大值 -B 192.168.122.1\t#绑定到主机的多个地址中的一个。对于客户端来说，这个参数设置了出栈接口。对于服务器端来说，这个参数设置入栈接口。这个参数只用于具有多网络接口的主机。 #在Iperf的UDP模式下，此参数用于绑 定和加入一个多播组。使用范围在224.0.0.0至239.255.255.255的多播地址 #常用客户端参数 -b 100m\t#用于udp测试时，设置测试发送的带宽，单位：bit/秒，不设置时默认为：1Mbit/秒 -c #指定服务端ip地址 -d #同时测试上行和下行 -t 10\t#设置传输时间，为10秒\t-P 5\t#指定发起5个线程 UDP测试 服务端 iperf -u -s # -u表示以udp模式运行，-s表示作为服务端, 这里需要设置ip 客户端 iperf -u -c 192.168.100.11 -b 100M -t 60 -i 2 #解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.100.11上传带宽测试，测试时间为60秒 iperf -u -c 192.168.100.11 5M -P 30 -t 6\t#客户端同时向服务器端发起30个连接线程，以5Mbps为数据发送速率 iperf -u -c 192.168.100.11 -b 100M -d -t 60 #以100M为数据发送速率，进行上下行带宽测试 TCP测试 服务端 iperf -s 客户端 iperf -c 192.168.100.11 -t 60\t#在tcp模式下，客户端到服务器192.168.100.11上传带宽测试，测试时间为60秒。 iperf -c 192.168.100.11 -P 30 -t 60\t#客户端同时向服务器端发起30个连接线程。 iperf -c 192.168.100.11 -d -t 60 -i 2\t#进行上下行带宽测试。 测试结果 结果中可以看到: 30秒(-t)的测试,传递数据 70+ (-b参数), 监测的带宽约为20M .\nLANSpeedTest 首先server端开启服务即可. LST_Server 程序开启. 如图: 终端 LAN_SpeedTest 程序. 界面如图: 配置种可以配置数据大小: 点击Config: 具体配置自行参考里面的选项.这里设置10M的数据.\n设定好目标IP,Folder or Server IP 这里填写.\n单击 Start Test 等待结果.\n图为检测中: 结果: 检测结果和上面软件类似,约为20M.\n","permalink":"http://localhost:1313/aLong/posts/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/","summary":"\u003ch2 id=\"网络传输测试软件\"\u003e网络传输测试软件\u003c/h2\u003e\n\u003cp\u003e最近公司测试限速,搜集软件发现两款,iperf,LANSpeedTest.\niperf,多平台.\nLANSpeedTest,读写显示,操作简单.\n\u003cstrong\u003e局域网测试传输,优先考虑UDP.\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"iperf\"\u003eiperf\u003c/h3\u003e\n\u003cp\u003eIperf可以报告带宽,延迟抖动和数据包丢失.\n\u003ca href=\"https://iperf.fr/iperf-doc.php\"\u003e官方文档\u003c/a\u003e\n安装不写了.跳过\u003c/p\u003e\n\u003cp\u003eiperf常用参数介绍\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-i 2\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#表示每2秒显示一次报告\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-w 80k\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#对于TCP方式，此设置为TCP窗口大小。对于UDP方式，此设置为接受UDP数据包的缓冲区大小，限制可以接受数据包的最大值\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-B 192.168.122.1\t\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#绑定到主机的多个地址中的一个。对于客户端来说，这个参数设置了出栈接口。对于服务器端来说，这个参数设置入栈接口。这个参数只用于具有多网络接口的主机。\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#在Iperf的UDP模式下，此参数用于绑 定和加入一个多播组。使用范围在224.0.0.0至239.255.255.255的多播地址\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e#常用客户端参数\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-b 100m\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#用于udp测试时，设置测试发送的带宽，单位：bit/秒，不设置时默认为：1Mbit/秒\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-c \t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#指定服务端ip地址\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-d \t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#同时测试上行和下行\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-t 10\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#设置传输时间，为10秒\t\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t-P 5\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#指定发起5个线程\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"udp测试\"\u003eUDP测试\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e服务端\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -u -s \t\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e# -u表示以udp模式运行，-s表示作为服务端, 这里需要设置ip\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e客户端\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -u -c 192.168.100.11 -b 100M -t \u003cspan style=\"color:#666\"\u003e60\u003c/span\u003e -i \u003cspan style=\"color:#666\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.100.11上传带宽测试，测试时间为60秒\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -u -c 192.168.100.11 5M -P \u003cspan style=\"color:#666\"\u003e30\u003c/span\u003e -t 6\t\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#客户端同时向服务器端发起30个连接线程，以5Mbps为数据发送速率\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -u -c 192.168.100.11 -b 100M -d -t \u003cspan style=\"color:#666\"\u003e60\u003c/span\u003e \t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#以100M为数据发送速率，进行上下行带宽测试\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"tcp测试\"\u003eTCP测试\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e服务端\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e客户端\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -c 192.168.100.11 -t 60\t\t\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#在tcp模式下，客户端到服务器192.168.100.11上传带宽测试，测试时间为60秒。 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -c 192.168.100.11 -P \u003cspan style=\"color:#666\"\u003e30\u003c/span\u003e -t 60\t\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#客户端同时向服务器端发起30个连接线程。 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tiperf -c 192.168.100.11 -d -t \u003cspan style=\"color:#666\"\u003e60\u003c/span\u003e -i 2\t\u003cspan style=\"color:#408080;font-style:italic\"\u003e#进行上下行带宽测试。\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"测试结果\"\u003e测试结果\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.ax1x.com/2019/10/24/KNIyt0.png\" alt=\"\"  /\u003e\n\n结果中可以看到:\n30秒(-t)的测试,传递数据 70+ (-b参数), 监测的带宽约为20M .\u003c/p\u003e","title":"网络传输速度测试工具"},{"content":"AlertManager AlertManager处理由客户端应用程序（如Prometheus服务器）发送的警报。 它负责重复数据消除、分组，并将它们路由到正确的接收器集成（如电子邮件、PagerDuty或OpsGenie）。 它还负责消除和抑制警报。\n通过翻译官方文档可以了解到,AlertManager是负责为Prometheus(本身不会发送警报)发送警报的工具. AlertManager不是简单发送警报,可以消除重复警报,分组,抑制警报功能.并支持多接收器.\nPrometheus-\u0026gt;触发定义的警报规则-\u0026gt;AlertManager-\u0026gt;发送警报到指定通知渠道.\n为了能让Prometheus发送警报,我们需要:\n搭建AlertManager服务. 定义AlertManager通知配置. 定义Prometheus警报规则并引入. 测试警报. 定义通知模板. 定义AlertManager通知配置 global: smtp_smarthost: \u0026#39;smtp.163.com:25\u0026#39; # 邮箱smtp服务器代理 smtp_from: \u0026#39;shitu-0071@163.com\u0026#39; # 发送邮箱名称 resolve_timeout: 5m # 处理超时时间，默认为5min smtp_auth_username: \u0026#39;shitu-0071@163.com\u0026#39; # 邮箱帐户 smtp_auth_password: \u0026#39;******\u0026#39; # 邮箱授权码(注意是授权码,不知道自己查一下) wechat_api_url: \u0026#39;https://qyapi.weixin.qq.com/cgi-bin/\u0026#39; # 企业微信地址 # 定义模板信心 templates: - \u0026#39;template/*.tmpl\u0026#39; # 定义路由树信息 route: group_by: [\u0026#39;alertname\u0026#39;, \u0026#39;cluster\u0026#39;, \u0026#39;service\u0026#39;] # 报警分组依据,设置后会按照设定值分组,例如instance,alertname等 # 同标签警告会在作为一组警报发送 group_wait: 10s # 组内等待时间,触发阈值后,XXs后发送本组警报 group_interval: 10s # 每个组之前间隔时间(group_by设定的值划分的组) repeat_interval: 1m # 重复发送警报的周期 (对于email配置中，此项不可以设置过低，否则将会由于邮件发送太多频繁，被smtp服务器拒绝) receiver: \u0026#39;email\u0026#39; # 发送警报的接收者的名称 # 以下receivers name的名称 routes: - match: # 普通匹配 serverity: critical # 警告级别critical receiver: email # 通过邮件发送 - match_re: # 正则匹配 severity: ^(warning)$ # 匹配警告级别为warning的 receiver: wechat # 通过微信发送告警 - receiver: along # 定义接收者 match: # 匹配 severity: test # 等级为test # 定义警报接收者信息 receivers: - name: \u0026#39;email\u0026#39; # 警报 email_configs: # 邮箱配置 - to: \u0026#39;******@163.com\u0026#39; # 接收警报的email配置 html: \u0026#39;{{ template \u0026#34;test.html\u0026#34; . }}\u0026#39; # 设定邮箱的内容模板 headers: { Subject: \u0026#34;[WARN] 报警邮件\u0026#34;} # 接收邮件的标题 webhook_configs: # webhook配置 - url: \u0026#39;http://127.0.0.1:5001\u0026#39; send_resolved: true - name: \u0026#39;wechat\u0026#39; wechat_configs: # 企业微信报警配置 - send_resolved: true to_party: \u0026#39;1\u0026#39; # 接收组的id agent_id: \u0026#39;1000002\u0026#39; # (企业微信--\u0026gt;自定应用--\u0026gt;AgentId) corp_id: \u0026#39;******\u0026#39; # 企业信息(我的企业--\u0026gt;CorpId[在底部]) api_secret: \u0026#39;******\u0026#39; # 企业微信(企业微信--\u0026gt;自定应用--\u0026gt;Secret) message: \u0026#39;{{ template \u0026#34;test_wechat.html\u0026#34; . }}\u0026#39; # 发送消息模板的设定 # 一个inhibition规则是在与另一组匹配器匹配的警报存在的条件下， # 使匹配一组匹配器的警报失效的规则。两个警报必须具有一组相同的标签。 inhibit_rules: - source_match: severity: \u0026#39;critical\u0026#39; target_match: severity: \u0026#39;critical\u0026#39; equal: [\u0026#39;instance\u0026#39;] # 已经发送的告警通知匹配到target_match和target_match_re规则， # 再有新的告警规则如果满足source_match # 或者定义的匹配规则，并且已发送的告警与新产生的告警中equal定义的标签完全相同， # 则启动抑制机制，新的告警不会发送。 以下是官方文档配置翻译的文档.供参考具体详细的配置介绍.不细看先略过到下个步骤.\n路由块定义路由树中的节点及其子节点。如果未设置，则其可选配置参数将从其父节点继承。 每个警报都在配置的顶级路由处进入路由树，该路由树必须与所有警报匹配（即没有任何配置的匹配器）。 然后它遍历子节点。如果continue设置为false，则在第一个匹配的子级之后停止。 如果匹配节点上的continue为true，则警报将继续与后续同级节点匹配。 如果警报与节点的任何子节点不匹配（没有匹配的子节点，或者不存在），则基于当前节点的配置参数来处理警报。\n[ receiver: \u0026lt;string\u0026gt; ] # 用于将传入警报分组在一起的标签。 # 例如，针对cluster = A和alertname = LatencyHigh的多个警报将被分为一个组。 # 要按所有可能的标签进行汇总，请使用特殊值\u0026#39;...\u0026#39;作为唯一的标签名称，例如：group_by：[\u0026#39;...\u0026#39;] # 这样可以有效地完全禁用聚合，并按原样传递所有警报。 # 除非您的警报量非常低或上游通知系统执行自己的分组，否则这不太可能是您想要的。 [ group_by: \u0026#39;[\u0026#39; \u0026lt;labelname\u0026gt;, ... \u0026#39;]\u0026#39; ] # 警报是否应继续匹配后续的同级节点 [ continue: \u0026lt;boolean\u0026gt; | default = false ] # 警报必须满足的一组相等匹配器才能匹配节点。 match: [ \u0026lt;labelname\u0026gt;: \u0026lt;labelvalue\u0026gt;, ... ] # 警报必须满足以匹配节点的一组正则表达式匹配器。 match_re: [ \u0026lt;labelname\u0026gt;: \u0026lt;regex\u0026gt;, ... ] # 最初等待为一组警报发送通知的时间。 # 允许等待禁止警报到达或为同一组收集更多初始警报。 （通常〜0秒到几分钟。） [ group_wait: \u0026lt;duration\u0026gt; | default = 30s ] # 发送有关新警报的通知之前要等待的时间， # 该通知将添加到已为其发送了初始通知的一组警报中。 （通常〜5m或更多。） [ group_interval: \u0026lt;duration\u0026gt; | default = 5m ] # 如果已成功发送警报，则等待多长时间才能再次发送通知。 （通常〜3h或更长时间）。 [ repeat_interval: \u0026lt;duration\u0026gt; | default = 4h ] # 零个或多个子路由。 routes: [ - \u0026lt;route\u0026gt; ... ] \u0026lt;inhibit_rule\u0026gt; 当与另一组匹配器匹配的警报（源）存在时，禁止规则静默匹配匹配器集合的警报（目标）。 对于相等列表中的标签名称，目标和源警报必须具有相同的标签值。 从语义上讲，缺失的标签和空值的标签是一样的。 因此，如果源警报和目标警报中均缺少equal中列出的所有标签名称，则将应用抑制规则。 为了防止警报抑制自身，与规则的目标端和源端都匹配的警报不能被相同的警报（包括自身）抑制。 但是，我们建议选择目标和源匹配器时，警报不会同时匹配双方。这很容易推理，也不会引发这种特殊情况。\n# 必须在警报中完成的匹配项才能被禁用 target_match: [ \u0026lt;labelname\u0026gt;: \u0026lt;labelvalue\u0026gt;, ... ] target_match_re: [ \u0026lt;labelname\u0026gt;: \u0026lt;regex\u0026gt;, ... ] # 匹配器必须具有一个或多个警报才能使抑制生效 source_match: [ \u0026lt;labelname\u0026gt;: \u0026lt;labelvalue\u0026gt;, ... ] source_match_re: [ \u0026lt;labelname\u0026gt;: \u0026lt;regex\u0026gt;, ... ] # 必须在源警报和目标警报中具有相等值的标签才能使抑制生效 [ equal: \u0026#39;[\u0026#39; \u0026lt;labelname\u0026gt;, ... \u0026#39;]\u0026#39; ] # 接收者的唯一名称 name: \u0026lt;string\u0026gt; # 多个通知集成的配置(这里只列出三个其他请看官网) email_configs: [ - \u0026lt;email_config\u0026gt;, ... ] webhook_configs: [ - \u0026lt;webhook_config\u0026gt;, ... ] wechat_configs: [ - \u0026lt;wechat_config\u0026gt;, ... ] \u0026lt;email_config\u0026gt;\n# 是否通知已解决的警报 [ send_resolved: \u0026lt;boolean\u0026gt; | default = false ] # 要向其发送通知的电子邮件地址 to: \u0026lt;tmpl_string\u0026gt; # 发件人地址 [ from: \u0026lt;tmpl_string\u0026gt; | default = global.smtp_from ] # 发送电子邮件的SMTP主机 [ smarthost: \u0026lt;string\u0026gt; | default = global.smtp_smarthost ] # 要标识到SMTP服务器的主机名 [ hello: \u0026lt;string\u0026gt; | default = global.smtp_hello ] # SMTP身份验证信息. [ auth_username: \u0026lt;string\u0026gt; | default = global.smtp_auth_username ] [ auth_password: \u0026lt;secret\u0026gt; | default = global.smtp_auth_password ] [ auth_secret: \u0026lt;secret\u0026gt; | default = global.smtp_auth_secret ] [ auth_identity: \u0026lt;string\u0026gt; | default = global.smtp_auth_identity ] # SMTP TLS要求 [ require_tls: \u0026lt;bool\u0026gt; | default = global.smtp_require_tls ] # TLS配置 tls_config: [ \u0026lt;tls_config\u0026gt; ] # 电子邮件通知的HTML正文 [ html: \u0026lt;tmpl_string\u0026gt; | default = \u0026#39;{{ template \u0026#34;email.default.html\u0026#34; . }}\u0026#39; ] # 电子邮件通知的正文 [ text: \u0026lt;tmpl_string\u0026gt; ] # 更多标题电子邮件标题键/值对,重写通知实现以前设置的任何头 # 先前由通知实现设置的。 [ headers: { \u0026lt;string\u0026gt;: \u0026lt;tmpl_string\u0026gt;, ... } ] \u0026lt;webhook_config\u0026gt;\n# 是否通知已解决的警报 [ send_resolved: \u0026lt;boolean\u0026gt; | default = true ] # 要向其发送HTTP POST请求的终结点 url: \u0026lt;string\u0026gt; # http客户端的配置 [ http_config: \u0026lt;http_config\u0026gt; | default = global.http_config ] 微信json 格式\n{ \u0026#34;version\u0026#34;: \u0026#34;4\u0026#34;, \u0026#34;groupKey\u0026#34;: \u0026lt;string\u0026gt;, // 识别警报组的密钥（例如重复数据消除） \u0026#34;status\u0026#34;: \u0026#34;\u0026lt;resolved|firing\u0026gt;\u0026#34;, \u0026#34;receiver\u0026#34;: \u0026lt;string\u0026gt;, \u0026#34;groupLabels\u0026#34;: \u0026lt;object\u0026gt;, \u0026#34;commonLabels\u0026#34;: \u0026lt;object\u0026gt;, \u0026#34;commonAnnotations\u0026#34;: \u0026lt;object\u0026gt;, \u0026#34;externalURL\u0026#34;: \u0026lt;string\u0026gt;, // 指向AlertManager的反向链接 \u0026#34;alerts\u0026#34;: [ { \u0026#34;status\u0026#34;: \u0026#34;\u0026lt;resolved|firing\u0026gt;\u0026#34;, \u0026#34;labels\u0026#34;: \u0026lt;object\u0026gt;, \u0026#34;annotations\u0026#34;: \u0026lt;object\u0026gt;, \u0026#34;startsAt\u0026#34;: \u0026#34;\u0026lt;rfc3339\u0026gt;\u0026#34;, \u0026#34;endsAt\u0026#34;: \u0026#34;\u0026lt;rfc3339\u0026gt;\u0026#34;, \u0026#34;generatorURL\u0026#34;: \u0026lt;string\u0026gt; // 标识导致警报的实体 }, ... ] } \u0026lt;wechat_config\u0026gt;\n# 是否通知已解决的警报 [ send_resolved: \u0026lt;boolean\u0026gt; | default = false ] # 与微信API通信时要使用的API密钥 [ api_secret: \u0026lt;secret\u0026gt; | default = global.wechat_api_secret ] # 微信api网址 [ api_url: \u0026lt;string\u0026gt; | default = global.wechat_api_url ] # 用于身份验证的公司ID [ corp_id: \u0026lt;string\u0026gt; | default = global.wechat_api_corp_id ] # 微信API定义的API请求数据 [ message: \u0026lt;tmpl_string\u0026gt; | default = \u0026#39;{{ template \u0026#34;wechat.default.message\u0026#34; . }}\u0026#39; ] [ agent_id: \u0026lt;string\u0026gt; | default = \u0026#39;{{ template \u0026#34;wechat.default.agent_id\u0026#34; . }}\u0026#39; ] [ to_user: \u0026lt;string\u0026gt; | default = \u0026#39;{{ template \u0026#34;wechat.default.to_user\u0026#34; . }}\u0026#39; ] [ to_party: \u0026lt;string\u0026gt; | default = \u0026#39;{{ template \u0026#34;wechat.default.to_party\u0026#34; . }}\u0026#39; ] [ to_tag: \u0026lt;string\u0026gt; | default = \u0026#39;{{ template \u0026#34;wechat.default.to_tag\u0026#34; . }}\u0026#39; ] 搭建AlertManager服务 部署AlertManager可以通过官网https://prometheus.io/download/下载二进制文件. 这里演示docker部署AlertManager服务.其他方式请参考官网.\ndocker部署前,需要先完成配置文件的工作.\n我在/home/along/下创建了一个配置文件 touch alertmanager.yml 之后编辑 vi alertmanager.yml,具体看上文的配置介绍.\n启动容器:\ndocker run -d -p 9093:9093 --name alertmanagter -v /home/along/alertmanager.yml:/etc/alertmanager/alertmanager.yml quay.io/prometheus/alertmanager ``` 如果加载模板的话需要挂在一下模板目录(模板在下面有介绍): ```bash docker run -d -p 9093:9093 --name alert9093 -v /home/along/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml -v /home/along/alertmanager/template:/alertmanager/template quay.io/prometheus/alertmanager``` 服务端口9093,挂在刚才设定的配置文件. 访问IP:9093 可以查看AlertManager的web界面(类似prometheus的web界面). ## 定义Prometheus警报规则并引入配置 ### 配置警报规则文件 警报规则文件顾名思义,你想监控的指标何时需要警报. 例如设备温度超过多少要警告. 创建alert.yml,`touch alert.yml` ```yaml groups: - name: metricsUp # 定义这组告警的组名 rules: - alert: 监测对象挂了 # 警报名 可理解为警告的标题 expr: up{instance=\u0026#34;192.168.23.11:9090\u0026#34;} == 0 # 判断某值的规则 for: 5m # 上面规则持续5分钟为0进行告警,5分钟内触发是pending状态 labels: # 定义警报标签 severity: waring # 定义警报等级为 waring annotations: # 备注描述 summary: \u0026#34;设备: {{ $labels.instance }} 已断开5分钟\u0026#34; # 警告中呈现的具体信息可以写在这里 Prometheus引入配置 警报规则是Prometheus引入的文件. Prometheus引入文件的方式:\nrule_files: - \u0026#34;/usr/local/prometheus/alert.yml\u0026#34; # 引入定义的警报规则 测试警报 我们上面配置好之后,需要各服务已经读取到相关配置文件了之后开始测试. 上面的规则是监测某个监控节点断开,手动断开一个节点.然后5分钟之后观察是否得到警报.\n当由警报时收到的邮件为:\n访问AlertManager页面也可以看到告警信息:\n这里图例有些是演示用,与其他可能不存在关系.(不是同时截图的业务,图片仅供参考)\n静默操作演示 如果有些警报是我们调试的,例如我这里设置值偏低来演示ping值警报,如果我们测时候不想看到警报,可以通过静默来不让他总是发送警报.\n之后点击create 就可以创建此警报的静默操作.\n也可以通过正则,警报组名,实例等来静默各种警报.\n定义通知模板 默认模板我们看到了,他是默认的一个告警模板,在我们测试时候可以使用,如果面向用户使用者似乎这个模板不太友好. 而且在面对多数据展示时,此模板也显得不是很清晰.\n通过定义了模板,在触发不同警报可以通过AlertManager中,receivers选项来选择模板.\ntemplates: - \u0026#39;template/*.tmpl\u0026#39; # 定义模板中心 receivers: - name: \u0026#39;email\u0026#39; # 警报 email_configs: # 邮箱配置 - to: \u0026#39;******@163.com\u0026#39; # 接收警报的email配置 html: \u0026#39;{{ template \u0026#34;test.html\u0026#34; . }}\u0026#39; # 设定邮箱的内容模板 headers: { Subject: \u0026#34;[WARN] 报警邮件\u0026#34;} # 接收邮件的标题 这段配置中,可以看到警报通过test.html作为模板的.他的位置在上面的定义中可以看到是 template/test.html (如果模板定制有错误,警报可能为空板,不能正常显示内容) 现在来配置这个test.html\n在 /template/ 下创建 touch test.html 模板基于Go的模板系统,详情点击这里 如果不想深入连接可以结合默认模板模仿一下语法,默认模板点击这里\n{{ define \u0026#34;email.demo.html\u0026#34; }} \u0026lt;pre\u0026gt; \u0026lt;table border=\u0026#34;1\u0026#34; cellspacing=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;报警名\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;设备\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;发现时间\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;详情\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; {{ range $i, $alert := .Alerts }} \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ index $alert.Labels \u0026#34;alertname\u0026#34; }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $alert.Labels.instance }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $alert.StartsAt.Format \u0026#34;2006-01-02 15:04:05\u0026#34; }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $alert.Annotations.summary }}\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; {{ end }} \u0026lt;/table\u0026gt; \u0026lt;/pre\u0026gt; {{ end }} 模板保存后,测试邮件接收情况: 模板时区问题 Prometheus中所有时间都是UTC时间,为了便于我们展示友好时间(东八区),我们需要计算一下时间. 修改模板时间:\n\u0026lt;td\u0026gt;{{ ($alert.StartsAt.Add 28800e9).Format \u0026#34;2006-01-02 15:04:05\u0026#34; }}\u0026lt;/td\u0026gt; 参考 ishenping songjiayang prometheus.io\n","permalink":"http://localhost:1313/aLong/posts/prometheus-alertmanager%E8%AD%A6%E5%91%8A%E7%AE%A1%E7%90%86%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/","summary":"\u003ch2 id=\"alertmanager\"\u003eAlertManager\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAlertManager处理由客户端应用程序（如Prometheus服务器）发送的警报。\n它负责重复数据消除、分组，并将它们路由到正确的接收器集成（如电子邮件、PagerDuty或OpsGenie）。\n它还负责消除和抑制警报。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e通过翻译官方文档可以了解到,AlertManager是负责为Prometheus(本身不会发送警报)发送警报的工具.\nAlertManager不是简单发送警报,可以消除重复警报,分组,抑制警报功能.并支持多接收器.\u003c/p\u003e\n\u003cp\u003ePrometheus-\u0026gt;触发定义的警报规则-\u0026gt;AlertManager-\u0026gt;发送警报到指定通知渠道.\u003c/p\u003e\n\u003cp\u003e为了能让Prometheus发送警报,我们需要:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e搭建AlertManager服务.\u003c/li\u003e\n\u003cli\u003e定义AlertManager通知配置.\u003c/li\u003e\n\u003cli\u003e定义Prometheus警报规则并引入.\u003c/li\u003e\n\u003cli\u003e测试警报.\u003c/li\u003e\n\u003cli\u003e定义通知模板.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"定义alertmanager通知配置\"\u003e定义AlertManager通知配置\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eglobal\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esmtp_smarthost\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;smtp.163.com:25\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e               \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 邮箱smtp服务器代理\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esmtp_from\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;shitu-0071@163.com\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e                 \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 发送邮箱名称\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eresolve_timeout\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e5m                            \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 处理超时时间，默认为5min\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esmtp_auth_username\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;shitu-0071@163.com\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e        \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 邮箱帐户\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esmtp_auth_password\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;******\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e                    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 邮箱授权码(注意是授权码,不知道自己查一下)\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ewechat_api_url\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;https://qyapi.weixin.qq.com/cgi-bin/\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e   \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 企业微信地址\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 定义模板信心\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etemplates\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#ba2121\"\u003e\u0026#39;template/*.tmpl\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 定义路由树信息\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eroute\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e   \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003egroup_by\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;alertname\u0026#39;\u003c/span\u003e,\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;cluster\u0026#39;\u003c/span\u003e,\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;service\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#bbb\"\u003e        \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 报警分组依据,设置后会按照设定值分组,例如instance,alertname等\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                                                       \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 同标签警告会在作为一组警报发送\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003egroup_wait\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e10s                                     \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 组内等待时间,触发阈值后,XXs后发送本组警报\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003egroup_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e10s                                 \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 每个组之前间隔时间(group_by设定的值划分的组)\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003erepeat_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e1m                                 \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 重复发送警报的周期\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e(对于email配置中，此项不可以设置过低，否则将会由于邮件发送太多频繁，被smtp服务器拒绝)\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereceiver\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e                                    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 发送警报的接收者的名称\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e                                                       \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 以下receivers name的名称\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eroutes\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ematch\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 普通匹配\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eserverity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ecritical      \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 警告级别critical\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereceiver\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eemail            \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 通过邮件发送\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ematch_re\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                   \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 正则匹配\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eseverity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e^(warning)$    \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 匹配警告级别为warning的\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereceiver\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ewechat           \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 通过微信发送告警\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ereceiver\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ealong            \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 定义接收者\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ematch\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 匹配\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eseverity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003etest           \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 等级为test\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 定义警报接收者信息\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereceivers\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ename\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e               \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 警报\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eemail_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e              \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 邮箱配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eto\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;******@163.com\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 接收警报的email配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ehtml\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;{{ template \u0026#34;test.html\u0026#34; . }}\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 设定邮箱的内容模板\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eheaders\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e{\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eSubject\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;[WARN] 报警邮件\u0026#34;\u003c/span\u003e}\u003cspan style=\"color:#bbb\"\u003e     \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 接收邮件的标题\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ewebhook_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# webhook配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eurl\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;http://127.0.0.1:5001\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003esend_resolved\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etrue\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ename\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;wechat\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ewechat_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 企业微信报警配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esend_resolved\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etrue\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eto_party\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;1\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 接收组的id\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eagent_id\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;1000002\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# (企业微信--\u0026gt;自定应用--\u0026gt;AgentId)\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ecorp_id\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;******\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 企业信息(我的企业--\u0026gt;CorpId[在底部])\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eapi_secret\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;******\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 企业微信(企业微信--\u0026gt;自定应用--\u0026gt;Secret)\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emessage\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;{{ template \u0026#34;test_wechat.html\u0026#34; . }}\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 发送消息模板的设定\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 一个inhibition规则是在与另一组匹配器匹配的警报存在的条件下，\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 使匹配一组匹配器的警报失效的规则。两个警报必须具有一组相同的标签。 \u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003einhibit_rules\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_match\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e     \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eseverity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;critical\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_match\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e     \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eseverity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;critical\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eequal\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;instance\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 已经发送的告警通知匹配到target_match和target_match_re规则，\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 再有新的告警规则如果满足source_match\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 或者定义的匹配规则，并且已发送的告警与新产生的告警中equal定义的标签完全相同，\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 则启动抑制机制，新的告警不会发送。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003cp\u003e以下是官方文档配置翻译的文档.供参考具体详细的配置介绍.不细看先略过到下个步骤.\u003c/p\u003e","title":"Prometheus-AlertManager警告管理搭建与配置"},{"content":"启用组策略gpedit.msc 家庭版很多功能不能使用,凑巧用的就是家庭版. 还想使用gpedit.msc来关闭windows10的更新. 找到一个可行的方法.\n需要创建一个脚本. 如果你没有编辑器,那么可以创建一个文本文档. 复制下面一段到本文中. @echo off pushd \u0026#34;%~dp0\u0026#34; dir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum \u0026gt;List.txt dir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum \u0026gt;\u0026gt;List.txt for /f %%i in (\u0026#39;findstr /i . List.txt 2^\u0026gt;nul\u0026#39;) do dism /online /norestart /add-package:\u0026#34;C:\\Windows\\servicing\\Packages\\%%i\u0026#34; pause 如果编辑器直接复制一个文档另存到XX.cmd 即可. 如果是文本文档那么就是把后缀的.txt改成.cmd. 管理员身份运行这个脚本.等他走完会退出,win+r 即可使用gpedit.msc了. 美滋滋!~ 禁用windows10更新 win+r 输入gpedit.msc. “本地计算机策略”-“计算机配置”-“管理模板”-“Windows组件”-“Windows 更新”-“配置自动更新”. 点击配置自动更新设置为禁用 ","permalink":"http://localhost:1313/aLong/posts/windows10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%90%AF%E7%94%A8%E7%BB%84%E7%AD%96%E7%95%A5gpedit-msc/","summary":"\u003ch2 id=\"启用组策略gpeditmsc\"\u003e启用组策略gpedit.msc\u003c/h2\u003e\n\u003cp\u003e家庭版很多功能不能使用,凑巧用的就是家庭版. 还想使用gpedit.msc来关闭windows10的更新.\n找到一个可行的方法.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e需要创建一个脚本. 如果你没有编辑器,那么可以创建一个文本文档.\u003c/li\u003e\n\u003cli\u003e复制下面一段到本文中.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e@echo off\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000\"\u003epushd\u003c/span\u003e \u003cspan style=\"color:#ba2121\"\u003e\u0026#34;%~dp0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edir /b C:\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\W\u003c/span\u003eindows\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\s\u003c/span\u003eervicing\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\P\u003c/span\u003eackages\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\M\u003c/span\u003eicrosoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum \u0026gt;List.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edir /b C:\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\W\u003c/span\u003eindows\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\s\u003c/span\u003eervicing\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\P\u003c/span\u003eackages\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\M\u003c/span\u003eicrosoft-Windows-GroupPolicy-ClientTools-Package~3*.mum \u0026gt;\u0026gt;List.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003efor\u003c/span\u003e /f %%i in \u003cspan style=\"color:#666\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;findstr /i . List.txt 2^\u0026gt;nul\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#008000;font-weight:bold\"\u003edo\u003c/span\u003e dism /online /norestart /add-package:\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;C:\\Windows\\servicing\\Packages\\%%i\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epause\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003e如果编辑器直接复制一个文档另存到XX.cmd 即可. 如果是文本文档那么就是把后缀的.txt改成.cmd.\u003c/li\u003e\n\u003cli\u003e管理员身份运行这个脚本.等他走完会退出,win+r 即可使用gpedit.msc了. 美滋滋!~\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"禁用windows10更新\"\u003e禁用windows10更新\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003ewin+r 输入gpedit.msc.\u003c/li\u003e\n\u003cli\u003e“本地计算机策略”-“计算机配置”-“管理模板”-“Windows组件”-“Windows 更新”-“配置自动更新”. 点击配置自动更新设置为\u003cem\u003e禁用\u003c/em\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"windows10家庭版启用组策略gpedit.msc"},{"content":"整体配置 prometueus.yml 配置文件注解与说明\nglobal: # 全局配置 scrape_interval: 15s # 默认值为 1m，用于设置每次数据收集的间隔 scrape_timeout: 10s # 默认10s,收集超时时间 evaluation_interval: 15s # 记录规则/告警的执行周期 默认1m external_labels: # 时间序列和警告与外部通信(远程存储/警报灯)时用的外部标签 monitor: \u0026#39;ctmonitor\u0026#39; rule_files: # 指定告警规则文件\u0026amp;记录文件 - \u0026#34;/usr/local/prometheus/rules.yml\u0026#34; alerting: # 告警管理配置 alert_relable_configs: # 修改告警内容 - alertmanagers: # 告警管理起配置 - static_configs: # 静态配置 - targets: # 警告器地址 - 172.16.23.12:9093 # 用于配置 scrape 的 endpoint 配置需要 scrape 的 targets 以及相应的参数 # 抓取(pull)，即监控目标配置。默认只有主机本身的监控配置 scrape_configs: # 抓取配置选项 - job_name: prometheus # 默认情况下分配给刮削度量的作业名称。 scrape_interval: 5s # 从这项工作中获取目标的频率。 scrape_timeout: 3s # 每次获取超时时间 honor_timestamps: true # 默认false, 在获取时是否使用当前的时间戳 metrics_path: /metrics # 从目标获取度量的http资源路径。 scheme: http # static_configs: # 为此作业标记的静态配置目标的列表。 - targets: # 目监控标 - 172.16.23.12:9090 # 设备地址+端口 - job_name: \u0026#39;snmp-10.0.0.1\u0026#39; scrape_interval: 30s scrape_timeout: 20s static_configs: - targets: - 10.0.0.1 # SNMP设备,端口默认5060 metrics_path: /snmp params: module: [if_mib] relabel_configs: # 重定义标签 - source_labels: [__address__] # 需要修改的标签 target_label: __param_target # 改成的标签 - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: 172.16.23.12:9117 各部分详解 部分官方文档的译文\n官方文档中,使用了通用占位符来解释设定值的定义.\n通用占位符由下面定义：\n\\\u0026lt;boolean\\\u0026gt;: 一个布尔值，包括true或者false. \\\u0026lt;duration\\\u0026gt;: 持续时间，与正则表达式[0-9]+(ms|smhdwy)匹配 \\\u0026lt;labelname\\\u0026gt;: 一个与正则表达式[a-zA-Z_][a-zA-Z0-9_]*匹配的字符串 \\\u0026lt;labelvalue\\\u0026gt;: 一个为unicode字符串 \\\u0026lt;filename\\\u0026gt;: 当前工作目录下的有效路径 \\\u0026lt;host\\\u0026gt;: 一个包含主机名或者IP地址，并且可以带上一个非必需的端口号的有效字符串 \\\u0026lt;path\\\u0026gt;: 一个有效的URL路径 \\\u0026lt;scheme\\\u0026gt;: 一个可以是http或者https的字符串 \\\u0026lt;string\\\u0026gt;: 一个正则表达式字符串 scrape_configs 监控配置\n\u0026lt;scrape_configs\u0026gt; 配置采集目标 1、根据配置的任务（job）以http/s周期性的收刮（scrape/pull） 2、指定目标（target）上的指标（metric）。目标（target） 3、可以以静态方式或者自动发现方式指定。Prometheus将收刮（scrape）的指标（metric）保存在本地或者远程存储上。\n\u0026lt;scrape_config\u0026gt;部分指定一组描述如何刮除它们的目标和参数。 在一般情况下，一个scrape配置指定单个作业。 在高级配置中，这可能会改变。 目标可以通过\u0026lt;static_configs\u0026gt;参数静态配置，也可以使用其中一种支持的服务发现机制动态发现。 此外，\u0026lt;relabel_configs\u0026gt;允许在抓取之前对任何目标及其标签进行高级修改。 其中\u0026lt;job_name\u0026gt;在所有scrape配置中必须是唯一的。\n# 默认分配给已抓取指标的job名称。 job_name: \u0026lt;job_name\u0026gt; # 从job中抓取目标的频率. [ scrape_interval: \u0026lt;duration\u0026gt; | default = \u0026lt;global_config.scrape_interval\u0026gt; ] # 抓取此job时，每次抓取超时时间. [ scrape_timeout: \u0026lt;duration\u0026gt; | default = \u0026lt;global_config.scrape_timeout\u0026gt; ] # 从目标获取指标的HTTP资源路径. [ metrics_path: \u0026lt;path\u0026gt; | default = /metrics ] # honor_labels控制Prometheus如何处理已经存在于已抓取数据中的标签与Prometheus将附加服务器端的标签之间的冲突（\u0026#34;job\u0026#34;和\u0026#34;instance\u0026#34;标签，手动配置的目标标签以及服务发现实现生成的标签）。 # # 如果honor_labels设置为\u0026#34;true\u0026#34;，则通过保留已抓取数据的标签值并忽略冲突的服务器端标签来解决标签冲突。 # # 如果honor_labels设置为\u0026#34;false\u0026#34;，则通过将已抓取数据中的冲突标签重命名为\u0026#34;exported_ \u0026lt;original-label\u0026gt;\u0026#34;（例如\u0026#34;exported_instance\u0026#34;，\u0026#34;exported_job\u0026#34;）然后附加服务器端标签来解决标签冲突。 这对于联合等用例很有用，其中应保留目标中指定的所有标签。 # # 请注意，任何全局配置的\u0026#34;external_labels\u0026#34;都不受此设置的影响。 在与外部系统通信时，它们始终仅在时间序列尚未具有给定标签时应用，否则将被忽略。 # 当设置为 true, 以拉取数据为准，否则以服务配置为准 [ honor_labels: \u0026lt;boolean\u0026gt; | default = false ] # 配置用于请求的协议方案. [ scheme: \u0026lt;scheme\u0026gt; | default = http ] # 可选的HTTP URL参数. params: [ \u0026lt;string\u0026gt;: [\u0026lt;string\u0026gt;, ...] ] # 使用配置的用户名和密码在每个scrape请求上设置`Authorization`标头。 password和password_file是互斥的。 basic_auth: [ username: \u0026lt;string\u0026gt; ] [ password: \u0026lt;secret\u0026gt; ] [ password_file: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个scrape请求上设置`Authorization`标头。 它`bearer_token_file`和是互斥的。 [ bearer_token: \u0026lt;secret\u0026gt; ] # 使用配置的承载令牌在每个scrape请求上设置`Authorization`标头。 它`bearer_token`和是互斥的。 [ bearer_token_file: /path/to/bearer/token/file ] # 配置scrape请求的TLS设置. tls_config: [ \u0026lt;tls_config\u0026gt; ] # 可选的代理URL. [ proxy_url: \u0026lt;string\u0026gt; ] # Azure服务发现配置列表. azure_sd_configs: [ - \u0026lt;azure_sd_config\u0026gt; ... ] # Consul服务发现配置列表. consul_sd_configs: [ - \u0026lt;consul_sd_config\u0026gt; ... ] # DNS服务发现配置列表。 dns_sd_configs: [ - \u0026lt;dns_sd_config\u0026gt; ... ] # EC2服务发现配置列表。 ec2_sd_configs: [ - \u0026lt;ec2_sd_config\u0026gt; ... ] # OpenStack服务发现配置列表。 openstack_sd_configs: [ - \u0026lt;openstack_sd_config\u0026gt; ... ] # 文件服务发现配置列表。 file_sd_configs: [ - \u0026lt;file_sd_config\u0026gt; ... ] # GCE服务发现配置列表。 gce_sd_configs: [ - \u0026lt;gce_sd_config\u0026gt; ... ] # Kubernetes服务发现配置列表。 kubernetes_sd_configs: [ - \u0026lt;kubernetes_sd_config\u0026gt; ... ] # Marathon服务发现配置列表。 marathon_sd_configs: [ - \u0026lt;marathon_sd_config\u0026gt; ... ] # AirBnB的神经服务发现配置列表。 nerve_sd_configs: [ - \u0026lt;nerve_sd_config\u0026gt; ... ] # Zookeeper Serverset服务发现配置列表。 serverset_sd_configs: [ - \u0026lt;serverset_sd_config\u0026gt; ... ] # Triton服务发现配置列表。 triton_sd_configs: [ - \u0026lt;triton_sd_config\u0026gt; ... ] # 此job的标记静态配置目标列表。 static_configs: [ - \u0026lt;static_config\u0026gt; ... ] # 目标重新标记配置列表。 relabel_configs: [ - \u0026lt;relabel_config\u0026gt; ... ] # 度量标准重新配置列表。 metric_relabel_configs: [ - \u0026lt;relabel_config\u0026gt; ... ] # 对每个将被接受的样本数量的每次抓取限制。 # 如果在度量重新标记后存在超过此数量的样本，则整个抓取将被视为失败。 0表示没有限制。 [ sample_limit: \u0026lt;int\u0026gt; | default = 0 ] rule_files 记录规则,编写的记录规则是定义一些常用计算规则.这些规则会存储到数据中. 告警的警报规则文件需要在这里引入.\nrule_files: [ - \u0026lt;filepath_glob\u0026gt; ... ] alerting Alertmanager相关配置\nalerting: alert_relabel_configs: [ - \u0026lt;relabel_config\u0026gt; ... ] alertmanagers: [ - \u0026lt;alertmanager_config\u0026gt; ... ] \u0026lt;alertmanager_config\u0026gt; alertmanager_config部分指定Prometheus服务器向其发送警报的Alertmanager实例。 它还提供参数以配置如何与这些Alertmanagers进行通信。 Alertmanagers可以通过static_configs参数静态配置，也可以使用其中一种支持的服务发现机制动态发现。 此外，relabel_configs允许从发现的实体中选择Alertmanagers，并对使用的API路径提供高级修改，该路径通过__alerts_path__标签公开。\n# 推送警报时按目标Alertmanager超时。 [ timeout: \u0026lt;duration\u0026gt; | default = 10s ] # 将推送HTTP路径警报的前缀。 [ path_prefix: \u0026lt;path\u0026gt; | default = / ] # 配置用于请求的协议方案。 [ scheme: \u0026lt;scheme\u0026gt; | default = http ] # 使用配置的用户名和密码在每个请求上设置`Authorization`标头。 password和password_file是互斥的。 basic_auth: [ username: \u0026lt;string\u0026gt; ] [ password: \u0026lt;string\u0026gt; ] [ password_file: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个请求上设置“Authorization”标头。 它与`bearer_token_file`互斥。 [ bearer_token: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个请求上设置“Authorization”标头。 它与`bearer_token`互斥。 [ bearer_token_file: /path/to/bearer/token/file ] # 配置scrape请求的TLS设置。 tls_config: [ \u0026lt;tls_config\u0026gt; ] # 可选的代理URL。 [ proxy_url: \u0026lt;string\u0026gt; ] # Azure服务发现配置列表。 azure_sd_configs: [ - \u0026lt;azure_sd_config\u0026gt; ... ] # Consul服务发现配置列表。 consul_sd_configs: [ - \u0026lt;consul_sd_config\u0026gt; ... ] # DNS服务发现配置列表。 dns_sd_configs: [ - \u0026lt;dns_sd_config\u0026gt; ... ] # ECS服务发现配置列表。 ec2_sd_configs: [ - \u0026lt;ec2_sd_config\u0026gt; ... ] # 文件服务发现配置列表。 file_sd_configs: [ - \u0026lt;file_sd_config\u0026gt; ... ] # GCE服务发现配置列表。 gce_sd_configs: [ - \u0026lt;gce_sd_config\u0026gt; ... ] # K8S服务发现配置列表。 kubernetes_sd_configs: [ - \u0026lt;kubernetes_sd_config\u0026gt; ... ] # Marathon服务发现配置列表。 marathon_sd_configs: [ - \u0026lt;marathon_sd_config\u0026gt; ... ] # AirBnB\u0026#39;s Nerve 服务发现配置列表。 nerve_sd_configs: [ - \u0026lt;nerve_sd_config\u0026gt; ... ] # Zookepper服务发现配置列表。 serverset_sd_configs: [ - \u0026lt;serverset_sd_config\u0026gt; ... ] # Triton服务发现配置列表。 triton_sd_configs: [ - \u0026lt;triton_sd_config\u0026gt; ... ] # 标记为静态配置的Alertmanagers列表。 static_configs: [ - \u0026lt;static_config\u0026gt; ... ] # Alertmanager重新配置列表。 relabel_configs: [ - \u0026lt;relabel_config\u0026gt; ... ] remote_write 云端写入数据 \u0026lt;remote_write\u0026gt; write_relabel_configs是在将样本发送到远程端点之前应用于样本的重新标记。 在外部标签之后应用写入重新标记。 这可用于限制发送的样本。\n有一个如何使用此功能的小型演示。\n# 要发送样本的端点的URL. url: \u0026lt;string\u0026gt; # 对远程写端点的请求超时。 [ remote_timeout: \u0026lt;duration\u0026gt; | default = 30s ] # 远程写入重新标记配置列表。 write_relabel_configs: [ - \u0026lt;relabel_config\u0026gt; ... ] # 使用配置的用户名和密码在每个远程写请求上设置`Authorization`标头.password和password_file是互斥的。 basic_auth: [ username: \u0026lt;string\u0026gt; ] [ password: \u0026lt;string\u0026gt; ] [ password_file: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个远程写请求上设置`Authorization`头。 它与`bearer_token_file`互斥。 [ bearer_token: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个远程写请求上设置`Authorization`头。 它与`bearer_token`互斥。 [ bearer_token_file: /path/to/bearer/token/file ] # 配置远程写入请求的TLS设置。 tls_config: [ \u0026lt;tls_config\u0026gt; ] # 可选的代理URL。 [ proxy_url: \u0026lt;string\u0026gt; ] # 配置用于写入远程存储的队列。 queue_config: # 在我们开始删除之前每个分片缓冲的样本数。 [ capacity: \u0026lt;int\u0026gt; | default = 10000 ] # 最大分片数，即并发数。 [ max_shards: \u0026lt;int\u0026gt; | default = 1000 ] # 最小分片数，即并发数。 [ min_shards: \u0026lt;int\u0026gt; | default = 1 ] # 每次发送的最大样本数。 [ max_samples_per_send: \u0026lt;int\u0026gt; | default = 100] # 样本在缓冲区中等待的最长时间。 [ batch_send_deadline: \u0026lt;duration\u0026gt; | default = 5s ] # 在可恢复错误上重试批处理的最大次数。 [ max_retries: \u0026lt;int\u0026gt; | default = 3 ] # 初始重试延迟。 每次重试都会加倍。 [ min_backoff: \u0026lt;duration\u0026gt; | default = 30ms ] # 最大重试延迟。 [ max_backoff: \u0026lt;duration\u0026gt; | default = 100ms ] remote_read 云端读取数据 \u0026lt;remote_read\u0026gt;\n# 要发送样本的端点的URL. url: \u0026lt;string\u0026gt; # 可选的匹配器列表，必须存在于选择器中以查询远程读取端点。 required_matchers: [ \u0026lt;labelname\u0026gt;: \u0026lt;labelvalue\u0026gt; ... ] # 对远程读取端点的请求超时。 [ remote_timeout: \u0026lt;duration\u0026gt; | default = 1m ] # 本地存储应该有完整的数据。 [ read_recent: \u0026lt;boolean\u0026gt; | default = false ] # 使用配置的用户名和密码在每个远程写请求上设置`Authorization`标头.password和password_file是互斥的。 basic_auth: [ username: \u0026lt;string\u0026gt; ] [ password: \u0026lt;string\u0026gt; ] [ password_file: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个远程写请求上设置`Authorization`头。 它与`bearer_toke_filen`互斥。 [ bearer_token: \u0026lt;string\u0026gt; ] # 使用配置的承载令牌在每个远程写请求上设置`Authorization`头。 它与`bearer_token`互斥。 [ bearer_token_file: /path/to/bearer/token/file ] # 配置远程写入请求的TLS设置。 tls_config: [ \u0026lt;tls_config\u0026gt; ] # 可选的代理URL。 [ proxy_url: \u0026lt;string\u0026gt; ] relabel_configs 用来重新打标记,修改标签.\n请注意labels 的取名格式: 标签label名称可以包含ASCII字母、数字和下划线。它们必须匹配正则表达式[a-zA-Z_][a-zA-Z0-9_]*。带有_下划线的标签名称被保留内部使用。\n标签labels值包含任意的Unicode码。\n\u0026lt;relabel_configs\u0026gt; Prometheus 重新标签 允许在采集之前对任何目标及其标签进行修改\n• 重命名标签名 • 删除标签 • 过滤目标\naction：重新标签动作\nreplace：默认，通过regex匹配source_label的值，使用replacement来引用表达式匹配的分组 keep：删除regex与连接不匹配的目标 source_labels drop：删除regex与连接匹配的目标 source_labels labeldrop：删除regex匹配的标签 labelkeep：删除regex不匹配的标签 hashmod：设置target_label为modulus连接的哈希值source_labels labelmap：匹配regex所有标签名称。然后复制匹配标签的值进行分组，replacement分组引用（${1},${2},…）替代 relable_configs: # 源标签从现有标签中选择值。 它们的内容使用已配置的分隔符进行连接，并与已配置的正则表达式进行匹配，以进行替换，保留和删除操作。 [ source_labels: \u0026#39;[\u0026#39; \u0026lt;labelname\u0026gt; [, ...] \u0026#39;]\u0026#39; ] # 分隔符放置在连接的源标签值之间。 [ separator: \u0026lt;string\u0026gt; | default = ; ] # 在替换操作中将结果值写入的标签。 # 替换操作是强制性的。 正则表达式捕获组可用。 [ target_label: \u0026lt;labelname\u0026gt; ] # 与提取的值匹配的正则表达式。 [ regex: \u0026lt;regex\u0026gt; | default = (.*) ] # 采用源标签值的散列的模数。 [ modulus: \u0026lt;uint64\u0026gt; ] # 如果正则表达式匹配，则执行正则表达式替换的替换值。 正则表达式捕获组可用。 [ replacement: \u0026lt;string\u0026gt; | default = $1 ] # 基于正则表达式匹配执行的操作。 [ action: \u0026lt;relabel_action\u0026gt; | default = replace ] ","permalink":"http://localhost:1313/aLong/posts/prometueus-yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/","summary":"\u003ch2 id=\"整体配置\"\u003e整体配置\u003c/h2\u003e\n\u003cp\u003eprometueus.yml 配置文件注解与说明\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eglobal\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                       \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 全局配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e15s       \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 默认值为 1m，用于设置每次数据收集的间隔\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_timeout\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e10s        \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 默认10s,收集超时时间\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eevaluation_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e15s   \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 记录规则/告警的执行周期 默认1m\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eexternal_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e            \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 时间序列和警告与外部通信(远程存储/警报灯)时用的外部标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emonitor\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;ctmonitor\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003erule_files\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                   \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 指定告警规则文件\u0026amp;记录文件\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#ba2121\"\u003e\u0026#34;/usr/local/prometheus/rules.yml\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ealerting\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                     \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 告警管理配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ealert_relable_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 修改告警内容\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ealertmanagers\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e              \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 告警管理起配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003estatic_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e           \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 静态配置\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etargets\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 警告器地址\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e172.16.23.12\u003c/span\u003e:\u003cspan style=\"color:#666\"\u003e9093\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 用于配置 scrape 的 endpoint  配置需要 scrape 的 targets 以及相应的参数\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 抓取(pull)，即监控目标配置。默认只有主机本身的监控配置 \u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e               \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 抓取配置选项\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ejob_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eprometheus       \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 默认情况下分配给刮削度量的作业名称。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e5s        \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 从这项工作中获取目标的频率。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_timeout\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e3s         \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 每次获取超时时间\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ehonor_timestamps\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etrue\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 默认false, 在获取时是否使用当前的时间戳\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emetrics_path\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e/metrics     \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 从目标获取度量的http资源路径。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escheme\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ehttp               \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# \u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003estatic_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e             \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 为此作业标记的静态配置目标的列表。\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etargets\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 目监控标\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e172.16.23.12\u003c/span\u003e:\u003cspan style=\"color:#666\"\u003e9090\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e       \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 设备地址+端口\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ejob_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;snmp-10.0.0.1\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e30s\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_timeout\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e20s\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003estatic_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etargets\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e10.0.0.1\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e                  \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# SNMP设备,端口默认5060\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emetrics_path\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e/snmp\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eparams\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emodule\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[if_mib]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003erelabel_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e                \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 重定义标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[__address__] \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 需要修改的标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e__param_target \u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 改成的标签\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[__param_target]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003einstance\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e__address__\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereplacement\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e172.16.23.12\u003c/span\u003e:\u003cspan style=\"color:#666\"\u003e9117\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"各部分详解\"\u003e各部分详解\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003e部分官方文档的译文\u003c/p\u003e","title":"Prometueus.yml配置文件说明"},{"content":"curl: (3) Illegal characters found in URL 昨天在服务器上执行一个脚本,在linux新建的sh,把本地编辑器的内容粘贴到文件里. 结果执行的时候报错了. 问题就是 curl:(3)Illegal characters found in URL\n看着一脸懵逼啊!~\ngoogle了一下,看到几个方法.其中一个我感觉还不错:\n首先vi 进入sh脚本 vi XXX.sh :set ff? # 这里我现实的是 fileforma=dos 我这里显示是这个 :set fileformat=unix # 把fileforma 设置好 :wq 通过这个方式,可以解决这个问题,网上也有人提出其他方法把\\r\\n 手动替换\\n的.\n参考: http://www.itbiancheng.com/linux/4885.html\n","permalink":"http://localhost:1313/aLong/posts/curl-3-illegal-characters-found-in-url/","summary":"\u003ch3 id=\"curl-3-illegal-characters-found-in-url\"\u003ecurl: (3) Illegal characters found in URL\u003c/h3\u003e\n\u003cp\u003e昨天在服务器上执行一个脚本,在linux新建的sh,把本地编辑器的内容粘贴到文件里.\n结果执行的时候报错了. 问题就是 curl:(3)Illegal characters found in URL\u003c/p\u003e\n\u003cp\u003e看着一脸懵逼啊!~\u003c/p\u003e\n\u003cp\u003egoogle了一下,看到几个方法.其中一个我感觉还不错:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e首先vi 进入sh脚本 \u003ccode\u003evi XXX.sh\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:set ff?\u003c/code\u003e    # 这里我现实的是 \u003cem\u003efileforma=dos\u003c/em\u003e 我这里显示是这个\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:set fileformat=unix\u003c/code\u003e # 把fileforma 设置好\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:wq\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e通过这个方式,可以解决这个问题,网上也有人提出其他方法把\\r\\n 手动替换\\n的.\u003c/p\u003e\n\u003cp\u003e参考:\n\u003ca href=\"http://www.itbiancheng.com/linux/4885.html\"\u003ehttp://www.itbiancheng.com/linux/4885.html\u003c/a\u003e\u003c/p\u003e","title":"curl: (3) Illegal characters found in URL"},{"content":"yml 语法 最近经常配置一些服务，发现大部分都是yml类型文件。小记一下。\n规则 大小写敏感 缩进表示层级 注释 # 结构： 对象： ：符号\nname: admin 数组： - 符号\nuser: - name: admin - height: 178 - age: 30 字符串： 默认无引号，内部含有空格或特殊符号需要加''\nname: admin desc: \u0026#39;he was cool\u0026#39; null： ~\nvalue: ~ 层级依靠缩进：\njob: - jobconfig: name: \u0026#39;snmp-sw01\u0026#39; - target: - 192.168.1.88 ","permalink":"http://localhost:1313/aLong/posts/yaml%E8%A7%84%E5%88%99/","summary":"\u003ch2 id=\"yml-语法\"\u003eyml 语法\u003c/h2\u003e\n\u003cp\u003e最近经常配置一些服务，发现大部分都是yml类型文件。小记一下。\u003c/p\u003e\n\u003ch3 id=\"规则\"\u003e规则\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e大小写敏感\u003c/li\u003e\n\u003cli\u003e缩进表示层级\u003c/li\u003e\n\u003cli\u003e注释 #\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"结构\"\u003e结构：\u003c/h3\u003e\n\u003cp\u003e对象： ：符号\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ename\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eadmin\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e数组： - 符号\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003euser\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ename\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eadmin\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eheight\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e178\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eage\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e30\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字符串： 默认无引号，内部含有空格或特殊符号需要加''\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ename\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003eadmin\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003edesc\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;he was cool\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003enull： ~\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003evalue\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e~\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e层级依靠缩进：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ejob\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ejobconfig\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ename\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;snmp-sw01\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e192.168.1.88\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"yaml规则"},{"content":"可视化图表 Grafana是一个通用的可视化工具。通过Grafana可以管理用户权限，数据分析，查看，导出，设置告警等。\n仪表盘Dashboard 通过数据源定义好可视化的数据来源之后，对于用户而言最重要的事情就是实现数据的可视化。\n面板 Panel Panel是Grafana中最基本的可视化单元。每一种类型的面板都提供了相应的查询编辑器(Query Editor)，让用户可以从不同的数据源（如Prometheus）中查询出相应的监控数据，并且以可视化的方式展现。 Grafana中所有的面板均以插件的形式进行使用，当前内置了5种类型的面板，分别是：Graph，Singlestat，Heatmap, Dashlist，Table以及Text。\n翻译工作 上面简单介绍了一下工具，主要是让我们方便查看监控的数据。这里我还是没有更深入的去研究公式等图形的设置。这里先主要写一下翻译方面的工作。\n公司也考虑展示内容为中文化比较好，这里Grafana没有提供语言包的方式来处理多语言问题。在我查看代码过程中，发现工具后台是在GO里面写死的很多导航，返回值等数据。前台是在页面上直接写的很多内容。所以我个人认为无法使用语言包来直接处理多语言问题。那就只好自己来搞定了。\n翻译的内容 更具代码查看，主要分为两大部分：\n后端： go文件，主要内容在/pkg 目录下。 前端： 1. 系统页面 2. 插件页面 这些在/public 目录下 准备工作 首先git clone Grafana库 git clone https://github.com/chenweil/grafana.git\n之后我们根据自己翻译的版本来检出自己的项目。 这里我们使用的v6.3.4 ，官方版本中可以查看到tag v6.3.4,并重命名自己的分支为6.3.4-chs： git checkout -b 6.3.4-chs\n通过 git branch 命令查看自己处于哪个分支上。 这里如果你不是很熟悉git命令行，可以使用sourcetree工具操作，相对来说点点鼠标就可以搞定了。\n我们在自己创建的分支就可以来处理我们的工作了。\n前端调试环境 需要 npm，nodejs，yarn\n终端执行命令 yarn install --pure-lockfile 初始化. 如果没有报错的情况,证明ok.\n出现错误请先处理问题. 开启调试环境时候，是开启前端的热加载来协助我们调试。 这里安装完三个环境可能在执行 yarn start 时报错，这里如果你是在windows上，需要再安装一下sass.(根据报错来看问题，我这里遇到缺少sass问题)\n当我们yarn start 执行后，等待一段时间，build at 时间证明准备工作已完成，下面就需要我们在调试模式下测试了。\n还需要一个调试的Grafana服务程序，这里是windows环境，所以直接从官方下载了zip包，执行bin下的grafana-server.exe 来启动服务。需要再conf文件夹修改一下public前端资源的配置，如果不修改那么你翻译的信息是看不到的，服务会直接读取的当前的public，我们这需要读取翻译的public文件位置。\n配置在windows服务程序的 /conf/defaults.ini 修改内容：\napp_mode = development # 开发模式 static_root_path = D:\\grafana\\public #这里配置到git拉取得位置的public 按照正常的操作 是需要开启webpack-dev-server 我这里没有这么设置，直接利用3000端口调试的。（当我们yarn start 后，通过修改页面可以看修改的内容。）\n翻译前端文件 前面环境已经搭建好之后，我们通过修改页面文件展示内容来翻译。 例如翻译登陆页面： /public/app/partials/login.html 把对应的英文改为中文，保存后webpack会处理。处理完成刷新页面可以看到结果。\n前端翻译文件不止html，还有ts，tsx等文件。这里如果不知道具体文件可以在public文件夹下，通过全局搜索页面的单词等信息定位到文件。 我没有翻译带有test 的测试文件。\n最后我们把需要的文件都翻译之后，通过yarn build 生成文件。这些文件都存在生成的目录/public/build中。把这些文件覆盖到自己搭建的项目中完成汉文。 建议把整体public目录替换。 重启服务既可以看到中文版的页面了。\n后端环境 后端是用GO写的。后端我没有调试，不想前端那样可以边调边看。我的办法就是全部改完，build程序，启动查看后端翻译的结果。 所需，本人是在windows10下处理的，需要gcc，go。\n翻译后端文件 文件所在位置： /pkg/ 首页我们的导航，二级菜单这些不是前端控制的，这些是在 /pkg/api/index.go\n其余还有很多文件，内容包含：html数据，返回值信息，debug信息等。如果你前端翻译完成，那么后端对你来说也是很轻松的。\n请注意一些参数或者判断不要给翻译了\n当翻译完成后，需要build。 首先到项目根目录，这里可以看到 build.go 文件。用这个来生成后端程序。 windows下可以build .exe程序。 时间很短，便于我们调试。\nbuild前，先steup一下，执行 go run build.go setup。\n$ go run build.go setup Version: 6.3.4, Linux Version: 6.3.4, Package Iteration: 1568870230 go install -v ./pkg/cmd/grafana-server github.com/grafana/grafana/pkg/api github.com/grafana/grafana/pkg/cmd/grafana-server 如果没有报错，那么证明是可以执行build了。 这里可能你会遇到一些错误，出现错误先解决错误再重新执行 go run build.go setup，直到没有错误。 我遇到一下错误：\nerror loading module requirements 这个问题一查一大把，原因就是你需要的模块下载不到，地址被墙。 解决方式： 其中一种：go.mod 添加replace() 替换地址。下面并非全部用到，我是偷懒全粘上。\nreplace ( golang.org/x/build =\u0026gt; github.com/golang/build v0.0.0-20190416225751-b5f252a0a7dd golang.org/x/crypto =\u0026gt; github.com/golang/crypto v0.0.0-20190411191339-88737f569e3a golang.org/x/exp =\u0026gt; github.com/golang/exp v0.0.0-20190413192849-7f338f571082 golang.org/x/image =\u0026gt; github.com/golang/image v0.0.0-20190417020941-4e30a6eb7d9a golang.org/x/lint =\u0026gt; github.com/golang/lint v0.0.0-20190409202823-959b441ac422 golang.org/x/mobile =\u0026gt; github.com/golang/mobile v0.0.0-20190415191353-3e0bab5405d6 golang.org/x/net =\u0026gt; github.com/golang/net v0.0.0-20190415214537-1da14a5a36f2 golang.org/x/oauth2 =\u0026gt; github.com/golang/oauth2 v0.0.0-20190402181905-9f3314589c9a golang.org/x/perf =\u0026gt; github.com/golang/perf v0.0.0-20190312170614-0655857e383f golang.org/x/sync =\u0026gt; github.com/golang/sync v0.0.0-20190412183630-56d357773e84 golang.org/x/sys =\u0026gt; github.com/golang/sys v0.0.0-20190416152802-12500544f89f golang.org/x/text =\u0026gt; github.com/golang/text v0.3.0 golang.org/x/time =\u0026gt; github.com/golang/time v0.0.0-20190308202827-9d24e82272b4 golang.org/x/tools =\u0026gt; github.com/golang/tools v0.0.0-20190417005754-4ca4b55e2050 golang.org/x/xerrors =\u0026gt; github.com/golang/xerrors v0.0.0-20190410155217-1f06c39b4373 google.golang.org/api =\u0026gt; github.com/googleapis/google-api-go-client v0.3.2 google.golang.org/appengine =\u0026gt; github.com/golang/appengine v1.5.0 google.golang.org/genproto =\u0026gt; github.com/google/go-genproto v0.0.0-20190415143225-d1146b9035b9 google.golang.org/grpc =\u0026gt; github.com/grpc/grpc-go v1.20.0 gopkg.in/asn1-ber.v1 =\u0026gt; github.com/go-asn1-ber/asn1-ber v0.0.0-20181015200546-f715ec2f112d gopkg.in/fsnotify.v1 =\u0026gt; github.com/Jwsonic/recinotify v0.0.0-20151201212458-7389700f1b43 gopkg.in/gorethink/gorethink.v4 =\u0026gt; github.com/rethinkdb/rethinkdb-go v4.0.0+incompatible gopkg.in/ini.v1 =\u0026gt; github.com/go-ini/ini v1.42.0 gopkg.in/src-d/go-billy.v4 =\u0026gt; github.com/src-d/go-billy v4.2.0+incompatible gopkg.in/src-d/go-git-fixtures.v3 =\u0026gt; github.com/src-d/go-git-fixtures v3.4.0+incompatible gopkg.in/yaml.v2 =\u0026gt; github.com/go-yaml/yaml v2.1.0+incompatible k8s.io/api =\u0026gt; github.com/kubernetes/api v0.0.0-20190416052506-9eb4726e83e4 k8s.io/apimachinery =\u0026gt; github.com/kubernetes/apimachinery v0.0.0-20190416092415-3370b4aef5d6 k8s.io/client-go =\u0026gt; github.com/kubernetes/client-go v11.0.0+incompatible k8s.io/klog =\u0026gt; github.com/simonpasquier/klog-gokit v0.1.0 k8s.io/kube-openapi =\u0026gt; github.com/kubernetes/kube-openapi v0.0.0-20190401085232-94e1e7b7574c k8s.io/utils =\u0026gt; github.com/kubernetes/utils v0.0.0-20190308190857-21c4ce38f2a7 sigs.k8s.io/yaml =\u0026gt; github.com/kubernetes-sigs/yaml v1.1.0 go.uber.org/atomic =\u0026gt; github.com/uber-go/atomic v1.3.2 ) 还有方法是通过设置Module GOPROXY代理。大概意思就是当构建或运行你的应用时,Go 会通过 GOPROXY 获取依赖。 这个我没测试，有兴趣自行查阅。\nexec: \u0026ldquo;gcc\u0026rdquo;: executable file not found in %PATH% 这个问题是我们环境没有gcc，这个玩意儿需要下载一个软件MinGW。 此地址提供的压缩包文件。解压可以使用，此网站也提供下载器安装方式。这网站下载贼慢 解压之后设置环境变量，当前解压完路径是： C:\\MinGW\\mingw64 在环境变量添加此目录。 cmd 测试 gcc -v 有信息即ok。\n没有问题 执行 go run build.go build 完成后，就可以得到bin文件，位置在 /bin/windows-amd64/ ， 里面有grafana-server.exe 程序。\n在测试前端时候，用的那个windwos程序可以下岗了，把build之后的bin程序+md5文件一起复制到这目录里。如果你不放心提前先备份一份。\n之后按照测试前端那样，打开服务，访问3000，查看自己汉化后端的成果吧。\n生成docker镜像 在windows可以直接加载public,bin生成之后替换原bin程序.\nlinux是类似,build出来的bin,需要在linux上build.\n我们这里主要是想利用docker.\n还没完，我们刚才只是测试一下自己汉化的后端是否可以。如果测试完都可以之后，我们还是要把它build成镜像，利用docker来运行服务。 如果你不想用docker，就考虑在build为linux程序。\n生成docker镜像可以分为两种，一种是你所在linux/amd64中生成的镜像，另一种是通用的镜像。\n第一种:\nlinux系统上省事一点 go run build.go setup\ngo run build.go build\n第二种通用镜像： make build-docker-full 或者 docker build -t grafana/grafana:dev .\n这里我没有成功build出来镜象,我在linux上尝试了几次,两种方法build出来的镜象启动提示 run.sh 权限存在问题,如果我＋x run.sh之后,提示一些其他错误.\n那镜象我是通过commit来完成制作的.通过汉化的文件cp到容器中在commit成一个镜象.\n如果想用我的镜象,请点击这里.\n到此终于结束啦。\n","permalink":"http://localhost:1313/aLong/posts/grafana%E6%B1%89%E5%8C%96/","summary":"\u003ch2 id=\"可视化图表\"\u003e可视化图表\u003c/h2\u003e\n\u003cp\u003eGrafana是一个通用的可视化工具。通过Grafana可以管理用户权限，数据分析，查看，导出，设置告警等。\u003c/p\u003e\n\u003ch3 id=\"仪表盘dashboard\"\u003e仪表盘Dashboard\u003c/h3\u003e\n\u003cp\u003e通过数据源定义好可视化的数据来源之后，对于用户而言最重要的事情就是实现数据的可视化。\u003c/p\u003e\n\u003ch3 id=\"面板-panel\"\u003e面板 Panel\u003c/h3\u003e\n\u003cp\u003ePanel是Grafana中最基本的可视化单元。每一种类型的面板都提供了相应的查询编辑器(Query Editor)，让用户可以从不同的数据源（如Prometheus）中查询出相应的监控数据，并且以可视化的方式展现。\nGrafana中所有的面板均以插件的形式进行使用，当前内置了5种类型的面板，分别是：Graph，Singlestat，Heatmap, Dashlist，Table以及Text。\u003c/p\u003e\n\u003ch2 id=\"翻译工作\"\u003e\u003cstrong\u003e翻译工作\u003c/strong\u003e\u003c/h2\u003e\n\u003cp\u003e上面简单介绍了一下工具，主要是让我们方便查看监控的数据。这里我还是没有更深入的去研究公式等图形的设置。这里先主要写一下翻译方面的工作。\u003c/p\u003e\n\u003cp\u003e公司也考虑展示内容为中文化比较好，这里Grafana没有提供语言包的方式来处理多语言问题。在我查看代码过程中，发现工具后台是在GO里面写死的很多导航，返回值等数据。前台是在页面上直接写的很多内容。所以我个人认为无法使用语言包来直接处理多语言问题。那就只好自己来搞定了。\u003c/p\u003e\n\u003ch3 id=\"翻译的内容\"\u003e\u003cstrong\u003e翻译的内容\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e更具代码查看，主要分为两大部分：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e后端： go文件，主要内容在/pkg 目录下。\u003c/li\u003e\n\u003cli\u003e前端： 1. 系统页面  2. 插件页面  这些在/public 目录下\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"准备工作\"\u003e\u003cstrong\u003e准备工作\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e首先git clone Grafana库\n\u003ccode\u003egit clone https://github.com/chenweil/grafana.git\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e之后我们根据自己翻译的版本来检出自己的项目。\n这里我们使用的v6.3.4 ，官方版本中可以查看到tag v6.3.4,并重命名自己的分支为6.3.4-chs：\n\u003ccode\u003egit checkout -b 6.3.4-chs\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e通过 \u003ccode\u003egit branch\u003c/code\u003e 命令查看自己处于哪个分支上。\n\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2019/09/18/gFRkLM.png\" alt=\"\"  /\u003e\n\n这里如果你不是很熟悉git命令行，可以使用sourcetree工具操作，相对来说点点鼠标就可以搞定了。\u003c/p\u003e\n\u003cp\u003e我们在自己创建的分支就可以来处理我们的工作了。\u003c/p\u003e\n\u003ch3 id=\"前端调试环境\"\u003e\u003cstrong\u003e前端调试环境\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e需要 npm，nodejs，yarn\u003c/p\u003e\n\u003cp\u003e终端执行命令\u003ccode\u003e yarn install --pure-lockfile\u003c/code\u003e 初始化. 如果没有报错的情况,证明ok.\u003c/p\u003e\n\u003cp\u003e出现错误请先处理问题.\n开启调试环境时候，是开启前端的热加载来协助我们调试。\n这里安装完三个环境可能在执行 yarn start 时报错，这里如果你是在windows上，需要再安装一下sass.(根据报错来看问题，我这里遇到缺少sass问题)\u003c/p\u003e\n\u003cp\u003e当我们yarn start 执行后，等待一段时间，build at 时间证明准备工作已完成，下面就需要我们在调试模式下测试了。\u003c/p\u003e\n\u003cp\u003e还需要一个调试的Grafana服务程序，这里是windows环境，所以直接从官方下载了zip包，执行bin下的grafana-server.exe 来启动服务。需要再conf文件夹修改一下public前端资源的配置，如果不修改那么你翻译的信息是看不到的，服务会直接读取的当前的public，我们这需要读取翻译的public文件位置。\u003c/p\u003e\n\u003cp\u003e配置在windows服务程序的 /conf/defaults.ini\n修改内容：\u003c/p\u003e","title":"Grafana中文化"},{"content":"安装nodejs 下载官方node的tar包: https://nodejs.org/en/download/\nwget https://nodejs.org/dist/v10.16.3/node-v10.16.3-linux-x64.tar.xz\n解压下载文件 tar -xvf node-v10.16.3-linux-x64.tar.xz\n部署bin 这里下载位置为家里面 ~/\nln -s ~/node-v10.16.3-linux-x64/bin/node /usr/bin/node\nln -s ~/node-v10.16.3-linux-x64/bin/npm /usr/bin/npm\n一个是node 另一个是npm\n验证 node -v npm -v\n","permalink":"http://localhost:1313/aLong/posts/centos7%E5%AE%89%E8%A3%85nodejs/","summary":"\u003ch2 id=\"安装nodejs\"\u003e安装nodejs\u003c/h2\u003e\n\u003ch3 id=\"下载官方node的tar包\"\u003e下载官方node的tar包:\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://nodejs.org/en/download/\"\u003ehttps://nodejs.org/en/download/\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ewget https://nodejs.org/dist/v10.16.3/node-v10.16.3-linux-x64.tar.xz\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"解压下载文件\"\u003e解压下载文件\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003etar -xvf node-v10.16.3-linux-x64.tar.xz\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"部署bin\"\u003e部署bin\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003e这里下载位置为家里面 ~/\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eln -s ~/node-v10.16.3-linux-x64/bin/node /usr/bin/node\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eln -s ~/node-v10.16.3-linux-x64/bin/npm /usr/bin/npm\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e一个是node 另一个是npm\u003c/p\u003e\n\u003ch3 id=\"验证\"\u003e验证\u003c/h3\u003e\n\u003cp\u003enode -v\nnpm -v\u003c/p\u003e","title":"Centos7安装nodejs"},{"content":"SNMP SNMP(simple network management protocol)是因特网架构委员会IAB定义的一个应用层协议。SNMP广泛用于管理和监控网络设备，大多数专业的网络设备都有SNMP agent代理，这些代理被激活和配置后用于和SNMP管理 NMS(network management system)网络管理系统通信。\n目的 通过snmp_export,获取设备信息.\n准备 系统: centos7,docker19. 之前已经安装好 Prometheus\n此处目标设备是华为交换机 s2700\n部署snmp_expoer snmp.yml 配置文件不是自己定义的,是通过注册生成或下载的.这里我通过github下载配置文件.\nsnmp.yml\n配置snmp_export 配置文件 snmp.yml version: 2 auth: community: **交换机设置的团体名** 查找到if_mib 再此段结尾中加入 上面的配置(大概行数6199).\n部署snmp_expor docker run -d --restart always \\ -v /home/along/snmp.yml:/etc/snmp_exporter/snmp.yml \\ -p 9116:9116 --name snmp-exporter prom/snmp-exporter \\ --config.file=\u0026#34;/etc/snmp_exporter/snmp.yml\u0026#34; 配置华为s2700交换机 自行查阅文档.懒得写了.\n验证服务 访问 http://IP:9116/metrics 能返回数据,snmp_export服务正常.\n测试是否能获取到目标设备的数据: 访问 http://IP:9116/snmp?target=DEVIP 能获取到数据,配置成功.\n注意防火墙 把需要的端口加入规则中,不然访问不到排查绕弯路\n配置promthues 修改 promthues.yml文件. 添加一个新的job.\n- job_name: snmp honor_timestamps: true params: module: - if_mib scrape_interval: 15s scrape_timeout: 10s metrics_path: /snmp scheme: http static_configs: - targets: - 172.16.23.253 labels: tag: huawei-switch-s2700 relabel_configs: - source_labels: [__address__] separator: ; regex: (.*) target_label: __param_target replacement: $1 action: replace - source_labels: [__param_target] separator: ; regex: (.*) target_label: instance replacement: $1 action: replace - separator: ; regex: (.*) target_label: __address__ replacement: 172.16.23.12:9116 action: replace 之前部署prometheus 有一个参数是为了热加载配置的. 这里需要reload一下配置,curl -X POST http://IP:9090/-/reload,如果你没有就重启服务吧.\n验证 Prometheus配置 访问 http://IP:9090/ 点击 Status-\u0026gt;Target 可以看到监控的节点,之前我们是有一个,现在是两个节点了.\n有数据之后,就可以在grafana中展示设备的数据了.\n参考 https://github.com/prometheus/snmp_exporter\nhttps://prometheus.io/docs/instrumenting/exporters/\nhttp://owelinux.github.io/owelinux.github.io/2018/07/25/article8-linux-prometheus/\n","permalink":"http://localhost:1313/aLong/posts/prometheus-snmp-export%E9%83%A8%E7%BD%B2/","summary":"\u003ch2 id=\"snmp\"\u003eSNMP\u003c/h2\u003e\n\u003cp\u003eSNMP(simple network management protocol)是因特网架构委员会IAB定义的一个应用层协议。SNMP广泛用于管理和监控网络设备，大多数专业的网络设备都有SNMP agent代理，这些代理被激活和配置后用于和SNMP管理 NMS(network management system)网络管理系统通信。\u003c/p\u003e\n\u003ch2 id=\"目的\"\u003e目的\u003c/h2\u003e\n\u003cp\u003e通过snmp_export,获取设备信息.\u003c/p\u003e\n\u003ch2 id=\"准备\"\u003e准备\u003c/h2\u003e\n\u003cp\u003e系统: centos7,docker19.\n之前已经安装好 Prometheus\u003c/p\u003e\n\u003cp\u003e此处目标设备是华为交换机 s2700\u003c/p\u003e\n\u003ch2 id=\"部署snmp_expoer\"\u003e部署snmp_expoer\u003c/h2\u003e\n\u003cp\u003esnmp.yml 配置文件不是自己定义的,是通过注册生成或下载的.这里我通过github下载配置文件.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/prometheus/snmp_exporter/blob/master/snmp.yml\"\u003esnmp.yml\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e配置snmp_export 配置文件 snmp.yml\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eversion\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e2\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e\u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eauth\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ecommunity\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#bc7a00\"\u003e**交换机设置的团体名**\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e查找到if_mib 再此段结尾中加入 上面的配置(大概行数6199).\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2019/08/29/gjuSAc.png\" alt=\"demo\"  /\u003e\n\u003c/p\u003e\n\u003ch3 id=\"部署snmp_expor\"\u003e部署snmp_expor\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker run -d --restart always \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-v /home/along/snmp.yml:/etc/snmp_exporter/snmp.yml \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#b62;font-weight:bold\"\u003e\u003c/span\u003e-p 9116:9116 --name snmp-exporter prom/snmp-exporter \u003cspan style=\"color:#b62;font-weight:bold\"\u003e\\ \u003c/span\u003e--config.file\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ba2121\"\u003e\u0026#34;/etc/snmp_exporter/snmp.yml\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"配置华为s2700交换机\"\u003e配置华为s2700交换机\u003c/h3\u003e\n\u003cp\u003e自行查阅文档.懒得写了.\u003c/p\u003e\n\u003ch3 id=\"验证服务\"\u003e验证服务\u003c/h3\u003e\n\u003cp\u003e访问 http://IP:9116/metrics 能返回数据,snmp_export服务正常.\u003c/p\u003e\n\u003cp\u003e测试是否能获取到目标设备的数据:\n访问 http://IP:9116/snmp?target=DEVIP\n能获取到数据,配置成功.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e注意防火墙 把需要的端口加入规则中,不然访问不到排查绕弯路\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"配置promthues\"\u003e配置promthues\u003c/h3\u003e\n\u003cp\u003e修改 promthues.yml文件. 添加一个新的job.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003ejob_name\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003esnmp\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ehonor_timestamps\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etrue\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eparams\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emodule\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- if_mib\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_interval\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e15s\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escrape_timeout\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e10s\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003emetrics_path\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e/snmp\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003escheme\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ehttp\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003estatic_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003etargets\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e- \u003cspan style=\"color:#666\"\u003e172.16.23.253\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003elabels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e      \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etag\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ehuawei-switch-s2700\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003erelabel_configs\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[__address__]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eseparator\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e;\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e(.*)\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e__param_target\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereplacement\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e$1\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eaction\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ereplace\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003esource_labels\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e[__param_target]\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eseparator\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e;\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e(.*)\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003einstance\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereplacement\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e$1\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eaction\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ereplace\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e  \u003c/span\u003e- \u003cspan style=\"color:#008000;font-weight:bold\"\u003eseparator\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e;\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eregex\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e(.*)\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003etarget_label\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e__address__\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003ereplacement\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003e\u003cspan style=\"color:#666\"\u003e172.16.23.12\u003c/span\u003e:\u003cspan style=\"color:#666\"\u003e9116\u003c/span\u003e\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#bbb\"\u003e    \u003c/span\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eaction\u003c/span\u003e:\u003cspan style=\"color:#bbb\"\u003e \u003c/span\u003ereplace\u003cspan style=\"color:#bbb\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e之前部署prometheus 有一个参数是为了热加载配置的.\n这里需要reload一下配置,\u003ccode\u003ecurl -X POST http://IP:9090/-/reload\u003c/code\u003e,如果你没有就重启服务吧.\u003c/p\u003e","title":"Prometheus-snmp_export部署"},{"content":"介绍 Prometheus是由SoundCloud开发的开源监控报警系统和时序列数据库(TSDB)。Prometheus使用Go语言开发，是Google BorgMon监控系统的开源版本。 2016年由Google发起Linux基金会旗下的原生云基金会(Cloud Native Computing Foundation), 将Prometheus纳入其下第二大开源项目。Prometheus目前在开源社区相当活跃。 Prometheus和Heapster(Heapster是K8S的一个子项目，用于获取集群的性能数据。)相比功能更完善、更全面。Prometheus性能也足够支撑上万台规模的集群。\nPrometheus的特点:\n多维度数据模型。 灵活的查询语言。 不依赖分布式存储，单个服务器节点是自主的。 通过基于HTTP的pull方式采集时序数据。 可以通过中间网关进行时序列数据推送。 通过服务发现或者静态配置来发现目标服务对象。 支持多种多样的图表和界面展示，比如Grafana等。 架构图 Prometheus服务大致过程： Prometheus 定时去目标上抓取metrics(指标)数据，每个抓取目标需要暴露一个http服务的接口给它定时抓取。Prometheus支持通过配置文件、文本文件、Zookeeper、Consul、DNS SRV Lookup等方式指定抓取目标。Prometheus采用PULL的方式进行监控，即服务器可以直接通过目标PULL数据或者间接地通过中间网关来Push数据。\nPrometheus在本地存储抓取的所有数据，并通过一定规则进行清理和整理数据，并把得到的结果存储到新的时间序列中。\nPrometheus通过PromQL和其他API可视化地展示收集的数据。Prometheus支持很多方式的图表可视化，例如Grafana、自带的Promdash以及自身提供的模版引擎等等。Prometheus还提供HTTP API的查询方式，自定义所需要的输出。\nPushGateway支持Client主动推送metrics到PushGateway，而Prometheus只是定时去Gateway上抓取数据。\nAlertmanager是独立于Prometheus的一个组件，可以支持Prometheus的查询语句，提供十分灵活的报警方式。\nPrometheus 支持通过SNMP协议获取mertics数据.通过配置job,利用snmp_export读取设备监控信息.\n指标(Metric)类型 Counter 计数器,从数据0开始累计计算. 理想状态会永远增长. 累计计算请求次数等 Gauges 瞬时状态的值. 可以任意变化的数值，适用 CPU 使用率 温度等 Histogram 对一段时间范围内数据进行采样，并对所有数值求和与统计数量、柱状图. 某个时间对某个度量值，分组，一段时间http相应大小，请求耗时的时间。 Summary 同样产生多个指标，分别带有后缀_bucket(仅histogram)、_sum、_count Histogram和Summary都可以获取分位数。 通过Histogram获得分位数，要将直方图指标数据收集prometheus中， 然后用prometheus的查询函数histogram_quantile()计算出来。 Summary则是在应用程序中直接计算出了分位数。 Histograms and summaries中阐述了两者的区别，特别是Summary的的分位数不能被聚合。 注意，这个不能聚合不是说功能上不支持，而是说对分位数做聚合操作通常是没有意义的。 LatencyTipOfTheDay: You can’t average percentiles. Period中对“分位数”不能被相加平均的做了很详细的说明：分位数本身是用来切分数据的，它们的平均数没有同样的分位效果。\n主要我们监控用到最上面两种,下面两种类型目前我没有接触,上面这段文字与介绍引用自lijiaocn\n安装Prometheus 本次搭建利用docker方式.整体搭建完成需要两个容器.暂不配置告警相关,只做监控数据\n前提 搭建位置: /home/aLong/prometheus/\n环境:docker19.03.1 需要指定版本请查阅官方文档.\n系统:centos7\n准备工作 Prometheus的配置文件: prometheus.yml 我们建立在搭建位置的根下: touch prometheus.yml 在配置文件中加入测试演示配置\nglobal: scrape_interval: 15s scrape_timeout: 10s evaluation_interval: 15s scrape_configs: - job_name: prometheus honor_timestamps: true scrape_interval: 5s scrape_timeout: 3s metrics_path: /metrics scheme: http static_configs: - targets: - localhost:9090 注意配置文件的格式为yaml,语法问题请参考这里.\n安装与运行 通过docker 启动 prometheus.\ndocker run -d -p 9090:9090 \\ -v /home/along/prometheus.yml:/etc/prometheus/prometheus.yml \\ --name prometheus \\ prom/prometheus \\ --config.file=/etc/prometheus/prometheus.yml \\ --web.enable-lifecycle \u0026ndash;web.enable-lifecycle 启用远程热加载配置文件 curl -X POST http://IP:9090/-/reload\n注意这里docker热加载存在一个问题,上面挂在文件为/home/along/prometheus.yml 如果直接编辑此文件会改变文件的inode, 热加载不会成功.\n**解决办法: 我们不在挂在配置文件上做修改,复制一份,通过冲顶下方式到prometheus.yml上面 **\n例如:\ncp /home/along/prometheus.yml /home/along/prom-edit.yml\nvi /home/along/prom-edit.ym\ncat /home/along/prom-edit.ym \u0026gt; /home/along/prometheus.yml\n此时 curl -X POST http://IP:9090/-/reload 会成功加载.\n验证服务 访问 http://IP:9090 会进入简单webUI界面中.这是prometheus的web界面.\n里面看到一些信息和监控数据.可以展示图表.\n点击 Status-\u0026gt;Target 可以看到监控的设备信息.\n访问http://IP:9090/metrics 可以看到监控数据.\n到这里,Prometheus已经安装成功,并监测到本机数据.\nGrafana安装 Grafana是用于可视化大型测量数据的开源程序，它提供了强大和优雅的方式去创建、共享、浏览数据。 Dashboard中显示了你不同metric数据源中的数据。 Grafana最常用于因特网基础设施和应用分析，但在其他领域也有用到，比如：工业传感器、家庭自动化、过程控制等等。 Grafana支持热插拔控制面板和可扩展的数据源，目前已经支持Graphite、InfluxDB、OpenTSDB、Elasticsearch、Prometheus等\n官方：docker run -d -p 3000:3000 --name grafana grafana/grafana\n汉化：docker run -d -p 3000:3000 --name grafana chenwl2016/grafana-chs:0.1.5\n执行后,通过http:IP:3000 访问grafana. 缺省账号密码admin\n进入后会有首页的一个引导. 添加数据源,选择prometheus. 之后可以看到默认的模板上会有数据.\n通过官网查询模板插件.导入到系统中. 自定义模板选择需要的数据来展示,这里我还没玩6,暂不多说了.\n参考 https://grafana.com/docs/ https://prometheus.io/docs/introduction/overview/ https://www.hi-linux.com/posts/25047.html#%E5%AE%89%E8%A3%85prometheus https://www.lijiaocn.com/%E9%A1%B9%E7%9B%AE/2018/08/03/prometheus-usage.html#metric%E7%B1%BB%E5%9E%8B\n","permalink":"http://localhost:1313/aLong/posts/prometheus-grafana%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA/","summary":"\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePrometheus是由SoundCloud开发的开源监控报警系统和时序列数据库(TSDB)。Prometheus使用Go语言开发，是Google BorgMon监控系统的开源版本。\n2016年由Google发起Linux基金会旗下的原生云基金会(Cloud Native Computing Foundation), 将Prometheus纳入其下第二大开源项目。Prometheus目前在开源社区相当活跃。\nPrometheus和Heapster(Heapster是K8S的一个子项目，用于获取集群的性能数据。)相比功能更完善、更全面。Prometheus性能也足够支撑上万台规模的集群。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePrometheus的特点:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e多维度数据模型。\u003c/li\u003e\n\u003cli\u003e灵活的查询语言。\u003c/li\u003e\n\u003cli\u003e不依赖分布式存储，单个服务器节点是自主的。\u003c/li\u003e\n\u003cli\u003e通过基于HTTP的pull方式采集时序数据。\u003c/li\u003e\n\u003cli\u003e可以通过中间网关进行时序列数据推送。\u003c/li\u003e\n\u003cli\u003e通过服务发现或者静态配置来发现目标服务对象。\u003c/li\u003e\n\u003cli\u003e支持多种多样的图表和界面展示，比如Grafana等。\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"架构图\"\u003e架构图\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://t1.picb.cc/uploads/2019/08/29/gjevPW.png\" alt=\"结构图\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"prometheus服务大致过程\"\u003ePrometheus服务大致过程：\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ePrometheus 定时去目标上抓取metrics(指标)数据，每个抓取目标需要暴露一个http服务的接口给它定时抓取。Prometheus支持通过配置文件、文本文件、Zookeeper、Consul、DNS SRV Lookup等方式指定抓取目标。Prometheus采用PULL的方式进行监控，即服务器可以直接通过目标PULL数据或者间接地通过中间网关来Push数据。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePrometheus在本地存储抓取的所有数据，并通过一定规则进行清理和整理数据，并把得到的结果存储到新的时间序列中。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePrometheus通过PromQL和其他API可视化地展示收集的数据。Prometheus支持很多方式的图表可视化，例如Grafana、自带的Promdash以及自身提供的模版引擎等等。Prometheus还提供HTTP API的查询方式，自定义所需要的输出。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePushGateway支持Client主动推送metrics到PushGateway，而Prometheus只是定时去Gateway上抓取数据。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAlertmanager是独立于Prometheus的一个组件，可以支持Prometheus的查询语句，提供十分灵活的报警方式。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePrometheus 支持通过SNMP协议获取mertics数据.通过配置job,利用snmp_export读取设备监控信息.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"指标metric类型\"\u003e指标(Metric)类型\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCounter\u003c/strong\u003e   计数器,从数据0开始累计计算. 理想状态会永远增长. 累计计算请求次数等\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGauges\u003c/strong\u003e    瞬时状态的值. 可以任意变化的数值，适用 CPU 使用率 温度等\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHistogram\u003c/strong\u003e 对一段时间范围内数据进行采样，并对所有数值求和与统计数量、柱状图. 某个时间对某个度量值，分组，一段时间http相应大小，请求耗时的时间。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSummary\u003c/strong\u003e  同样产生多个指标，分别带有后缀_bucket(仅histogram)、_sum、_count\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHistogram和Summary都可以获取分位数。\n通过Histogram获得分位数，要将直方图指标数据收集prometheus中， 然后用prometheus的查询函数\u003ca href=\"https://prometheus.io/docs/prometheus/latest/querying/functions/#histogram_quantile\"\u003ehistogram_quantile()\u003c/a\u003e计算出来。 Summary则是在应用程序中直接计算出了分位数。\n\u003ca href=\"https://prometheus.io/docs/practices/histograms/\"\u003eHistograms and summaries\u003c/a\u003e中阐述了两者的区别，特别是Summary的的分位数不能被聚合。\n注意，这个不能聚合不是说功能上不支持，而是说对分位数做聚合操作通常是没有意义的。\n\u003ca href=\"https://latencytipoftheday.blogspot.com/2014/06/latencytipoftheday-you-cant-average.html\"\u003eLatencyTipOfTheDay: You can’t average percentiles. Period\u003c/a\u003e中对“分位数”不能被相加平均的做了很详细的说明：分位数本身是用来切分数据的，它们的平均数没有同样的分位效果。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e主要我们监控用到最上面两种,下面两种类型目前我没有接触,上面这段文字与介绍引用自\u003ca href=\"https://www.lijiaocn.com/%E9%A1%B9%E7%9B%AE/2018/08/03/prometheus-usage.html#metric%E7%B1%BB%E5%9E%8B\"\u003elijiaocn\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"安装prometheus\"\u003e安装Prometheus\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e本次搭建利用docker方式.整体搭建完成需要两个容器.暂不配置告警相关,只做监控数据\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"前提\"\u003e前提\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e搭建位置: \u003cem\u003e/home/aLong/prometheus/\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e环境:docker19.03.1 需要指定版本请查阅官方文档.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e系统:centos7\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"准备工作\"\u003e准备工作\u003c/h3\u003e\n\u003cp\u003ePrometheus的配置文件: prometheus.yml\n我们建立在搭建位置的根下: \u003ccode\u003etouch prometheus.yml\u003c/code\u003e\n在配置文件中加入测试演示配置\u003c/p\u003e","title":"Prometheus+Grafana安装搭建"},{"content":"前提 公司需要环境Centos5, 又不能升级内核.\n查了一下 大概是 需要 yum –exclude=kernel* update 或者修改 yum.conf\n测试一下 出现一个问题: Loaded plugins: fastestmirror, security Loading mirror speeds from cached hostfile YumRepo Error: All mirror URLs are not using ftp, http[s] or file. Eg. Invalid release/ removing mirrorlist with no valid mirrors: /var/cache/yum/base/mirrorlist.txt Error: Cannot find a valid baseurl for repo: base 根据查询到的信息是,没有正常的源.\n解决问题 根据网上的源地址 修改一下: 位置: /etc/yum.repos.d/CentOS-Base.repo\n修改内容: [base] name=CentOS-5.11 - Base #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=os baseurl=http://vault.centos.org/5.11/os/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #released updates [updates] name=CentOS-5.11 - Updates #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=updates baseurl=http://vault.centos.org/5.11/updates/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #packages used/produced in the build but not released [addons] name=CentOS-5.11 - Addons #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=addons baseurl=http://vault.centos.org/5.11/addons/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #additional packages that may be useful [extras] name=CentOS-5.11 - Extras #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=extras baseurl=http://vault.centos.org/5.11/extras/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #additional packages that extend functionality of existing packages [centosplus] name=CentOS-5.11 - Plus #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=centosplus baseurl=http://vault.centos.org/5.11/centosplus/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #contrib - packages by Centos Users [contrib] name=CentOS-5.11 - Contrib #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=contrib baseurl=http://vault.centos.org/5.11/contrib/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 之后 再使用上面的yum 去更新,发现yum 语句是有问题的.\n正确的命令是: yum --exclude=kernel\\* update 或者 yum -x 'kernel*' update 确认是否生效 首先 yum update 内容可以看到 安装内容中 包含 \u0026lsquo;kernel\u0026rsquo; 信息.\n之后 执行上句命令后,可以看到 更新信息里没有 \u0026lsquo;kernel\u0026rsquo; .\n最后可以确定,这个方案是有效的.\n","permalink":"http://localhost:1313/aLong/posts/centos5%E4%B8%8D%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E6%9B%B4%E6%96%B0-2/","summary":"\u003ch3 id=\"前提\"\u003e前提\u003c/h3\u003e\n\u003cp\u003e公司需要环境Centos5, 又不能升级内核.\u003c/p\u003e\n\u003cp\u003e查了一下 大概是 需要 \u003ccode\u003eyum –exclude=kernel* update\u003c/code\u003e   或者修改 yum.conf\u003c/p\u003e\n\u003ch3 id=\"测试一下-出现一个问题\"\u003e测试一下 出现一个问题:\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLoaded plugins: fastestmirror, security\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLoading mirror speeds from cached hostfile\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eYumRepo Error: All mirror URLs are not using ftp, http\u003cspan style=\"color:#666\"\u003e[\u003c/span\u003es\u003cspan style=\"color:#666\"\u003e]\u003c/span\u003e or file.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e Eg. Invalid release/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eremoving mirrorlist with no valid mirrors: /var/cache/yum/base/mirrorlist.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eError: Cannot find a valid baseurl \u003cspan style=\"color:#008000;font-weight:bold\"\u003efor\u003c/span\u003e repo: base\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据查询到的信息是,没有正常的源.\u003c/p\u003e\n\u003ch3 id=\"解决问题-根据网上的源地址-修改一下\"\u003e解决问题 根据网上的源地址 修改一下:\u003c/h3\u003e\n\u003cp\u003e位置: \u003cem\u003e/etc/yum.repos.d/CentOS-Base.repo\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"修改内容\"\u003e修改内容:\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-conf\" data-lang=\"conf\"\u003e[base]\nname=CentOS-5.11 - Base\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=os\nbaseurl=http://vault.centos.org/5.11/os/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#released updates\n[updates]\nname=CentOS-5.11 - Updates\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=updates\nbaseurl=http://vault.centos.org/5.11/updates/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#packages used/produced in the build but not released\n[addons]\nname=CentOS-5.11 - Addons\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=addons\nbaseurl=http://vault.centos.org/5.11/addons/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#additional packages that may be useful\n[extras]\nname=CentOS-5.11 - Extras\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=extras\nbaseurl=http://vault.centos.org/5.11/extras/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-5.11 - Plus\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=centosplus\nbaseurl=http://vault.centos.org/5.11/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#contrib - packages by Centos Users\n[contrib]\nname=CentOS-5.11 - Contrib\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=contrib\nbaseurl=http://vault.centos.org/5.11/contrib/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e之后 再使用上面的yum 去更新,发现yum 语句是有问题的.\u003c/p\u003e","title":"Centos5不升级内核更新"},{"content":"前提 公司需要环境Centos5, 又不能升级内核.\n查了一下 大概是 需要 yum –exclude=kernel* update 或者修改 yum.conf\n测试一下 出现一个问题: Loaded plugins: fastestmirror, security Loading mirror speeds from cached hostfile YumRepo Error: All mirror URLs are not using ftp, http[s] or file. Eg. Invalid release/ removing mirrorlist with no valid mirrors: /var/cache/yum/base/mirrorlist.txt Error: Cannot find a valid baseurl for repo: base 根据查询到的信息是,没有正常的源.\n解决问题 根据网上的源地址 修改一下: 位置: /etc/yum.repos.d/CentOS-Base.repo\n修改内容: [base] name=CentOS-5.11 - Base #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=os baseurl=http://vault.centos.org/5.11/os/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #released updates [updates] name=CentOS-5.11 - Updates #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=updates baseurl=http://vault.centos.org/5.11/updates/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #packages used/produced in the build but not released [addons] name=CentOS-5.11 - Addons #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=addons baseurl=http://vault.centos.org/5.11/addons/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #additional packages that may be useful [extras] name=CentOS-5.11 - Extras #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=extras baseurl=http://vault.centos.org/5.11/extras/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #additional packages that extend functionality of existing packages [centosplus] name=CentOS-5.11 - Plus #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=centosplus baseurl=http://vault.centos.org/5.11/centosplus/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #contrib - packages by Centos Users [contrib] name=CentOS-5.11 - Contrib #mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=contrib baseurl=http://vault.centos.org/5.11/contrib/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 之后 再使用上面的yum 去更新,发现yum 语句是有问题的.\n正确的命令是: yum --exclude=kernel\\* update 或者 yum -x 'kernel*' update 确认是否生效 首先 yum update 内容可以看到 安装内容中 包含 \u0026lsquo;kernel\u0026rsquo; 信息.\n之后 执行上句命令后,可以看到 更新信息里没有 \u0026lsquo;kernel\u0026rsquo; .\n最后可以确定,这个方案是有效的.\n","permalink":"http://localhost:1313/aLong/posts/centos5%E4%B8%8D%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E6%9B%B4%E6%96%B0/","summary":"\u003ch3 id=\"前提\"\u003e前提\u003c/h3\u003e\n\u003cp\u003e公司需要环境Centos5, 又不能升级内核.\u003c/p\u003e\n\u003cp\u003e查了一下 大概是 需要 \u003ccode\u003eyum –exclude=kernel* update\u003c/code\u003e   或者修改 yum.conf\u003c/p\u003e\n\u003ch3 id=\"测试一下-出现一个问题\"\u003e测试一下 出现一个问题:\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLoaded plugins: fastestmirror, security\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLoading mirror speeds from cached hostfile\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eYumRepo Error: All mirror URLs are not using ftp, http\u003cspan style=\"color:#666\"\u003e[\u003c/span\u003es\u003cspan style=\"color:#666\"\u003e]\u003c/span\u003e or file.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e Eg. Invalid release/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eremoving mirrorlist with no valid mirrors: /var/cache/yum/base/mirrorlist.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eError: Cannot find a valid baseurl \u003cspan style=\"color:#008000;font-weight:bold\"\u003efor\u003c/span\u003e repo: base\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据查询到的信息是,没有正常的源.\u003c/p\u003e\n\u003ch3 id=\"解决问题-根据网上的源地址-修改一下\"\u003e解决问题 根据网上的源地址 修改一下:\u003c/h3\u003e\n\u003cp\u003e位置: \u003cem\u003e/etc/yum.repos.d/CentOS-Base.repo\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"修改内容\"\u003e修改内容:\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-conf\" data-lang=\"conf\"\u003e[base]\nname=CentOS-5.11 - Base\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=os\nbaseurl=http://vault.centos.org/5.11/os/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#released updates\n[updates]\nname=CentOS-5.11 - Updates\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=updates\nbaseurl=http://vault.centos.org/5.11/updates/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#packages used/produced in the build but not released\n[addons]\nname=CentOS-5.11 - Addons\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=addons\nbaseurl=http://vault.centos.org/5.11/addons/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#additional packages that may be useful\n[extras]\nname=CentOS-5.11 - Extras\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=extras\nbaseurl=http://vault.centos.org/5.11/extras/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-5.11 - Plus\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=centosplus\nbaseurl=http://vault.centos.org/5.11/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\n#contrib - packages by Centos Users\n[contrib]\nname=CentOS-5.11 - Contrib\n#mirrorlist=http://mirrorlist.centos.org/?release=5.11\u0026amp;arch=$basearch\u0026amp;repo=contrib\nbaseurl=http://vault.centos.org/5.11/contrib/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e之后 再使用上面的yum 去更新,发现yum 语句是有问题的.\u003c/p\u003e","title":"Centos5不升级内核更新"},{"content":"Laradock 安装与使用 官网\nGitHub: https://github.com/laradock/laradock\n要求 Git Docker \u0026gt;= 17.12 项目的位置 已有项目情况: git submodule add https://github.com/Laradock/laradock.git 克隆到项目根目录. 结构 :\nproject-a laradock-a project-b laradock-b 没有项目情况: git clone https://github.com/laradock/laradock.git 克隆后,在同级部署项目. laradock project-x project-y 启动环境 clone下来还没有生成.\n进入laradock目录,编辑Web服务器站点配置. cp env-exalpme .env 环境是laradock环境,里面可以对相应的版本,配置进行修改. 例如指定mysql版本为5.7 ,vim .env ,搜索到mysql部分, 修改MYSQL_VERSION=5.7.26 保存退出.(这里还没生成容器前可以统一配置好需要的环境,再生成容器.)\n例如我们需要启动环境需要 mysql,redis,nginx.\n执行 docker-compose up -d nginx mysql redis\n经过漫长等待后,可以得到我们想要的环境,通过 docker ps 或者 docker-compose ps 查看容器.\n如果先生成容器,在之后编辑环境时,需要停掉容器,修改完 build之后 再start 容器. 例如修改nginx:\ndocker-compose stop nginx 修改.env 或者 nginx conf docker-compose build nginx (完全重建,加参数: \u0026ndash;no-cache) docker-compose start nginx Nginx 配置项目 我们再laradock中,进入nginx/sites/ 下.复制laravel.conf.example 命名为我们的项目.\ncp laravel.conf.example Myblog.conf\n我们在Myblog.conf 配置nginx 具体信息.这里与配置Vhost一样的操作.\n修改完成后,需要build nginx(重建nginx容器).\n项目配置数据库 laravel项目, .env 中 此项需要改为DB_HOST=mysql,其他参数按照容器mysql配置账号密码等. Redis 修改类似.\n项目执行php artisan 方式 在laravel 需要执行 php artisan命令时,我们进入到workspace容器,\ndocker-compose exec workspace bash\n进入workkspace后,就可以像以前一样进入项目目录中可以执行.\n也可以通过开启ssh.连接workspace 执行.\n关闭所有正在运行的容器 docker-compose stop\n删除所有现有容器 docker-compose down\n其他内容请详见手册吧\n","permalink":"http://localhost:1313/aLong/posts/laradock%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","summary":"\u003ch3 id=\"laradock-安装与使用\"\u003eLaradock 安装与使用\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://laradock.io\"\u003e官网\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGitHub: \u003ca href=\"https://github.com/laradock/laradock\"\u003ehttps://github.com/laradock/laradock\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"要求\"\u003e要求\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eDocker \u0026gt;= 17.12\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"项目的位置\"\u003e项目的位置\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e已有项目情况: \u003ccode\u003egit submodule add https://github.com/Laradock/laradock.git\u003c/code\u003e 克隆到项目根目录.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e结构 :\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eproject-a\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003elaradock-a\u003c/li\u003e\n\u003cli\u003eproject-b\n\u003cul\u003e\n\u003cli\u003elaradock-b\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e没有项目情况: \u003ccode\u003egit clone https://github.com/laradock/laradock.git\u003c/code\u003e 克隆后,在同级部署项目.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003elaradock\u003c/li\u003e\n\u003cli\u003eproject-x\u003c/li\u003e\n\u003cli\u003eproject-y\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"启动环境\"\u003e启动环境\u003c/h3\u003e\n\u003cp\u003eclone下来还没有生成.\u003c/p\u003e\n\u003cp\u003e进入laradock目录,编辑Web服务器站点配置. \u003ccode\u003ecp env-exalpme .env\u003c/code\u003e\n环境是laradock环境,里面可以对相应的版本,配置进行修改.\n例如指定mysql版本为5.7 ,\u003ccode\u003evim .env\u003c/code\u003e ,搜索到mysql部分, 修改\u003cstrong\u003eMYSQL_VERSION=5.7.26\u003c/strong\u003e 保存退出.(这里还没生成容器前可以统一配置好需要的环境,再生成容器.)\u003c/p\u003e\n\u003cp\u003e例如我们需要启动环境需要 mysql,redis,nginx.\u003c/p\u003e\n\u003cp\u003e执行 docker-compose up -d nginx mysql redis\u003c/p\u003e\n\u003cp\u003e经过漫长等待后,可以得到我们想要的环境,通过 docker ps 或者 docker-compose ps 查看容器.\u003c/p\u003e\n\u003cp\u003e如果先生成容器,在之后编辑环境时,需要停掉容器,修改完 build之后 再start 容器.\n例如修改nginx:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003edocker-compose stop nginx\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e修改.env 或者 nginx conf\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edocker-compose build nginx\u003c/code\u003e (完全重建,加参数: \u0026ndash;no-cache)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edocker-compose start nginx\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"nginx-配置项目\"\u003eNginx 配置项目\u003c/h3\u003e\n\u003cp\u003e我们再laradock中,进入nginx/sites/ 下.复制laravel.conf.example 命名为我们的项目.\u003c/p\u003e","title":"Laradock安装与使用"},{"content":"管理Hosts工具 SwitchHosts 地址: SwitchHosts\n开发工程中,针对不同项目设置不同的域名.\n办法很多,例如直接编辑hosts文件,通过环境工具提供的功能设置等.\n现在要安利一款便捷实用的工具. SwitchHosts!!\n为什么,首先这工具是多平台支持的,我们可以在不同系统中使用.如果之前是靠编辑hosts文件的话,那不同的hosts位置还需要记忆一下,当然这也算不了什么难事.\n他的有点不在于能简单编辑hosts文件,也有之前的记录,还可以通过url来读取云端的hosts信息.导入导出功能等. 总之又可以偷懒了.\n主界面:\n我们可以编辑不同host 分组,使用时打开开关按钮即可使用.\n示例中使用的My hosts中的配置\n配置界面:\n支持中文,主题黑白两色.\n","permalink":"http://localhost:1313/aLong/posts/switchhosts%E7%AE%A1%E7%90%86%E7%BC%96%E8%BE%91hosts%E5%B7%A5%E5%85%B7/","summary":"\u003ch2 id=\"管理hosts工具-switchhosts\"\u003e管理Hosts工具 SwitchHosts\u003c/h2\u003e\n\u003cp\u003e地址: \u003ca href=\"https://github.com/oldj/SwitchHosts\"\u003eSwitchHosts\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e开发工程中,针对不同项目设置不同的域名.\u003c/p\u003e\n\u003cp\u003e办法很多,例如直接编辑hosts文件,通过环境工具提供的功能设置等.\u003c/p\u003e\n\u003cp\u003e现在要安利一款便捷实用的工具. \u003ca href=\"https://github.com/oldj/SwitchHosts\"\u003eSwitchHosts\u003c/a\u003e!!\u003c/p\u003e\n\u003cp\u003e为什么,首先这工具是多平台支持的,我们可以在不同系统中使用.如果之前是靠编辑hosts文件的话,那不同的hosts位置还需要记忆一下,当然这也算不了什么难事.\u003c/p\u003e\n\u003cp\u003e他的有点不在于能简单编辑hosts文件,也有之前的记录,还可以通过url来读取云端的hosts信息.导入导出功能等. 总之又可以偷懒了.\u003c/p\u003e\n\u003cp\u003e主界面:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.ax1x.com/2019/08/14/mPOsoT.png\" alt=\"界面\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e我们可以编辑不同host 分组,使用时打开开关按钮即可使用.\u003cbr\u003e\n示例中使用的My hosts中的配置\u003c/p\u003e\n\u003cp\u003e配置界面:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://s2.ax1x.com/2019/08/14/mPOgW4.png\" alt=\"配置\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e支持中文,主题黑白两色.\u003c/p\u003e","title":"SwitchHosts管理编辑hosts工具"},{"content":"虚拟机安装 macOS 准备工作: VM关闭进程,利用macOS Unlocker修改VM使其能安装macOS系统, 执行程序 win-install.cmd 使用管理员权限运行脚本. 准备好macOS镜象. 利用VM创建虚机,系统类型选择macOS,版本号选择与下载的镜象版本相同. 装系统: 启动虚拟机,并通过cdrom加载镜象. 首次安装需要先利用系统内硬盘工具格式化硬盘,之后利用安装工具进行系统安装. 异常问题: 开启虚拟机弹出错误:vcpu-0 错误. 修改虚机镜象文件.vmx 在smc.present = “TRUE”下面插入一行代码: smc.version = 0\n不能正常登陆APPID 需要修改虚拟机,利用Chameleon Wizard 伪造设备信息. 保存 生成的信息 去修改镜象所在文件下的.vmx\n修改 board-id.reflectHost = \u0026ldquo;TRUE\u0026rdquo; 为FALSE,并在下面插入需要的伪造设备信息例子:\nboard-id = \u0026ldquo;Mac-94245B3640C91C81\u0026rdquo; hw.model.reflectHost = \u0026ldquo;FALSE\u0026rdquo; hw.model = \u0026ldquo;MacBook Pro\u0026rdquo; serialNumber.reflectHost = \u0026ldquo;FALSE\u0026rdquo; serialNumber = \u0026ldquo;C02JJ8B3DH2G\u0026rdquo; smbios.reflectHost = \u0026ldquo;FALSE\u0026rdquo;\n这段信息中的board-id 与 serialNumber 不要与例子的相同.其他可以参考.最后保存,重启.\n重启之后尝试是否可以登陆市场.\n","permalink":"http://localhost:1313/aLong/posts/vmware%E5%AE%89%E8%A3%85macos%E7%B3%BB%E7%BB%9F/","summary":"\u003ch2 id=\"虚拟机安装-macos\"\u003e虚拟机安装 macOS\u003c/h2\u003e\n\u003ch4 id=\"准备工作\"\u003e准备工作:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eVM关闭进程,利用macOS Unlocker修改VM使其能安装macOS系统, 执行程序 win-install.cmd 使用管理员权限运行脚本.\u003c/li\u003e\n\u003cli\u003e准备好macOS镜象.\u003c/li\u003e\n\u003cli\u003e利用VM创建虚机,系统类型选择macOS,版本号选择与下载的镜象版本相同.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"装系统\"\u003e装系统:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e启动虚拟机,并通过cdrom加载镜象.\u003c/li\u003e\n\u003cli\u003e首次安装需要先利用系统内硬盘工具格式化硬盘,之后利用安装工具进行系统安装.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"异常问题\"\u003e异常问题:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e开启虚拟机弹出错误:vcpu-0 错误.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e修改虚机镜象文件.vmx   在smc.present = “TRUE”下面插入一行代码:    smc.version = 0\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e不能正常登陆APPID\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e需要修改虚拟机,利用Chameleon Wizard 伪造设备信息. 保存 生成的信息 去修改镜象所在文件下的.vmx\u003c/p\u003e\n\u003cp\u003e修改 board-id.reflectHost = \u0026ldquo;TRUE\u0026rdquo; 为FALSE,并在下面插入需要的伪造设备信息例子:\u003c/p\u003e\n\u003cp\u003eboard-id = \u0026ldquo;Mac-94245B3640C91C81\u0026rdquo;\nhw.model.reflectHost = \u0026ldquo;FALSE\u0026rdquo;\nhw.model = \u0026ldquo;MacBook Pro\u0026rdquo;\nserialNumber.reflectHost = \u0026ldquo;FALSE\u0026rdquo;\nserialNumber = \u0026ldquo;C02JJ8B3DH2G\u0026rdquo;\nsmbios.reflectHost = \u0026ldquo;FALSE\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e这段信息中的board-id 与  serialNumber 不要与例子的相同.其他可以参考.最后保存,重启.\u003c/p\u003e\n\u003cp\u003e重启之后尝试是否可以登陆市场.\u003c/p\u003e","title":"VMware安装MacOS系统"},{"content":"Laravel5 数据库迁移笔记 创建迁移文件 命令: make:migration\n举例: php artisan make:migration create_users_table --create=users\n生成位置: 项目/database/migrations/下 文件名已时间开头,后面是自己创建迁移文件名字.\n\u0026ndash;creat 指定数据库中表的名字\n编辑迁移文件 打开迁移文件:\nuse Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateUsersTable extends Migration { /** * Run the migrations. * * @return void */ public function up() { Schema::create(\u0026#39;users\u0026#39;, function (Blueprint $table) { $table-\u0026gt;bigIncrements(\u0026#39;id\u0026#39;); $table-\u0026gt;string(\u0026#39;name\u0026#39;); $table-\u0026gt;string(\u0026#39;email\u0026#39;)-\u0026gt;unique(); $table-\u0026gt;timestamp(\u0026#39;email_verified_at\u0026#39;)-\u0026gt;nullable(); $table-\u0026gt;string(\u0026#39;password\u0026#39;); $table-\u0026gt;rememberToken(); $table-\u0026gt;timestamps(); }); } /** * Reverse the migrations. * * @return void */ public function down() { Schema::dropIfExists(\u0026#39;users\u0026#39;); } } 文件中有两个方法,up/down . 可以理解为创建执行时up方法,rollback时候是执行down方法. up方法中: 创建了7个字段,表明为 users. 创建字段操作 `$table-\u0026gt;` 后面加上字段类型 `string` ,指定字段名称`(\u0026#39;name\u0026#39;)` 字段被指 `-\u0026gt;comment(\u0026#39;名子\u0026#39;)`; 具体每个字段类型,以及其他属性定义,请查询手册. * ### 执行迁移文件 这个迁移文件是创建表,所以down是删除表.也就是当我们执行 `php artisan migrate:rollback` 回滚到上一步就是把这表删除(前提创建之后). 执行命令: `php artisan migrate` 执行迁移文件创建表单. 如果我们后悔创建:可以执行回滚. `php artisan migrate:rollback ` --step 指定回滚次数 `php artisan migrate:rollback --step=2` 执行回滚迁移2次钱. `php artisan migrate:reset` 回滚所有迁移 `php artisan migrate:fresh` 删除所有回滚 * ### 为前迁移文件修改字段,改名. 当我们上面的文件执行后,需要增加一个字段,那么就需要新建一个迁移文件.不要直接操作数据库. `php artisan make:migration add_id_to_users_table --table=users` 这里为users表新增身份证字段. 打开文件 新建身份证id列. 之后我们执行迁移文件.成功后就能看到新得ID字段已经出现.对于编辑和修改都可以. `$table-\u0026gt;renameColumn(\u0026#39;ID\u0026#39;, \u0026#39;id\u0026#39;)` 改名id 对应dorop 也需要dropColumn 此字段. 最后执行此迁移文件. ","permalink":"http://localhost:1313/aLong/posts/laravel5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/","summary":"\u003ch2 id=\"laravel5-数据库迁移笔记\"\u003eLaravel5 数据库迁移笔记\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=\"创建迁移文件\"\u003e创建迁移文件\u003c/h3\u003e\n\u003cp\u003e命令: \u003ccode\u003emake:migration\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e举例: \u003ccode\u003ephp artisan make:migration create_users_table --create=users\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e生成位置: 项目/database/migrations/下 文件名已时间开头,后面是自己创建迁移文件名字.\u003c/p\u003e\n\u003cp\u003e\u0026ndash;creat 指定数据库中表的名字\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"编辑迁移文件\"\u003e编辑迁移文件\u003c/h3\u003e\n\u003cp\u003e打开迁移文件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-php\" data-lang=\"php\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#008000;font-weight:bold\"\u003euse\u003c/span\u003e Illuminate\\Support\\Facades\\Schema;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#008000;font-weight:bold\"\u003euse\u003c/span\u003e Illuminate\\Database\\Schema\\Blueprint;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#008000;font-weight:bold\"\u003euse\u003c/span\u003e Illuminate\\Database\\Migrations\\Migration;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#008000;font-weight:bold\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#00f;font-weight:bold\"\u003eCreateUsersTable\u003c/span\u003e \u003cspan style=\"color:#008000;font-weight:bold\"\u003eextends\u003c/span\u003e Migration\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       \u003cspan style=\"color:#ba2121;font-style:italic\"\u003e/**\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        * Run the migrations.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        *\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        * @return void\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       \u003cspan style=\"color:#008000;font-weight:bold\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#008000;font-weight:bold\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#00f\"\u003eup\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e           Schema\u003cspan style=\"color:#666\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003ecreate\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;users\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#008000;font-weight:bold\"\u003efunction\u003c/span\u003e (Blueprint \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003ebigIncrements\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003estring\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003estring\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e)\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003eunique\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003etimestamp\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;email_verified_at\u0026#39;\u003c/span\u003e)\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003enullable\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003estring\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;password\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003erememberToken\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e               \u003cspan style=\"color:#19177c\"\u003e$table\u003c/span\u003e\u003cspan style=\"color:#666\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003etimestamps\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e           });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       \u003cspan style=\"color:#ba2121;font-style:italic\"\u003e/**\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        * Reverse the migrations.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        *\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        * @return void\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ba2121;font-style:italic\"\u003e        */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       \u003cspan style=\"color:#008000;font-weight:bold\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#008000;font-weight:bold\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#00f\"\u003edown\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e           Schema\u003cspan style=\"color:#666\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#7d9029\"\u003edropIfExists\u003c/span\u003e(\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;users\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e文件中有两个方法,up/down . 可以理解为创建执行时up方法,rollback时候是执行down方法.\n\nup方法中:\n    创建了7个字段,表明为 users.\n    \n    创建字段操作 `$table-\u0026gt;` 后面加上字段类型 `string` ,指定字段名称`(\u0026#39;name\u0026#39;)` 字段被指 `-\u0026gt;comment(\u0026#39;名子\u0026#39;)`; \n    \n    具体每个字段类型,以及其他属性定义,请查询手册.\n    \n\n\n* ### 执行迁移文件\n\n  这个迁移文件是创建表,所以down是删除表.也就是当我们执行 `php artisan migrate:rollback` 回滚到上一步就是把这表删除(前提创建之后).\n\n  执行命令: `php artisan migrate` 执行迁移文件创建表单.\n  \n  如果我们后悔创建:可以执行回滚. `php artisan migrate:rollback `  --step 指定回滚次数 `php artisan migrate:rollback --step=2` 执行回滚迁移2次钱.\n  \n  `php artisan migrate:reset` 回滚所有迁移\n  \n  `php artisan migrate:fresh` 删除所有回滚\n  \n  \n* ### 为前迁移文件修改字段,改名.\n当我们上面的文件执行后,需要增加一个字段,那么就需要新建一个迁移文件.不要直接操作数据库.\n\n    `php artisan make:migration add_id_to_users_table --table=users` \n    \n    这里为users表新增身份证字段.\n    \n    打开文件 新建身份证id列. \n    \n    之后我们执行迁移文件.成功后就能看到新得ID字段已经出现.对于编辑和修改都可以.\n\n    `$table-\u0026gt;renameColumn(\u0026#39;ID\u0026#39;, \u0026#39;id\u0026#39;)` 改名id\n    \n    对应dorop 也需要dropColumn 此字段.\n    \n    最后执行此迁移文件.\n\n\n    \n\u003c/code\u003e\u003c/pre\u003e","title":"数据库迁移"},{"content":"composer - laravel5 创建laravel项目： conposer create-project laravel/laravel=5.8.* --prefer-dist ./XXX\nlaravel=5.8.* 这里代表要部署5.8中最高版本 \u0026ndash;prefer-dist 参数代表优先下载zip\n安装vendor: composer install\ncomposer install --prefer-dist\n更新： composer update\ncomposer版本更新： composer self-update\n利用composer 创建laravel控制器： php artisan make:controller HomeController 会在http下 创建一Home的控制器\n如果存在分目录情况，需要指定目录： php artisan make:controller Home/HomeController\nLaravel config: 编写一些类的别名，controller中 use 简短的别名为目的。\n位置：config/app 存在一数组 aliases 在里面添加\n创建模型： 创建一个user 的model\nphp artisan make:model User\n指定目录加入目录即可\n获取项目路由： php artisan route:list\ncomposer在项目中安装三方库时候出现报错： 执行命令： composer Install\n返回错误： Your requirements could not be resolved to an installable set of packages.\n解决：\n使用 composer install --ignore-platform-reqs 命令设置忽略版本匹配然后再进行安装你所需要的composer包。\n","permalink":"http://localhost:1313/aLong/posts/composer%E7%AC%94%E8%AE%B0/","summary":"\u003ch3 id=\"composer---laravel5\"\u003ecomposer - laravel5\u003c/h3\u003e\n\u003ch4 id=\"创建laravel项目\"\u003e创建laravel项目：\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003econposer create-project laravel/laravel=5.8.* --prefer-dist  ./XXX\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003elaravel=5.8.* 这里代表要部署5.8中最高版本   \u0026ndash;prefer-dist  参数代表优先下载zip\u003c/p\u003e\n\u003ch4 id=\"安装vendor\"\u003e安装vendor:\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ecomposer install\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecomposer install --prefer-dist\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"更新\"\u003e更新：\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ecomposer update\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"composer版本更新\"\u003ecomposer版本更新：\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ecomposer self-update\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"利用composer-创建laravel控制器\"\u003e利用composer 创建laravel控制器：\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ephp artisan make:controller HomeController\u003c/code\u003e\n会在http下 创建一Home的控制器\u003c/p\u003e\n\u003cp\u003e如果存在分目录情况，需要指定目录：\n\u003ccode\u003ephp artisan make:controller Home/HomeController\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"laravel-config\"\u003eLaravel config:\u003c/h4\u003e\n\u003cp\u003e编写一些类的别名，controller中 use 简短的别名为目的。\u003c/p\u003e\n\u003cp\u003e位置：config/app    存在一数组 aliases  在里面添加\u003c/p\u003e\n\u003ch4 id=\"创建模型\"\u003e创建模型：\u003c/h4\u003e\n\u003cp\u003e创建一个user 的model\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ephp artisan make:model User\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e指定目录加入目录即可\u003c/p\u003e\n\u003ch4 id=\"获取项目路由\"\u003e获取项目路由：\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ephp artisan route:list\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"composer在项目中安装三方库时候出现报错\"\u003ecomposer在项目中安装三方库时候出现报错：\u003c/h4\u003e\n\u003cp\u003e执行命令： \u003ccode\u003ecomposer Install\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e返回错误： Your requirements could not be resolved to an installable set of packages.\u003c/p\u003e","title":"Composer笔记"},{"content":"最近找素材收集一些站点 无版权对于我们来说可以放心使用 列表如下：\nhttp://www.pexels.com/\nhttp://www.gratisography.com/　https://visualhunt.com/\nhttp://finda.photo\nhttp://cupcake.nilssonlee.se/\nhttps://www.photock.jp/\nhttp://pngimg.com/\nhttp://www.designerspics.com\nhttp://kaboompics.com/\nhttps://pixabay.com/\nhttps://visualhunt.com/\nhttp://finda.photo\nhttp://www.freemagebank.com/\nhttps://stocksnap.io/\nhttp://picjumbo.com/\nhttp://stokpic.com/\nhttps://cn.freeimages.com/\nhttp://www.imcreator.com/free\nhttps://www.piqsels.com/zh\nhttps://magdeleine.co/browse/\nhttps://colorhub.me/\nhttps://picjumbo.com/\nhttp://streetwill.co/\nhttps://www.foodiesfeed.com/\nhttp://www.peakpx.com/\nhttp://www.polayoutu.com/collections\nhttps://negativespace.co/\nhttps://freeforcommercialuse.net/\nhttps://mmtstock.com/\n","permalink":"http://localhost:1313/aLong/posts/%E6%97%A0%E7%89%88%E6%9D%83%E7%B4%A0%E6%9D%90%E7%AB%99%E7%82%B9/","summary":"\u003ch4 id=\"最近找素材收集一些站点\"\u003e最近找素材收集一些站点\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e无版权对于我们来说可以放心使用\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e列表如下：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.pexels.com/\"\u003ehttp://www.pexels.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.gratisography.com/\"\u003ehttp://www.gratisography.com/\u003c/a\u003e　\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://visualhunt.com/\"\u003ehttps://visualhunt.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://finda.photo\"\u003ehttp://finda.photo\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://cupcake.nilssonlee.se/\"\u003ehttp://cupcake.nilssonlee.se/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.photock.jp/\"\u003ehttps://www.photock.jp/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://pngimg.com/\"\u003ehttp://pngimg.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.designerspics.com\"\u003ehttp://www.designerspics.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://kaboompics.com/\"\u003ehttp://kaboompics.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://pixabay.com/\"\u003ehttps://pixabay.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://visualhunt.com/\"\u003ehttps://visualhunt.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://finda.photo\"\u003ehttp://finda.photo\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.freemagebank.com/\"\u003ehttp://www.freemagebank.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://stocksnap.io/\"\u003ehttps://stocksnap.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://picjumbo.com/\"\u003ehttp://picjumbo.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://stokpic.com/\"\u003ehttp://stokpic.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://cn.freeimages.com/\"\u003ehttps://cn.freeimages.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.imcreator.com/free\"\u003ehttp://www.imcreator.com/free\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.piqsels.com/zh\"\u003ehttps://www.piqsels.com/zh\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://magdeleine.co/browse/\"\u003ehttps://magdeleine.co/browse/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://colorhub.me/\"\u003ehttps://colorhub.me/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://picjumbo.com/\"\u003ehttps://picjumbo.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://streetwill.co/\"\u003ehttp://streetwill.co/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.foodiesfeed.com/\"\u003ehttps://www.foodiesfeed.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.peakpx.com/\"\u003ehttp://www.peakpx.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.polayoutu.com/collections\"\u003ehttp://www.polayoutu.com/collections\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://negativespace.co/\"\u003ehttps://negativespace.co/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://freeforcommercialuse.net/\"\u003ehttps://freeforcommercialuse.net/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://mmtstock.com/\"\u003ehttps://mmtstock.com/\u003c/a\u003e\u003c/p\u003e","title":"无版权素材站点"},{"content":"多tag 文章中 多tag时,无法直接, 空格这种.\n方式一:\ntags: [tag1,tag2]\n方式二:\ntags: - tag1 - tag2 ","permalink":"http://localhost:1313/aLong/posts/hexo%E7%AC%94%E8%AE%B0/","summary":"\u003ch3 id=\"多tag\"\u003e多tag\u003c/h3\u003e\n\u003cp\u003e文章中 多tag时,无法直接, 空格这种.\u003c/p\u003e\n\u003cp\u003e方式一:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etags: [tag1,tag2]\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e方式二:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etags:\n- tag1\n- tag2 \n\u003c/code\u003e\u003c/pre\u003e","title":"Hexo笔记"},{"content":"Python Socket连接 5月中旬遇到一个功能,需要利用Python建立Socket tcp连接,于设备通讯发送相关数据.\n这块没接触,Python也是hello world水平.\n赶紧恶补一下:\nSocket是网络编程的一个抽象概念。\n通常我们用一个Socket表示“打开了一个网络链接”，打开一个Socket需要知道目标计算机的IP地址和端口号，再指定协议类型。\n服务端我也不知道什么样,这里只记录客户端的相关.\n这里我们得到一个文档说,需要建立socket SSL 连接,通过XML格式发送数据.\n非ssl的socket: import socket # 创建一个socket: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 建立连接: s.connect((\u0026#39;192.168.1.230\u0026#39;, 80)) SSL socket: 端口是3344,ssl跳过验证,如果验证参数需要修改.\nimport socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) c = ssl.wrap_socket(s, cert_reqs=ssl.CERT_NONE) try: c.connect((\u0026#39;192.168.1.230\u0026#39;, \u0026#39;3344\u0026#39;)) except: return 2 这下与那台设备可以正常通讯了,后面实现具体功能就ok了.\n","permalink":"http://localhost:1313/aLong/posts/python%E5%BB%BA%E7%AB%8Bsocketssl%E8%BF%9E%E6%8E%A5/","summary":"\u003ch3 id=\"python-socket连接\"\u003ePython Socket连接\u003c/h3\u003e\n\u003cp\u003e5月中旬遇到一个功能,需要利用Python建立Socket tcp连接,于设备通讯发送相关数据.\u003c/p\u003e\n\u003cp\u003e这块没接触,Python也是hello world水平.\u003c/p\u003e\n\u003cp\u003e赶紧恶补一下:\u003c/p\u003e\n\u003cp\u003eSocket是网络编程的一个抽象概念。\u003c/p\u003e\n\u003cp\u003e通常我们用一个Socket表示“打开了一个网络链接”，打开一个Socket需要知道目标计算机的IP地址和端口号，再指定协议类型。\u003c/p\u003e\n\u003cp\u003e服务端我也不知道什么样,这里只记录客户端的相关.\u003c/p\u003e\n\u003cp\u003e这里我们得到一个文档说,需要建立socket SSL 连接,通过XML格式发送数据.\u003c/p\u003e\n\u003ch4 id=\"非ssl的socket\"\u003e非ssl的socket:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#00f;font-weight:bold\"\u003esocket\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 创建一个socket:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003es \u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e socket\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003esocket(socket\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003eAF_INET, socket\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003eSOCK_STREAM)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#408080;font-style:italic\"\u003e# 建立连接:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003es\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003econnect((\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;192.168.1.230\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#666\"\u003e80\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"ssl-socket\"\u003eSSL socket:\u003c/h4\u003e\n\u003cp\u003e端口是3344,ssl跳过验证,如果验证参数需要修改.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\";-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#00f;font-weight:bold\"\u003esocket\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e s \u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e socket\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003esocket(socket\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003eAF_INET, socket\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003eSOCK_STREAM)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e c \u003cspan style=\"color:#666\"\u003e=\u003c/span\u003e ssl\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003ewrap_socket(s, cert_reqs\u003cspan style=\"color:#666\"\u003e=\u003c/span\u003essl\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003eCERT_NONE)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#008000;font-weight:bold\"\u003etry\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    c\u003cspan style=\"color:#666\"\u003e.\u003c/span\u003econnect((\u003cspan style=\"color:#ba2121\"\u003e\u0026#39;192.168.1.230\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#ba2121\"\u003e\u0026#39;3344\u0026#39;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#008000;font-weight:bold\"\u003eexcept\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#008000;font-weight:bold\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#666\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这下与那台设备可以正常通讯了,后面实现具体功能就ok了.\u003c/p\u003e","title":"Python建立SocketSSL连接"},{"content":"目的 安装python3.7.3 安装pip\n准备工作 系统内置python2.X,去除默认python的软链, sudo rm /usr/bin/python 安装一些软件包\u0026amp;软件包保持最新状态. sudo apt-get update\nsudo apt-get install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget\n安装Python 通过编译安装python\n默认我下载在home里, cd\n下载新python文件, wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz 解压文件, tar zxf Python-3.7.3.tgz\n把这个文件拷贝到放置的位置. 这里我放到/usr/local/python mkdir -p /usr/local/python\n进入这个目录, 执行 ./configure --enable-optimizations 之后执行 sudo make -j 8 这里8根据设备cpu核心数来的,不知道你可以写1(手动滑稽)\nmake之后 该 make install 嘛? NO! 是 sudo make altinstall\n装完之后, 可以尝试 python \u0026ndash;version 看看有没有, 如果没有或者版本不对.可能是准备里你没有删除 /usr/bin/python 或者这个不存在. 需要手动添加一下,我这个是没有给我创建成功.\nsudo ln -s /usr/local/Python-3.7.3/python /usr/bin/python\n这里版本是3.7.3版本的python已经好了,但我发现没有pip.那我只好装一下pip.\n安装pip 同样在home目录下载: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\n下载完成后, 执行 python get-pip.py 我遇到一个问题是: Command \u0026rsquo;lsb_release -a\u0026rsquo; returned non-zero exit status 1 查了一下,大概意思是lsb_release上的问题,这里python2.X用到的(Ubutun自带2.X),那我解决办法是干掉他 sudo rm -f /usr/bin/lsb_release\n重新执行上面的命令,ok 已经安装上pip. 到此结束.\n","permalink":"http://localhost:1313/aLong/posts/ubutun16-04%E5%AE%89%E8%A3%85python/","summary":"\u003ch3 id=\"目的\"\u003e目的\u003c/h3\u003e\n\u003cp\u003e安装python3.7.3\n安装pip\u003c/p\u003e\n\u003ch3 id=\"准备工作\"\u003e准备工作\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e系统内置python2.X,去除默认python的软链, \u003ccode\u003esudo rm /usr/bin/python\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e安装一些软件包\u0026amp;软件包保持最新状态.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003esudo apt-get update\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo apt-get install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"安装python\"\u003e安装Python\u003c/h3\u003e\n\u003cp\u003e通过编译安装python\u003c/p\u003e\n\u003cp\u003e默认我下载在home里, \u003ccode\u003ecd\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e下载新python文件, \u003ccode\u003ewget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e解压文件, \u003ccode\u003etar zxf Python-3.7.3.tgz\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e把这个文件拷贝到放置的位置. 这里我放到/usr/local/python \u003ccode\u003emkdir -p /usr/local/python\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e进入这个目录, 执行 \u003ccode\u003e./configure --enable-optimizations\u003c/code\u003e\n之后执行 \u003ccode\u003esudo make -j 8\u003c/code\u003e  这里8根据设备cpu核心数来的,不知道你可以写1(手动滑稽)\u003c/p\u003e\n\u003cp\u003emake之后 该 \u003cdel\u003emake install\u003c/del\u003e 嘛? NO! 是 \u003ccode\u003esudo make altinstall\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e装完之后, 可以尝试 python \u0026ndash;version 看看有没有, 如果没有或者版本不对.可能是准备里你没有删除 /usr/bin/python 或者这个不存在.\n需要手动添加一下,我这个是没有给我创建成功.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo ln -s /usr/local/Python-3.7.3/python /usr/bin/python\u003c/code\u003e\u003c/p\u003e","title":"Ubutun16.04安装Python"},{"content":"变量 var 声明,支持类型判断.\nvar name string string类型 name\nvar s string 值初始化\nvar age = 20 age 类型自动推断\nheight := 165 简短声明(仅限函数使用)\ni,j,k := 3.8,true,100 声明一组变量\n_, res := 123,321 _特殊变量名,赋予他的值会被丢弃\n常量 const 声明\nconst Pi = 3.14 声明一个常量Pi\nconst( apple = \u0026#34;fruit\u0026#34; banana ) banana 常量未定义初始化值会与apple值相同\n数据类型 boolean,整型,浮点型,字符串,错误\n布尔 bool 初始化默认fasle\n整型\nint8,int16,int32,int64 (有符号)\nuint8(byte),uint16,uint32(rune),uint64 (无符号)\nuintptr\nbyte,rune 与uint8,uint32别名\n整形初始化默认值0\n浮点型\nfloat32,float64(默认浮点类型)\ncomplex64,complex128\nfloat32,float64 初始化默认值0\n字符串\n双引号或``,UTF8编码,\\转义\n初始化默认值\u0026quot;\u0026quot;\n修改需要转换类型为 rune或byte 操作后再转换\n数组\n长度非负整数\nvar arr = [10]int{1,2,3,4} 声明数组\n切片 slice\n切片默认初始化前nil\ns1 := make([]int,3,5) 声明切片\nappend() 尾部追加元素\n切片长度是包含的元素个数, 容量是能存储的元素个数.\nMap\nkV结构集合\nm := make(map[string]int) { \u0026#34;blue\u0026#34;: 1, \u0026#34;red\u0026#34;: 2 } delete(m,red) 删除map中一项\nm[\u0026quot;orange\u0026quot;] = 3 增加一项\nm[\u0026quot;blue\u0026quot;] = 4 更新一项\nrange 遍历map,slice\n``` for i,v := range m { fmt.Println(i,v) } ``` 函数 func sub(x,y int) (z int) { z = x - y return z } 声明一个方法sub,参数x,y为int型, z返回参数 int型\n函数无返回值可不声明,参数也可是函数.\n可以传指针或传引用操作\n...int 表示传递变长的参数\ndefer 关键字 在函数最后执行动作的声明(延迟代码)\n局部函数声明修改不影响全局,若全局有同名变量时,内部赋值会改变全局变量(非声明).\n方法 方法是特殊的函数,区别于方法有前置实例接收参数(receiver)\n接口 一种抽象的类型\ntype I interface { Get() int Put(int) } 声明时,不能有字段,不能自定义方法,只声明方法,不实习现.\n//实现接口: func f(p I) { fmt.Println(p.get()) p.Out(1) } 接收一个接口类型作为参数\np实现了接口I,Get(),Put()方法.\n","permalink":"http://localhost:1313/aLong/posts/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","summary":"\u003ch3 id=\"变量\"\u003e变量\u003c/h3\u003e\n\u003cp\u003evar 声明,支持类型判断.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evar name string\u003c/code\u003e    string类型 name\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evar s string\u003c/code\u003e       值初始化\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evar age = 20\u003c/code\u003e     age 类型自动推断\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eheight := 165\u003c/code\u003e    简短声明(仅限函数使用)\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ei,j,k := 3.8,true,100\u003c/code\u003e 声明一组变量\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e_, res := 123,321\u003c/code\u003e _特殊变量名,赋予他的值会被丢弃\u003c/p\u003e\n\u003ch3 id=\"常量\"\u003e常量\u003c/h3\u003e\n\u003cp\u003econst 声明\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003econst Pi = 3.14\u003c/code\u003e 声明一个常量Pi\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003econst(\n    apple = \u0026#34;fruit\u0026#34;\n    banana\n    )\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ebanana 常量未定义初始化值会与apple值相同\u003c/p\u003e\n\u003ch3 id=\"数据类型\"\u003e数据类型\u003c/h3\u003e\n\u003cp\u003eboolean,整型,浮点型,字符串,错误\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e布尔\nbool 初始化默认fasle\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e整型\u003c/p\u003e\n\u003cp\u003eint8,int16,int32,int64 (有符号)\u003c/p\u003e\n\u003cp\u003euint8(byte),uint16,uint32(rune),uint64 (无符号)\u003c/p\u003e\n\u003cp\u003euintptr\u003c/p\u003e\n\u003cp\u003ebyte,rune 与uint8,uint32别名\u003c/p\u003e\n\u003cp\u003e整形初始化默认值0\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e浮点型\u003c/p\u003e\n\u003cp\u003efloat32,float64(默认浮点类型)\u003c/p\u003e\n\u003cp\u003ecomplex64,complex128\u003c/p\u003e\n\u003cp\u003efloat32,float64 初始化默认值0\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e字符串\u003c/p\u003e\n\u003cp\u003e双引号或``,UTF8编码,\\转义\u003c/p\u003e\n\u003cp\u003e初始化默认值\u0026quot;\u0026quot;\u003c/p\u003e\n\u003cp\u003e修改需要转换类型为 rune或byte 操作后再转换\u003c/p\u003e","title":"Go学习笔记"},{"content":"redis笔记 单进程,默认16库,\nselect N 切换库\nflushdb 清空库\n类型 string 字符串 list 列表 set 集合 sorted set有序集合 hash哈希 一个字符串支持512M\n有序集合 每个元素会关联一个double类型分数。成员唯一，分数可以重复。\n常用命令 key： keys * exists key move key db 移除key 从库中 expire key 为key 设置过期时间 ttl key 查看多少秒过期，-1 永不过期， -2已过期 type key 查看类型 del key 删除 string： getrange key 0-N setrange key 0-N XXX 获取字符串范围内容， 设置范围内为XXX\nsetex 设置生命值多少秒 setnx key 设置一个不存在的key\nmset mget msetnx\nlist： lpush rpush lrange lpop rpop lindex llen lrem key 2 value 删除2个value ltrim key 0-N 截取并复制给key （其他的删除了） rpoplpush 弹出前面key的值 加入后面的key中 lset key index value 设置key中 index下标的值 linsert key before/afrer value1 value2 key中1值得前面后后面加入2值 set： sadd key value 添加到key集合 smembers key 查询集合 sismember key m 查询m是否在key集合中 scard key 集合ket的基数 spop key 随机移除一个元素并返回元素的值 srem key m 移除m从key的集合中 smove K1 K2 m 将k1的m一刀k2里 sinter key1 key2 交集 sunion key1 key2 并集 sdiff key1 key2 差集 hash： hset user name ali hset user age 33 设置user数据 hget user name 获取user.name hmset human name tom age 44 设置多数据 hmget human name age 获取多数据 hgetall human hdel human name 删除name hlen human 长度 hexists human age 是否存在 hkeys human 获取所有key hvals human 获取所有value hincrby hincrbyfloat hsetnx 不存在添加 zset： zadd key value：score 设置值的分数 zrange key zrangebyscore key min max （不包含 limit 升序 zrevrangebyscore 降序 zrem key value zcount key min max 范围内多少个 zscore key m 返回key 中m的分数值 zrevrange key start stop 降序展示 持久化： rdb aof rdb\n快照方式定期生成临时文件，从临时文件替换上次持久化的文件。数据不是非常敏感。 dump.rdb dump.rdb 关机会清空文件，备份需要导出到另一台机器。 设备启动会去读取domp.rdb来恢复数据（文件名可以设置）。 关闭rdb 设置save为空 save命令 bgsave后台异步快照 备份到dump.rdb 优势： 适合大规模莫恢复，完整性和一致性要求不高。 劣势： 意外down 最后一次备份不到。内存被克隆一份，2倍的性能膨胀。 aof\n日行形式记录每个写操作，将所有写指令记录。 appendonly yes 开启 注意flushdb all 这些东西也会记录操作。 同时存在两种备份，优先恢复aof文件，如果aof失败， 导入rbd备份数据。 aof文件损毁或异常时， 通过redis-check-aof程序修复后再恢复。 配置： appendfsync always/everysec/no 同步设置\nrewrite：\naof 采用文件追加方式，记录文件会越来越大，重写机智，aof 文件大小超过阈值时，会启动aof文件的内容压缩，只保留可恢复的最小指令。默认配置64M 事务：\nmulit 开启 语句 exec执行， discard 取消 语法错误时，全部没执行，如果设置错误，其他执行，错误的不执行。 监控 锁 乐观锁 悲观锁:\n悲观锁，锁表。 乐观锁，行信息版本更新。 谁先提交谁成功。 wacth 监控字段，执行事务，如果监控字段未出现变化，事务执行成功。 复制机制：\nmaster 写 slave读 配置slave为主 slaveof 主库id 端口 info replication 查看信息 从机不能写数据 方式 1主机 多从机\n主机down，从机待命。主机启动，从机继续同步主机。 从机端开，会变成master，除非配置文件规定。否则需要 slaveof 重新顶可以。 主机down后，如果从机某台执行 slaveof no one ，使当前从库变主库。 方式2 主机-\u0026gt;从机-\u0026gt;从机 相连\n方式3 哨兵\n监控主机是否down，down后根据投票选出从机转换主库。 配置中添加 sentinel.conf ，编写配置： sentinel monitor 主机配置 地址 端口 1 1标识投票 启动哨兵：redis-sentinel 哨兵配置 ","permalink":"http://localhost:1313/aLong/posts/redis%E7%AC%94%E8%AE%B0/","summary":"\u003ch2 id=\"redis笔记\"\u003eredis笔记\u003c/h2\u003e\n\u003cp\u003e单进程,默认16库,\u003c/p\u003e\n\u003cp\u003eselect  N  切换库\u003c/p\u003e\n\u003cp\u003eflushdb 清空库\u003c/p\u003e\n\u003ch3 id=\"类型\"\u003e类型\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003estring 字符串\u003c/li\u003e\n\u003cli\u003elist 列表\u003c/li\u003e\n\u003cli\u003eset 集合\u003c/li\u003e\n\u003cli\u003esorted set有序集合\u003c/li\u003e\n\u003cli\u003ehash哈希\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e一个字符串支持512M\u003c/p\u003e\n\u003cp\u003e有序集合 每个元素会关联一个double类型分数。成员唯一，分数可以重复。\u003c/p\u003e\n\u003ch3 id=\"常用命令\"\u003e常用命令\u003c/h3\u003e\n\u003ch5 id=\"key\"\u003ekey：\u003c/h5\u003e\n\u003cpre\u003e\u003ccode\u003ekeys *\n  \nexists key\n\nmove key db  移除key 从库中\n\nexpire key 为key 设置过期时间\n\nttl key 查看多少秒过期，-1 永不过期， -2已过期\n\ntype key 查看类型\n\ndel key 删除\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"string\"\u003estring：\u003c/h3\u003e\n\u003cp\u003egetrange key 0-N  setrange key 0-N XXX   获取字符串范围内容， 设置范围内为XXX\u003c/p\u003e\n\u003cp\u003esetex 设置生命值多少秒  setnx key 设置一个不存在的key\u003c/p\u003e\n\u003cp\u003emset mget msetnx\u003c/p\u003e\n\u003ch3 id=\"list\"\u003elist：\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003elpush rpush lrange\n \nlpop rpop\n \nlindex\n \nllen\n\nlrem key 2 value 删除2个value\n \nltrim key 0-N  截取并复制给key （其他的删除了）\n\nrpoplpush  弹出前面key的值 加入后面的key中\n\nlset key index value 设置key中 index下标的值\n\nlinsert key before/afrer value1 value2 key中1值得前面后后面加入2值 \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"set\"\u003eset：\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003esadd  key value 添加到key集合\n\nsmembers key 查询集合  \n\nsismember key m  查询m是否在key集合中\n\nscard key 集合ket的基数\n\nspop key 随机移除一个元素并返回元素的值\n\nsrem key m 移除m从key的集合中\n\nsmove K1 K2 m  将k1的m一刀k2里\n\nsinter key1 key2 交集\n\nsunion key1 key2 并集\n\nsdiff key1 key2 差集 \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"hash\"\u003ehash：\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003ehset user name ali \n\nhset user age 33     设置user数据\n\nhget user name  获取user.name\n\nhmset  human name tom age 44  设置多数据\n\nhmget human name age  获取多数据\n\nhgetall human  \n\nhdel human  name 删除name\n\nhlen human 长度\n\nhexists human age 是否存在\n\nhkeys human 获取所有key \n\nhvals  human 获取所有value \n\nhincrby  hincrbyfloat   \n\nhsetnx 不存在添加\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"zset\"\u003ezset：\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003ezadd key value：score 设置值的分数\n\nzrange key \n\nzrangebyscore key  min max      （不包含   limit   升序\n\nzrevrangebyscore 降序\n\nzrem key value \n\nzcount key min max  范围内多少个\n\nzscore key m 返回key 中m的分数值\n\nzrevrange key start stop 降序展示\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"持久化\"\u003e持久化：\u003c/h3\u003e\n\u003ch4 id=\"rdb-aof\"\u003erdb aof\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003erdb\u003c/p\u003e","title":"redis笔记"},{"content":"gulp gulp.js是一个前端构建工具。\n安装 npm 安装全局gulp，npm install -g gulp。（如果没有梯子，最好安装下cnpm） cnpm 安装 npm install -g cnpm --registry=https://registry.npm.taobao.org 安装完cnpm，下面所有npm操作替换cnpm 执行即可。 进入项目，初始化（npm init） 项目安装gulp，项目文件夹下，npm install --save-dev gulp。 (\u0026ndash;save-dev 加入此项目依赖中，不需要可取消这个参数) 项目根创建gulpfile.js文件，文件内创建任务测试。 var gulp = require(\u0026#39;gulp\u0026#39;); gulp.task(\u0026#39;default\u0026#39;,function(){ console.log(\u0026#39;hello world!\u0026#39;); }); 运行 gulp，可以看到默认执行，输出 hello world! 。测试成功。 gulp API 上面运行 gulp 执行default ，这个是gulp API。 [文档](https://www.gulpjs.com.cn/docs/api/) gulp工作方式 gulp.src 获取文件流,通过pipe方法导入到插件，插件处理的流通过pipe方法导入 gulp.dest中, gulp.dest 输出目标文件。\ngulp src gulp.src(globs[, options])\n输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。\n文档这意思看着有点费劲，理解为获取文件路径。gulp通过这个方法获取到处理的文件流。\n参数：\nglobs 文件匹配模式，匹配文件路径，文件名。 类型： string array options 额外可选参数 类型： object 额外参数需要看手册 gulp.dest gulp.dest(path[, options])\n能被 pipe 进来，并且将会写文件。并且重新输出（emits）所有数据，因此你可以将它 pipe 到多个文件夹。如果某文件夹不存在，将会自动创建它。\n理解为写文件，写入path路径文件。\n参数：\npath 文件写入路径 类型：string function options 额外可选参数 类型：object gulp.task gulp.task(name[, deps], fn)\n定义一个使用 Orchestrator 实现的任务（task）。\n用来定义任务，内部使用的是Orchestrator。\n参数：\nname 任务名字 deps 是当前任务需要的其他任务，一个数组。依赖任务，先于此任务执行。 类型：array fn 该函数定义任务所要执行的一些操作，把任务要执行的代码写在里面。 gulp.watch gulp.watch(glob[, opts], tasks) gulp.watch(glob[, opts, cb]) 监视文件，并且可以在文件发生改动时候做一些事情。\n参数：\nglob 文件匹配模式 类型 string array opts 可选配置 类型 object tasks 文件变动后执行的任务 类型 array cb 一个函数，文件发生变化时调用的函数。 类型 function Glob 匹配模式 (node-glob）参考语法\n匹配符 说明 * 匹配文件路径中的0个或多个字符，但不会匹配路径分割符， 除非分隔符出现在末尾 ** 匹配路径的0个会多个目录 及子目录 需要单独出现， 即他左右不能有其他的东西了如果出现在末尾，也能匹配文件 ？ 匹配文件路径中的一个字符（不能匹配路径分割符/） [...] 匹配方括号中 出现字符的任意一个，当方括号中第一个字符为^或!时， 则表示不匹配方括号中出现字符中的任意一个， 类似于js中正则表达式中的用法 !(pattern|pattern|pattern) 匹配任何与括号中给定的任意模式都不匹配 ？(pattern|pattern|pattern) 匹配括号中给定的任意模式0次或1次 +(pattern|pattern|pattern) 匹配括号中的至少一次 *(pattern|pattern|pattern) 匹配括号中给定的任意模式0次或多次 @(pattern|pattern|pattern) 匹配括号中 给定的任意模式一次 eg：glob 匹配 |能匹配 a.js,x.y,abc,abc/,但不能匹配a/b.js| |.* a.js,style.css,a.b,x.y //*.js 能匹配 a/b/c.js,x/y/z.js,不能匹配a/b.js,a/b/c/d.js ** 能匹配 abc,a/b.js,a/b/c.js,x/y/z,x/y/z/a.b,能用来匹配所有的目录和文件 a/**/z 能匹配 a/z,a/b/z,a/b/c/z,a/d/g/h/j/k/z a/**b/z 能匹配 a/b/z,a/sb/z,但不能匹配a/x/sb/z,因为只有单**单独出现才能匹配多级目录 ?.js 能匹配 a.js,b.js,c.js a?? 能匹配 a.b,abc,但不能匹配ab/,因为它不会匹配路径分隔符 [xyz].js 只能匹配 x.js,y.js,z.js,不会匹配xy.js,xyz.js等,整个中括号只代表一个字符 [^xyz].js 能匹配 a.js,b.js,c.js等,不能匹配x.js,y.js,z.js 多种匹配模式时，使用数组 gulp.src(['js/*.js','css/*.css','*.html'])\n数组中可以用 ！ 排除*(放在数组第一个无效)* gulp.src([*.js,'!b*.js'])\n编写一个任务 常用到压缩，写个压缩demo。 目录，根目录下有两个文件夹，dist空文件，src目录,src/js文件夹2个文件，common.js,demo.js。 任务目标，将js目录下的.js文件，压缩合并为new.min.js。之后将合并压缩的文件保存到dist/js/。\n我们在初始化后的项目中，先安装所需插件，gulp-rename（重命名插件）,gulp-uglify（压缩js插件），gulp-concat（合并文件插件）。 npm install gulp-rename gulp-uglify gulp-concat \u0026ndash;save-dev 编辑gulpfile.js var gulp=require(\u0026#39;gulp\u0026#39;); var rename= require(\u0026#39;gulp-rename\u0026#39;); //引入插件 var uglify= require(\u0026#39;gulp-uglify\u0026#39;); var concat= require(\u0026#39;gulp-concat\u0026#39;); gulp.task(\u0026#39;js\u0026#39;, function(){ //创建名为 js的任务 return gulp.src(\u0026#39;src/js/*.js\u0026#39;) //读取文件流 .pipe(concat()) //合并 .pipe(uglify()) //压缩 .pipe(rename({suffix: \u0026#39;.min\u0026#39;})) //重命名 .pipe(gulp.dest(\u0026#39;dist/js/\u0026#39;)) //输出到指定路径 }); 文件保存后，命令行执行任务： gulp js 。 可以看到Finshed时间，去dist目录可以看到合并压缩的文件已在里面。\ngulp插件 CSS压缩 gulp-minify-css Js压缩 gulp-uglify 重命名 gulp-rename 文件合并 gulp-concat 自动加载 gulp-load-plugins less编译 gulp-less sass编译 gulp-sass ","permalink":"http://localhost:1313/aLong/posts/gulp%E7%AC%94%E8%AE%B0/","summary":"\u003ch3 id=\"gulp\"\u003egulp\u003c/h3\u003e\n\u003cp\u003egulp.js是一个前端构建工具。\u003c/p\u003e\n\u003ch3 id=\"安装\"\u003e安装\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003enpm\u003c/li\u003e\n\u003cli\u003e安装全局gulp，\u003ccode\u003enpm install -g gulp\u003c/code\u003e。（如果没有梯子，最好安装下cnpm）\ncnpm 安装 \u003ccode\u003enpm install -g cnpm --registry=https://registry.npm.taobao.org\u003c/code\u003e\n安装完cnpm，下面所有npm操作替换cnpm 执行即可。\u003c/li\u003e\n\u003cli\u003e进入项目，初始化（npm init）\u003c/li\u003e\n\u003cli\u003e项目安装gulp，项目文件夹下，\u003ccode\u003enpm install --save-dev gulp\u003c/code\u003e。 (\u0026ndash;save-dev 加入此项目依赖中，不需要可取消这个参数)\u003c/li\u003e\n\u003cli\u003e项目根创建gulpfile.js文件，文件内创建任务测试。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003evar gulp = require(\u0026#39;gulp\u0026#39;);\ngulp.task(\u0026#39;default\u0026#39;,function(){\n    console.log(\u0026#39;hello world!\u0026#39;);\n});\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"6\"\u003e\n\u003cli\u003e运行 \u003ccode\u003egulp\u003c/code\u003e，可以看到默认执行，输出 hello world! 。测试成功。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"gulp-api\"\u003egulp API\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003e上面运行 gulp 执行default ，这个是gulp API。 [文档](https://www.gulpjs.com.cn/docs/api/) \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"gulp工作方式\"\u003egulp工作方式\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003egulp.src\u003c/code\u003e 获取文件流,通过\u003ccode\u003epipe\u003c/code\u003e方法导入到插件，插件处理的流通过\u003ccode\u003epipe\u003c/code\u003e方法导入 \u003ccode\u003egulp.dest\u003c/code\u003e中, \u003ccode\u003egulp.dest\u003c/code\u003e 输出目标文件。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003egulp src\n\u003ccode\u003egulp.src(globs[, options])\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e文档这意思看着有点费劲，理解为获取文件路径。gulp通过这个方法获取到处理的文件流。\u003c/p\u003e","title":"gulp笔记"},{"content":"Centos7时间相关 查看时间 date hwclock 硬件时间 timedatectl 各时间状态\n设置\u0026amp;更新服务时间 安装ntpdate yum install utp ntpdate\n设置同步 ntpdate cn.pool.ntp.org (time.windows.com) 地址看喜好\n设置硬件时间 hwclock \u0026ndash;systohc\n设置时区 timedatectl set-timezone Asia/Shanghai （上海）\ntimedatectl 很多设置，需要请查相关资料。\n","permalink":"http://localhost:1313/aLong/posts/centos7%E6%97%B6%E9%97%B4%E8%AE%BE%E7%BD%AE/","summary":"\u003ch3 id=\"centos7时间相关\"\u003eCentos7时间相关\u003c/h3\u003e\n\u003ch4 id=\"查看时间\"\u003e查看时间\u003c/h4\u003e\n\u003cp\u003edate\nhwclock 硬件时间\ntimedatectl  各时间状态\u003c/p\u003e\n\u003ch4 id=\"设置更新服务时间\"\u003e设置\u0026amp;更新服务时间\u003c/h4\u003e\n\u003cp\u003e安装ntpdate\n\u003ccode\u003eyum install utp ntpdate\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"设置同步\"\u003e设置同步\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003entpdate cn.pool.ntp.org\u003c/code\u003e        (time.windows.com) 地址看喜好\u003c/p\u003e\n\u003ch4 id=\"设置硬件时间\"\u003e设置硬件时间\u003c/h4\u003e\n\u003cp\u003ehwclock \u0026ndash;systohc\u003c/p\u003e\n\u003ch4 id=\"设置时区\"\u003e设置时区\u003c/h4\u003e\n\u003cp\u003etimedatectl set-timezone Asia/Shanghai  （上海）\u003c/p\u003e\n\u003cp\u003etimedatectl  很多设置，需要请查相关资料。\u003c/p\u003e","title":"Centos7时间设置"},{"content":"Centos7与之前不太一样 以前都是用iptables，公司服务器环境事7，凑巧不熟一台新服务。我为了测试，再本地虚机上装了一台。 这里默认防火墙是 firewall，其实为了省事还是可以安装一个iptables的。这里学习一下firewall一些操作。\n查看防火墙服务状态 systemctl status firewalld\n####查看f防火墙状态 firewall-cmd --state\n查看规则 firewall-cmd --list-all ####停止\u0026amp;开启防\u0026amp;重启火墙 systemctl stop firewalld.service systemctl start firewalld.service systemctl restart firewalld.service\n关闭防火墙 systemctl disable firewalld.service\n重载防火墙 firewall-cmd —reload\n查询开放端口 firewall-cmd --list-ports\n开放一个端口 例如tcp 8010 firewall-cmd \u0026ndash;zone=public \u0026ndash;add-port=80/tcp \u0026ndash;permanent\n–zone #作用域 –add-port=8010/tcp #添加端口，格式为：端口/通讯协议 –permanent #永久生效，没有此参数重启后失效\n查询某端口是否开放(8010) firewall-cmd --query-port=8010/tcp\n移除端口规则 firewall-cmd --permanent --remove-port=8010/tcp\n","permalink":"http://localhost:1313/aLong/posts/centos7%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/","summary":"\u003ch4 id=\"centos7与之前不太一样\"\u003eCentos7与之前不太一样\u003c/h4\u003e\n\u003cp\u003e以前都是用iptables，公司服务器环境事7，凑巧不熟一台新服务。我为了测试，再本地虚机上装了一台。\n这里默认防火墙是 firewall，其实为了省事还是可以安装一个iptables的。这里学习一下firewall一些操作。\u003c/p\u003e\n\u003ch4 id=\"查看防火墙服务状态\"\u003e查看防火墙服务状态\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003esystemctl status firewalld\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e####查看f防火墙状态\n\u003ccode\u003efirewall-cmd --state\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"查看规则\"\u003e查看规则\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003efirewall-cmd --list-all \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e####停止\u0026amp;开启防\u0026amp;重启火墙\n\u003ccode\u003esystemctl stop firewalld.service\u003c/code\u003e\n\u003ccode\u003esystemctl start firewalld.service\u003c/code\u003e\n\u003ccode\u003esystemctl restart firewalld.service\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"关闭防火墙\"\u003e关闭防火墙\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003esystemctl disable firewalld.service\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"重载防火墙\"\u003e重载防火墙\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003efirewall-cmd —reload\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"查询开放端口\"\u003e查询开放端口\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003efirewall-cmd --list-ports\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"开放一个端口-例如tcp-8010\"\u003e开放一个端口 例如tcp 8010\u003c/h4\u003e\n\u003cp\u003efirewall-cmd \u0026ndash;zone=public \u0026ndash;add-port=80/tcp \u0026ndash;permanent\u003c/p\u003e\n\u003cp\u003e–zone #作用域\n–add-port=8010/tcp #添加端口，格式为：端口/通讯协议\n–permanent #永久生效，没有此参数重启后失效\u003c/p\u003e\n\u003ch4 id=\"查询某端口是否开放8010\"\u003e查询某端口是否开放(8010)\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003efirewall-cmd --query-port=8010/tcp\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"移除端口规则\"\u003e移除端口规则\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003efirewall-cmd --permanent --remove-port=8010/tcp\u003c/code\u003e\u003c/p\u003e","title":"Centos7防火墙相关设置"},{"content":"Centos7启动级别 启动级别分为7个： 0 - 系统停机状态 1 - 单用户工作状态 2 - 多用户状态（没有NFS） 3 - 多用户状态（有NFS） 4 - 系统未使用，留给用户 5 - 图形界面 6 - 系统正常关闭并重新启动\n切换启动级别 之前一直都是在种端中输入指令 init3 切换启动级别。 设置永久启动3级别， vi /etc/inittab 把init3设置默认即可。\ncentos7 设置出现不同 runlevels被targets所取代，即CentOS7采用加载target的方式来替代之前的启动级别。 multi-user.target = init3 graphical.target = init5 我们日常实用图形窗口init5，我们不需要图形，可以切换到init3等启动级别上。 systemctl set-default multi-user.target 设置为init3 systemctl set-default graphical.target 设置为init5\n","permalink":"http://localhost:1313/aLong/posts/centos7%E5%90%AF%E5%8A%A8%E7%AD%89%E7%BA%A7%E8%AE%BE%E7%BD%AE/","summary":"\u003ch4 id=\"centos7启动级别\"\u003eCentos7启动级别\u003c/h4\u003e\n\u003cp\u003e启动级别分为7个：\n0 - 系统停机状态\n1 - 单用户工作状态\n2 - 多用户状态（没有NFS）\n3 - 多用户状态（有NFS）\n4 - 系统未使用，留给用户\n5 - 图形界面\n6 - 系统正常关闭并重新启动\u003c/p\u003e\n\u003ch4 id=\"切换启动级别\"\u003e切换启动级别\u003c/h4\u003e\n\u003cp\u003e之前一直都是在种端中输入指令 init3 切换启动级别。\n设置永久启动3级别， \u003ccode\u003evi /etc/inittab\u003c/code\u003e  把init3设置默认即可。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ecentos7 设置出现不同\u003c/strong\u003e\nrunlevels被targets所取代，即CentOS7采用加载target的方式来替代之前的启动级别。\nmulti-user.target  = init3\ngraphical.target    = init5\n我们日常实用图形窗口init5，我们不需要图形，可以切换到init3等启动级别上。\n\u003ccode\u003esystemctl set-default multi-user.target\u003c/code\u003e  设置为init3\n\u003ccode\u003esystemctl set-default graphical.target\u003c/code\u003e 设置为init5\u003c/p\u003e","title":"Centos7启动等级设置"},{"content":"Docker常用命令 说常用不如说自己用到的命令。\n容器相关 学习了一下docker，基础常用命令记录下。 ####docker run/新建并启动容器 这个run其实包含两个不走，先执行新建容器(docker create),接着启动容器(docker start)。敲两个是不是有点麻烦吧。\ndocker run xx [COMMAND]\n例子 docker run -it ubuntu:14.04 /bin/bash\n这里希望启动一个基于 ubuntu 14.04镜像 来创建一个容器，-t选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上，-i则让容器的标准输入保持打开。更多的命令选项可以通过man docker-run命令来查看。之后命令还有一项，启动一个bash终端。 这条命令涉及到很多知识了。 -参数 常用 -i -d -t -p， -d 是否在后台运行，-p 映射到本地主机端口。剩下的看手册来补下。\ndocker create \u0026amp;\u0026amp; docker start \u0026amp;\u0026amp; docker stop 创建，启动，停止。 有一个容易停止了，可以用 docker start XX容器 启动。 XX 可以是容器的ID，也可以是name。\ndocker rm 删除一个容器（最好先把这个容器停止了再删除）。 -f 可以强制删除。-v 删除与容器关联的卷（如果刚学习还真不知道什么是卷）。\ndocker attach 进入容器，如果开启了一个 -d 后台启动容器。 我们怎么进去看看？ docker attach XX容器 这个命令我学习时候用过，感觉有时候不太好使。命令执行完卡那不动。\ndocker exec 可以在容器内直接执行任意命令。 docker exec -it xx /bin/bash 这可以进入xx镜像，并打开bash。 相比这个比上面的attach 好多了。\ndocker ps 列出启动中的容器， docker ps -a 列出所有镜像。\n###仓库相关\ndocker images 列出本地镜像文件\ndocker rmi 删除本地镜像文件\ndocker seach xxx 在docker hub查询xxx 镜像\ndocker pull 像不像git？ docker pull xx 可以下载xx镜像到本地。 （还能联想到 push 吧？ commit ？ 这些吧）\ndocker login 登陆docker hub\ndocker push 推送本地镜像到docker hub上。\n数据相关 -v 在容器内创建数据卷 docker run -d -v /test ubuntu 在此镜像下创建一个test数据卷 也可以挂在主机目录为数据卷 docker run -d -v /usr/local/src:/opt/test ubuntu 将本地的/usr/lcoal/src 挂载到此镜象的 /opt/test 作为数据卷。 在本机修改，容器内可以看到。 这里可以增加参数来控制读写，默认读写。\nvolumes-from 数据卷容器 容器与容器间的数据挂在参数。 例如有个容器为 files ，通过另一个 test来挂在files。 docker run -it --volumes-from files --name test ubuntu --name 是为后者容器起名。这个名字叫test 挂在了files 容器的数据。\n端口映射，容器互联 -p \u0026amp;\u0026amp; -P docker run -itd -p 8080:80 --name web nginx:1.15 本机8080端口映射到容器80. -p 需要自己分配端口 -P Docker会随机映射一个49000~49900的端口\ndocker port 查看映射端口配置\nlink --link参数可以让容器之间安全地进行交互\n基本上了解到的命令吧，后续根据搭建环境以及使用中来丰富其他的命令和参数。\n","permalink":"http://localhost:1313/aLong/posts/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","summary":"\u003ch2 id=\"docker常用命令\"\u003eDocker常用命令\u003c/h2\u003e\n\u003cp\u003e说常用不如说自己用到的命令。\u003c/p\u003e\n\u003ch3 id=\"容器相关\"\u003e容器相关\u003c/h3\u003e\n\u003cp\u003e学习了一下docker，基础常用命令记录下。\n####docker run/新建并启动容器\n这个run其实包含两个不走，先执行新建容器(docker create),接着启动容器(docker start)。敲两个是不是有点麻烦吧。\u003c/p\u003e\n\u003cp\u003edocker run  xx [COMMAND]\u003c/p\u003e\n\u003cp\u003e例子 \u003ccode\u003edocker run -it ubuntu:14.04 /bin/bash\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e这里希望启动一个基于 ubuntu 14.04镜像 来创建一个容器，-t选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上，-i则让容器的标准输入保持打开。更多的命令选项可以通过man docker-run命令来查看。之后命令还有一项，启动一个bash终端。 这条命令涉及到很多知识了。\n-参数 常用 -i -d -t -p，   -d 是否在后台运行，-p 映射到本地主机端口。剩下的看手册来补下。\u003c/p\u003e\n\u003ch4 id=\"docker-create--docker-start--docker-stop\"\u003edocker create \u0026amp;\u0026amp; docker start \u0026amp;\u0026amp; docker stop\u003c/h4\u003e\n\u003cp\u003e创建，启动，停止。\n有一个容易停止了，可以用 docker start  XX容器 启动。 XX 可以是容器的ID，也可以是name。\u003c/p\u003e\n\u003ch4 id=\"docker-rm\"\u003edocker rm\u003c/h4\u003e\n\u003cp\u003e删除一个容器（最好先把这个容器停止了再删除）。\n-f 可以强制删除。-v 删除与容器关联的卷（如果刚学习还真不知道什么是卷）。\u003c/p\u003e\n\u003ch4 id=\"docker-attach\"\u003edocker attach\u003c/h4\u003e\n\u003cp\u003e进入容器，如果开启了一个 -d 后台启动容器。 我们怎么进去看看？  \u003ccode\u003edocker attach XX容器\u003c/code\u003e\n这个命令我学习时候用过，感觉有时候不太好使。命令执行完卡那不动。\u003c/p\u003e\n\u003ch4 id=\"docker-exec\"\u003edocker exec\u003c/h4\u003e\n\u003cp\u003e可以在容器内直接执行任意命令。\n\u003ccode\u003edocker exec -it xx /bin/bash\u003c/code\u003e    这可以进入xx镜像，并打开bash。 相比这个比上面的attach 好多了。\u003c/p\u003e","title":"Docker常用命令"},{"content":"Docker简介 一个能够把开发的应用程序自动部署到容器的开源引擎 三大概念：镜像（Image）容器（Container）仓库（Repository）\n具体信息请参考官方。官方概述（养成看文档习惯）\n安装环境 Ubuntu 16.04 LTS\nDocker安装 根据官方doc安装。官方doc 1.如果你之前装过，命令卸载。 sudo apt-get remove docker docker-engine docker.io containerd runc\n2.更新包索引 apt-get update\n3.安装包以允许apt通过HTTPS使用存储库: sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common （斜线换行，一条命令）\n4.添加Docker的官方GPG密钥: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88\n5.使用以下命令设置稳定存储库。要添加 夜间或测试存储库，请在下面的命令中的单词后添加单词nightly或test（或两者）stable。 $ sudo add-apt-repository \\ \u0026quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\u0026quot; (lsb_release -cs子命令返回Ubuntu发行版的名称)\n6.安装最新版本的Docker CE和containerd，或者转到下一步安装特定版本： sudo apt-get install docker-ce docker-ce-cli containerd.io\n7.运行hello-world 映像验证是否正确安装了Docker CE: sudo docker run hello-world (执行之后，返回docker的信息)\n至此，安装过程是结束了。\n","permalink":"http://localhost:1313/aLong/posts/ubutun%E4%B8%8B%E5%AE%89%E8%A3%85docker/","summary":"\u003ch3 id=\"docker简介\"\u003eDocker简介\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e一个能够把开发的应用程序自动部署到容器的开源引擎\n三大概念：镜像（Image）容器（Container）仓库（Repository）\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e具体信息请参考官方。\u003ca href=\"https://docs.docker.com/engine/docker-overview/\"\u003e官方概述\u003c/a\u003e（养成看文档习惯）\u003c/p\u003e\n\u003ch3 id=\"安装环境\"\u003e安装环境\u003c/h3\u003e\n\u003cp\u003eUbuntu 16.04 LTS\u003c/p\u003e\n\u003ch3 id=\"docker安装\"\u003eDocker安装\u003c/h3\u003e\n\u003cp\u003e根据官方doc安装。\u003ca href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\"\u003e官方doc\u003c/a\u003e\n1.如果你之前装过，命令卸载。\n\u003ccode\u003esudo apt-get remove docker docker-engine docker.io containerd runc\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e2.更新包索引\n\u003ccode\u003eapt-get update\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e3.安装包以允许apt通过HTTPS使用存储库:\n\u003ccode\u003esudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common\u003c/code\u003e\n（斜线换行，一条命令）\u003c/p\u003e\n\u003cp\u003e4.添加Docker的官方GPG密钥:\n\u003ccode\u003ecurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\u003c/code\u003e\n\u003ccode\u003esudo apt-key fingerprint 0EBFCD88\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e5.使用以下命令设置稳定存储库。要添加 夜间或测试存储库，请在下面的命令中的单词后添加单词nightly或test（或两者）stable。\n\u003ccode\u003e$ sudo add-apt-repository \\ \u0026quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\u0026quot;\u003c/code\u003e\n(lsb_release -cs子命令返回Ubuntu发行版的名称)\u003c/p\u003e\n\u003cp\u003e6.安装最新版本的Docker CE和containerd，或者转到下一步安装特定版本：\n\u003ccode\u003esudo apt-get install docker-ce docker-ce-cli containerd.io\u003c/code\u003e\u003c/p\u003e","title":"Ubutun下安装Docker"},{"content":"wordpress 之后 wordpress 使用很方便，但是折腾几次之后。由于一次意外，导致管理者把我的vps被停掉。虽然有些文章还是保留了。但是这次之后感觉自己还是找一个稳妥的家。连接hexo搭建的博客之后，打算自己来折腾一下。\n记录笔记环境 在windows上写笔记，环境目前是windows下操作。linux，mac系统中需要注意一些细节吧。存在提不到情况，先做好出现问题考虑自行排查。\n准备 看下hexo的安装提示。 hexo 需要Node.js 和 Git 。\n安装 Node.js 官网: 官网 widows，mac，linux 都有对应的安装方法。根据自己的环境来安装。 安装 Git 官网: 官网 根据自己环境安装。 安装Hexo 通过npm来安装 Hexo。 命令: npm install -g hexo-cli 什么鬼，通过这个命令发现没有实现正常安装。理由，我们在天朝。 解决方式： 替换国内npm源。 命令: npm install -g cnpm --registry=https://registry.npm.taobao.org 请注意不同系统在操作此命令时，需要一些设置。linux 如果使用下面命令需要自建软链。 cnpm ln -s /yourdir/bin/cnpm /usr/local/npm 下一步用cnpm 来安装 Hexo： cnpm install hexo-cli -g 验证hexo 是否安装： hexo v 会列出版本信息。 下面使用Hexo来创建blog： 创建项目文件夹。这里开始通过git bash来使用命令行操作。 进入项目文件夹，初始化。 hexo init （这里也可以，通过 hexo init 你的项目文件夹名 结果一样） 这里会看到目录有相关文件了。具体这些文件，看下 手册 是什么意思。 这时候其实已经是一个博客站点了。 命令 hexo g , hexo s 得到信息：Hexo is running at http：//lcoalhost:4000` 注意4000端口需要未被占用。 访问地址就可以看到初始化的站点了。 （不喜欢默认主题可以修改主题） 写文章 写文章需要先创建文档，这个文档默认生成在_post 文件夹下。\n命令 hexo new testdoc 得到信息： Created:···path/testdoc.md 文档的位置，需要编辑这个文档来写文章（Markdown文档）。 文档写好保存之后。 命令 hexo g , hexo s 之后我们访问之 localhost:4000 就能看到自己的新文章了。 推送到Git仓库，在线访问。 首先需要一个 GitHub ，注册账号。 创建一个与账户名一样的库， 用户名.github.io , 之后在项目文件夹中，编辑 _config.yml 配置文件。\ndeploy: type: git repo: https://github.com/用户名/用户名.github.io.git (我相信你能知道这个地址在哪里) branch: master 之前写过testdoc.md 这个文件。提交到git库上，命令： hexo d , 提交是，会弹出账号密码让你输入。接着得到提示： Deploy done: git。 这里我们就提交到库上了。 （账号密码提交比较麻烦，可以通过配置公钥来解决） 这里如果出现错误 Deployer not found：git ，需要安装一下。 命令 npm install hexo-deployer-git --save 这时候我们可以通过 用户名.github.io.git 这个地址访问到博客了。（不喜欢这个地址，可以通过域名来绑定）\n主题更换 默认的主题让我们觉得太不个性化了。还没有能力自己操刀编辑，怎么办？\n建议先看下文档.了解一下,培养看文档习惯.\n可以使用别人的主题，官网提供 提供一些，也可以通过网上其他人的推荐来使用自己喜欢的主题。 例如在官网地址上看到有一个名字是 Next(很多人有这个,或基于此主题修改). 点击可以语言并且访问. 地址 , 我们需要克隆到自己项目下 themes 文件下. 你可以下载zip到自己项目下解压,不过有些麻烦也不够B格.我们使用git操作.\n打开gitbash, 进入到自己项目下/themes 命令 git clone https://github.com/theme-next/hexo-theme-next.git . 执行完后,themes 下会有这个文件. 使用next 主题, 需要在 _config.yml 上面设置主题. theme: next 配置主题为next 之后通过命令 hexo g, hexo s. 两个命令后, 登陆localshot:4000 查看一下. 嗯,已经替换成功了.\n目前只是替换了主题,主题也是需要配置的,我们需要在 _config.yml 配置菜单等一些参数. 主题相关修改参数配置是需要在 项目/themes/languages/{language}.yml 具体配置希望你看下每个主题的README,或者文档来学习着自己修改.\n还要涉及到页面的问题,我们之前 hexo new xx文章 ,都是默认_post文件夹下, 如果我们要定义归档,友链,等页面.也是通过new 命令来实现的. 例如: 建立 tags页面 hexo new page tags 之后你会看到 项目下/source/ 会出现tags 文件夹,进入里面会有一个index.md .这个文件就是你需要的tags 页面.\n域名 我们觉得github 这个url不太喜欢,并且也很长.可以配置自己的域名. 首先我们需要一个自己的域名,通过万网什么的来购买一个.我是通过阿里云上万网购买的一个域名. 这里不详细来说明域名的购买.\n万网控制台里面,有域名的功能(例如阿里云,登陆后,控制台-\u0026gt;域名-\u0026gt;点击域名-\u0026gt;域名解析). 在github，xxx.github.io 点击 settings Custom domain 这里填写你的域名，save。\n此处注意：你配置完后，会看到库中存在一个文件，CNANE文件。如果你再次提交新文档，会发现你的配置域名无法访问了！ 原因：你本地文件没有这个CNAME，通过hexo d 方式 更新库文件后，CNAME没了。 **通过配置域名后，把这个文件下载到本地项目中，位置请注意：项目/source 下。不然hexo d 不会提交到库中。 ** 如果不搞定这个，那你每次hexo d 之后，都要改一次custom domain。（我想谁也不会每次都这么操作） 到这里基本上你这台电脑上，发布你的博客。更新，推送到github都没有问题。还有一个问题就是那么如果我换一台电脑怎么办？\n通过分支来完善博客 工作中使用版本控制器，很方便管理项目代码和文件。那么我们这个hexo 博客也需要这种方式来吧本地的hexo 博客项目推送到线上。如果过本地电脑出故障，或者更换电脑等情况下。我们依然可以通过clone到本地，进行发布博客。\n克隆博客 gitbash clone一份自己的博客(省略命令), 删除克隆后出.git 这个文件外其他文件。 把之前本地初始化项目中的文件都复制到此项目中。 新建分支 git branch hexo, git checkout hexo. 两条命令,新建分支,切换至hexo 分支. 在新分支中，提交我们刚才复制过来的文件。 git add --all 提交文件并push到远程。 git commit -m \u0026quot;mybolg files\u0026quot; , git push origin hexo 推送带云端。 这下完成了，不用担心换电脑。换电脑后，clone一下，继续可以发布。ps：git你需要自己装。 之后我们一直再这个 hexo 分支就好啦。每次hexo d 之后记得把新文件提交到hexo分支。 add commit push 三步骤不能忘。\n配置公钥 之前没提到这个，是因为我怕忘记密码，每次都手输入密码。也不是每个人都喜欢我这么操作。那可以选择配置公钥来解决提交时的认证。\ngitbash ssh-keygen 生成密钥，注意看信息密钥提示位置。 打开生成目录下的 id_res.pub 这个是公钥。打开复制里面的数据，复制。 需要粘贴到github settings-\u0026gt;SSH and GPG keys 里面。 测试一下配置 gitbash ssh -T git@github.com 得到信息 You\u0026rsquo;ve successfully authenticated, but GitHub does not provide shell access. 配置正常。\n改完这里还不可以，需要配置项目hexo配置文件了，还记得是哪个文件嘛？（ _config.yml） 之前我们用的是https，现在我们需要用ssh地址提交了。 4.修改 _config.yml 这段配置的 repo地址，看下之前参数和现在参数。\ndeploy: type: git #repo: https://github.com/chenweil/chenweil.github.io.git # https repo: git@github.com:chenweil/chenweil.github.io.git # ssh branch: master 到这里我们已经配置好，我们下次写完文章是 hexo d 不会让你输入密码了。 真的不用输入密码了吗? 你可能会遇到问题,怎么还需要认证?(因为我这环境出现了问题) 看下错误 : git push origin hexo fatal: HttpRequestException encountered. 如果你现者句话,那么需要你更新一下Windows的git凭证管理器.管理器地址\n到此基本的配置已经完成，文中只是简单的描述了基础工作。再哪方面出现问题需要通过文档和网络来查询问题。第一次接触此框架，还是好好看文档。你通过网络查询的很多结果存在一些问题。例如版本不同，环境不同等。最好的方法还是自己来分析，处理。养成好习惯，戒心浮气躁，坚持自己来解决问题。\n","permalink":"http://localhost:1313/aLong/posts/hexo%E5%8D%9A%E5%AE%A2%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","summary":"\u003ch3 id=\"wordpress-之后\"\u003ewordpress 之后\u003c/h3\u003e\n\u003cp\u003ewordpress 使用很方便，但是折腾几次之后。由于一次意外，导致管理者把我的vps被停掉。虽然有些文章还是保留了。但是这次之后感觉自己还是找一个稳妥的家。连接hexo搭建的博客之后，打算自己来折腾一下。\u003c/p\u003e\n\u003ch3 id=\"记录笔记环境\"\u003e记录笔记环境\u003c/h3\u003e\n\u003cp\u003e在windows上写笔记，环境目前是windows下操作。linux，mac系统中需要注意一些细节吧。存在提不到情况，先做好出现问题考虑自行排查。\u003c/p\u003e\n\u003ch3 id=\"准备\"\u003e准备\u003c/h3\u003e\n\u003cp\u003e看下hexo的安装提示。\n\u003cimg loading=\"lazy\" src=\"http://t1.aixinxi.net/o_1d7c68cm911cu1p74qfa133ikh2a.jpg-w.jpg\" alt=\"安装提示\"  title=\"前提\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003ehexo 需要Node.js 和 Git 。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e安装 Node.js\n官网:  \u003ca href=\"https://nodejs.org/en/download/\"\u003e官网\u003c/a\u003e\nwidows，mac，linux 都有对应的安装方法。根据自己的环境来安装。\u003c/li\u003e\n\u003cli\u003e安装 Git\n官网:  \u003ca href=\"https://git-scm.com/downloads/\"\u003e官网\u003c/a\u003e\n根据自己环境安装。\u003c/li\u003e\n\u003cli\u003e安装Hexo\n通过npm来安装 Hexo。\n命令:  \u003ccode\u003enpm install -g hexo-cli\u003c/code\u003e\n什么鬼，通过这个命令发现没有实现正常安装。理由，我们在天朝。\n解决方式： 替换国内npm源。\n命令:   \u003ccode\u003enpm install -g cnpm --registry=https://registry.npm.taobao.org\u003c/code\u003e\n请注意不同系统在操作此命令时，需要一些设置。linux 如果使用下面命令需要自建软链。  \u003ccode\u003ecnpm   ln -s /yourdir/bin/cnpm  /usr/local/npm\u003c/code\u003e\n下一步用cnpm 来安装 Hexo： \u003ccode\u003ecnpm install hexo-cli -g\u003c/code\u003e\n验证hexo 是否安装： \u003ccode\u003ehexo v\u003c/code\u003e  会列出版本信息。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"下面使用hexo来创建blog\"\u003e下面使用Hexo来创建blog：\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e创建项目文件夹。这里开始通过git bash来使用命令行操作。\u003c/li\u003e\n\u003cli\u003e进入项目文件夹，初始化。 \u003ccode\u003ehexo init\u003c/code\u003e （这里也可以，通过 \u003ccode\u003ehexo init 你的项目文件夹名\u003c/code\u003e 结果一样）\n这里会看到目录有相关文件了。具体这些文件，看下 \u003ca href=\"https://hexo.io/zh-cn/docs/setup\"\u003e手册\u003c/a\u003e 是什么意思。\n这时候其实已经是一个博客站点了。\u003c/li\u003e\n\u003cli\u003e命令 \u003ccode\u003ehexo g\u003c/code\u003e  , \u003ccode\u003ehexo s\u003c/code\u003e  得到信息：Hexo is running at http：//lcoalhost:4000` 注意4000端口需要未被占用。 访问地址就可以看到初始化的站点了。 \u003cem\u003e（不喜欢默认主题可以修改主题）\u003c/em\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"写文章\"\u003e写文章\u003c/h3\u003e\n\u003cp\u003e写文章需要先创建文档，这个文档默认生成在_post 文件夹下。\u003c/p\u003e","title":"Hexo博客安装与配置"},{"content":"","permalink":"http://localhost:1313/aLong/about/","summary":"","title":"About"}]