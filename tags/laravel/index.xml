<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Laravel on aLong Blog</title><link>http://localhost:1313/aLong/tags/laravel/</link><description>Recent content in Laravel on aLong Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 15 Aug 2019 10:01:03 +0000</lastBuildDate><atom:link href="http://localhost:1313/aLong/tags/laravel/index.xml" rel="self" type="application/rss+xml"/><item><title>Laradock安装与使用</title><link>http://localhost:1313/aLong/laradock%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 15 Aug 2019 10:01:03 +0000</pubDate><guid>http://localhost:1313/aLong/laradock%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>&lt;h3 id="laradock-安装与使用">Laradock 安装与使用&lt;/h3>
&lt;p>&lt;a href="https://laradock.io">官网&lt;/a>&lt;/p>
&lt;p>GitHub: &lt;a href="https://github.com/laradock/laradock">https://github.com/laradock/laradock&lt;/a>&lt;/p>
&lt;h3 id="要求">要求&lt;/h3>
&lt;blockquote>
&lt;ul>
&lt;li>Git&lt;/li>
&lt;li>Docker &amp;gt;= 17.12&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="项目的位置">项目的位置&lt;/h3>
&lt;ol>
&lt;li>已有项目情况: &lt;code>git submodule add https://github.com/Laradock/laradock.git&lt;/code> 克隆到项目根目录.&lt;/li>
&lt;/ol>
&lt;p>结构 :&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>project-a&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>laradock-a&lt;/li>
&lt;li>project-b
&lt;ul>
&lt;li>laradock-b&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>没有项目情况: &lt;code>git clone https://github.com/laradock/laradock.git&lt;/code> 克隆后,在同级部署项目.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;/blockquote>
&lt;ul>
&lt;li>laradock&lt;/li>
&lt;li>project-x&lt;/li>
&lt;li>project-y&lt;/li>
&lt;/ul>
&lt;h3 id="启动环境">启动环境&lt;/h3>
&lt;p>clone下来还没有生成.&lt;/p>
&lt;p>进入laradock目录,编辑Web服务器站点配置. &lt;code>cp env-exalpme .env&lt;/code>
环境是laradock环境,里面可以对相应的版本,配置进行修改.
例如指定mysql版本为5.7 ,&lt;code>vim .env&lt;/code> ,搜索到mysql部分, 修改&lt;strong>MYSQL_VERSION=5.7.26&lt;/strong> 保存退出.(这里还没生成容器前可以统一配置好需要的环境,再生成容器.)&lt;/p>
&lt;p>例如我们需要启动环境需要 mysql,redis,nginx.&lt;/p>
&lt;p>执行 docker-compose up -d nginx mysql redis&lt;/p>
&lt;p>经过漫长等待后,可以得到我们想要的环境,通过 docker ps 或者 docker-compose ps 查看容器.&lt;/p>
&lt;p>如果先生成容器,在之后编辑环境时,需要停掉容器,修改完 build之后 再start 容器.
例如修改nginx:&lt;/p>
&lt;ol>
&lt;li>&lt;code>docker-compose stop nginx&lt;/code>&lt;/li>
&lt;li>修改.env 或者 nginx conf&lt;/li>
&lt;li>&lt;code>docker-compose build nginx&lt;/code> (完全重建,加参数: &amp;ndash;no-cache)&lt;/li>
&lt;li>&lt;code>docker-compose start nginx&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="nginx-配置项目">Nginx 配置项目&lt;/h3>
&lt;p>我们再laradock中,进入nginx/sites/ 下.复制laravel.conf.example 命名为我们的项目.&lt;/p></description></item><item><title>数据库迁移</title><link>http://localhost:1313/aLong/laravel5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/</link><pubDate>Fri, 26 Jul 2019 14:30:25 +0000</pubDate><guid>http://localhost:1313/aLong/laravel5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/</guid><description>&lt;h2 id="laravel5-数据库迁移笔记">Laravel5 数据库迁移笔记&lt;/h2>
&lt;ul>
&lt;li>
&lt;h3 id="创建迁移文件">创建迁移文件&lt;/h3>
&lt;p>命令: &lt;code>make:migration&lt;/code>&lt;/p>
&lt;p>举例: &lt;code>php artisan make:migration create_users_table --create=users&lt;/code>&lt;/p>
&lt;p>生成位置: 项目/database/migrations/下 文件名已时间开头,后面是自己创建迁移文件名字.&lt;/p>
&lt;p>&amp;ndash;creat 指定数据库中表的名字&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="编辑迁移文件">编辑迁移文件&lt;/h3>
&lt;p>打开迁移文件:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#a6e22e">Illuminate\Support\Facades\Schema&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#a6e22e">Illuminate\Database\Schema\Blueprint&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#a6e22e">Illuminate\Database\Migrations\Migration&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CreateUsersTable&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> &lt;span style="color:#a6e22e">Migration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * Run the migrations.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * @return void
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">up&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Schema&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">create&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;users&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">Blueprint&lt;/span> $table) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">bigIncrements&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;id&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">string&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">string&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;email&amp;#39;&lt;/span>)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">unique&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">timestamp&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;email_verified_at&amp;#39;&lt;/span>)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">nullable&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">string&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;password&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">rememberToken&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $table&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">timestamps&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * Reverse the migrations.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> * @return void
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">down&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Schema&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">dropIfExists&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;users&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>文件中有两个方法,up/down . 可以理解为创建执行时up方法,rollback时候是执行down方法.

up方法中:
 创建了7个字段,表明为 users.
 
 创建字段操作 `$table-&amp;gt;` 后面加上字段类型 `string` ,指定字段名称`(&amp;#39;name&amp;#39;)` 字段被指 `-&amp;gt;comment(&amp;#39;名子&amp;#39;)`; 
 
 具体每个字段类型,以及其他属性定义,请查询手册.
 


* ### 执行迁移文件

 这个迁移文件是创建表,所以down是删除表.也就是当我们执行 `php artisan migrate:rollback` 回滚到上一步就是把这表删除(前提创建之后).

 执行命令: `php artisan migrate` 执行迁移文件创建表单.
 
 如果我们后悔创建:可以执行回滚. `php artisan migrate:rollback ` --step 指定回滚次数 `php artisan migrate:rollback --step=2` 执行回滚迁移2次钱.
 
 `php artisan migrate:reset` 回滚所有迁移
 
 `php artisan migrate:fresh` 删除所有回滚
 
 
* ### 为前迁移文件修改字段,改名.
当我们上面的文件执行后,需要增加一个字段,那么就需要新建一个迁移文件.不要直接操作数据库.

 `php artisan make:migration add_id_to_users_table --table=users` 
 
 这里为users表新增身份证字段.
 
 打开文件 新建身份证id列. 
 
 之后我们执行迁移文件.成功后就能看到新得ID字段已经出现.对于编辑和修改都可以.

 `$table-&amp;gt;renameColumn(&amp;#39;ID&amp;#39;, &amp;#39;id&amp;#39;)` 改名id
 
 对应dorop 也需要dropColumn 此字段.
 
 最后执行此迁移文件.


 
&lt;/code>&lt;/pre></description></item><item><title>Composer笔记</title><link>http://localhost:1313/aLong/composer%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 15 Jul 2019 17:24:45 +0000</pubDate><guid>http://localhost:1313/aLong/composer%E7%AC%94%E8%AE%B0/</guid><description>&lt;h3 id="composer---laravel5">composer - laravel5&lt;/h3>
&lt;h4 id="创建laravel项目">创建laravel项目：&lt;/h4>
&lt;p>&lt;code>conposer create-project laravel/laravel=5.8.* --prefer-dist ./XXX&lt;/code>&lt;/p>
&lt;p>laravel=5.8.* 这里代表要部署5.8中最高版本 &amp;ndash;prefer-dist 参数代表优先下载zip&lt;/p>
&lt;h4 id="安装vendor">安装vendor:&lt;/h4>
&lt;p>&lt;code>composer install&lt;/code>&lt;/p>
&lt;p>&lt;code>composer install --prefer-dist&lt;/code>&lt;/p>
&lt;h4 id="更新">更新：&lt;/h4>
&lt;p>&lt;code>composer update&lt;/code>&lt;/p>
&lt;h4 id="composer版本更新">composer版本更新：&lt;/h4>
&lt;p>&lt;code>composer self-update&lt;/code>&lt;/p>
&lt;h4 id="利用composer-创建laravel控制器">利用composer 创建laravel控制器：&lt;/h4>
&lt;p>&lt;code>php artisan make:controller HomeController&lt;/code>
会在http下 创建一Home的控制器&lt;/p>
&lt;p>如果存在分目录情况，需要指定目录：
&lt;code>php artisan make:controller Home/HomeController&lt;/code>&lt;/p>
&lt;h4 id="laravel-config">Laravel config:&lt;/h4>
&lt;p>编写一些类的别名，controller中 use 简短的别名为目的。&lt;/p>
&lt;p>位置：config/app 存在一数组 aliases 在里面添加&lt;/p>
&lt;h4 id="创建模型">创建模型：&lt;/h4>
&lt;p>创建一个user 的model&lt;/p>
&lt;p>&lt;code>php artisan make:model User&lt;/code>&lt;/p>
&lt;p>指定目录加入目录即可&lt;/p>
&lt;h4 id="获取项目路由">获取项目路由：&lt;/h4>
&lt;p>&lt;code>php artisan route:list&lt;/code>&lt;/p>
&lt;h4 id="composer在项目中安装三方库时候出现报错">composer在项目中安装三方库时候出现报错：&lt;/h4>
&lt;p>执行命令： &lt;code>composer Install&lt;/code>&lt;/p>
&lt;p>返回错误： Your requirements could not be resolved to an installable set of packages.&lt;/p></description></item></channel></rss>