<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ubutun on aLong Blog</title><link>https://blog.51ai.vip/aLong/tags/ubutun/</link><description>Recent content in Ubutun on aLong Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 11 Jan 2023 16:30:47 +0800</lastBuildDate><atom:link href="https://blog.51ai.vip/aLong/tags/ubutun/index.xml" rel="self" type="application/rss+xml"/><item><title>Ubuntu22.04安装kubeadm</title><link>https://blog.51ai.vip/aLong/posts/ubuntu22.04%E5%AE%89%E8%A3%85kubeadm/</link><pubDate>Wed, 11 Jan 2023 16:30:47 +0800</pubDate><guid>https://blog.51ai.vip/aLong/posts/ubuntu22.04%E5%AE%89%E8%A3%85kubeadm/</guid><description>&lt;h1 id="学习k8s">学习k8s&lt;/h1>
&lt;p>学习k8s做笔记，通过kubeadm搭建1master、2node。网络插件：flannel。系统Ubuntu22.04&lt;/p>
&lt;h2 id="系统安装docker">系统安装docker&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/install/ubuntu/">Docker官方手册&lt;/a>&lt;/p>
&lt;p>master、node设备各安装docker、kubelet、 kubeadm、 kubectl。&lt;/p>
&lt;h2 id="为kubeadm准备">为kubeadm准备&lt;/h2>
&lt;p>master、node进行准备工作：&lt;/p>
&lt;ol>
&lt;li>将cgroup处理改成systemd&lt;/li>
&lt;/ol>
&lt;p>nano /etc/docker/daemon.json&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;exec-opts&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;native.cgroupdriver=systemd&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log-driver&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;json-file&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log-opts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;max-size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;100m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;storage-driver&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;overlay2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>sudo systemctl enable docker&lt;/code>
&lt;code>sudo systemctl daemon-reload&lt;/code>
&lt;code>sudo systemctl restart docker&lt;/code>&lt;/p>
&lt;ol start="2">
&lt;li>为了让 Kubernetes 能够检查、转发网络流量，你需要修改 iptables 的配置，启用“br_netfilter”模块&lt;/li>
&lt;/ol>
&lt;p>&lt;code>nano /etc/modules-load.d/k8s.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">br_netfilter&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>nano /etc/sysctl.d/k8s.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">net.bridge.bridge-nf-call-ip6tables&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">net.bridge.bridge-nf-call-iptables&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">net.ipv4.ip_forward&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>sudo sysctl --system&lt;/code>&lt;/p>
&lt;ol start="3">
&lt;li>修改“/etc/fstab”，关闭 Linux 的 swap 分区，提升 Kubernetes 的性能&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sudo swapoff -a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sudo sed -ri &amp;#39;/\sswap\s/s/^#?/#/&amp;#39; /etc/fstab&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装kubeadm">安装kubeadm&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">Kuneadm官方手册&lt;/a>
&lt;strong>在master、node上都需要安装&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>更新 &lt;code>apt&lt;/code> 包索引并安装使用 Kubernetes &lt;code>apt&lt;/code> 仓库所需要的包：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install -y apt-transport-https ca-certificates curl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>(有条件)下载 Google Cloud 公开签名秘钥：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果上面访问不到，可选择其他,例如&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/help/kubernetes/">清华源&lt;/a>提供：
导入gpg key&lt;/p></description></item><item><title>Ubutun16.04安装Python</title><link>https://blog.51ai.vip/aLong/posts/ubutun16-04%E5%AE%89%E8%A3%85python/</link><pubDate>Fri, 24 May 2019 11:17:59 +0000</pubDate><guid>https://blog.51ai.vip/aLong/posts/ubutun16-04%E5%AE%89%E8%A3%85python/</guid><description>&lt;h3 id="目的">目的&lt;/h3>
&lt;p>安装python3.7.3
安装pip&lt;/p>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;ul>
&lt;li>系统内置python2.X,去除默认python的软链, &lt;code>sudo rm /usr/bin/python&lt;/code>&lt;/li>
&lt;li>安装一些软件包&amp;amp;软件包保持最新状态.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>sudo apt-get update&lt;/code>&lt;/p>
&lt;p>&lt;code>sudo apt-get install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget&lt;/code>&lt;/p>
&lt;h3 id="安装python">安装Python&lt;/h3>
&lt;p>通过编译安装python&lt;/p>
&lt;p>默认我下载在home里, &lt;code>cd&lt;/code>&lt;/p>
&lt;p>下载新python文件, &lt;code>wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz &lt;/code>&lt;/p>
&lt;p>解压文件, &lt;code>tar zxf Python-3.7.3.tgz&lt;/code>&lt;/p>
&lt;p>把这个文件拷贝到放置的位置. 这里我放到/usr/local/python &lt;code>mkdir -p /usr/local/python&lt;/code>&lt;/p>
&lt;p>进入这个目录, 执行 &lt;code>./configure --enable-optimizations&lt;/code>
之后执行 &lt;code>sudo make -j 8&lt;/code> 这里8根据设备cpu核心数来的,不知道你可以写1(手动滑稽)&lt;/p>
&lt;p>make之后 该 &lt;del>make install&lt;/del> 嘛? NO! 是 &lt;code>sudo make altinstall&lt;/code>&lt;/p>
&lt;p>装完之后, 可以尝试 python &amp;ndash;version 看看有没有, 如果没有或者版本不对.可能是准备里你没有删除 /usr/bin/python 或者这个不存在.
需要手动添加一下,我这个是没有给我创建成功.&lt;/p>
&lt;p>&lt;code>sudo ln -s /usr/local/Python-3.7.3/python /usr/bin/python&lt;/code>&lt;/p></description></item><item><title>Ubutun下安装Docker</title><link>https://blog.51ai.vip/aLong/posts/ubutun%E4%B8%8B%E5%AE%89%E8%A3%85docker/</link><pubDate>Thu, 04 Apr 2019 14:57:16 +0000</pubDate><guid>https://blog.51ai.vip/aLong/posts/ubutun%E4%B8%8B%E5%AE%89%E8%A3%85docker/</guid><description>&lt;h3 id="docker简介">Docker简介&lt;/h3>
&lt;blockquote>
&lt;p>一个能够把开发的应用程序自动部署到容器的开源引擎
三大概念：镜像（Image）容器（Container）仓库（Repository）&lt;/p>&lt;/blockquote>
&lt;p>具体信息请参考官方。&lt;a href="https://docs.docker.com/engine/docker-overview/">官方概述&lt;/a>（养成看文档习惯）&lt;/p>
&lt;h3 id="安装环境">安装环境&lt;/h3>
&lt;p>Ubuntu 16.04 LTS&lt;/p>
&lt;h3 id="docker安装">Docker安装&lt;/h3>
&lt;p>根据官方doc安装。&lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">官方doc&lt;/a>
1.如果你之前装过，命令卸载。
&lt;code>sudo apt-get remove docker docker-engine docker.io containerd runc&lt;/code>&lt;/p>
&lt;p>2.更新包索引
&lt;code>apt-get update&lt;/code>&lt;/p>
&lt;p>3.安装包以允许apt通过HTTPS使用存储库:
&lt;code>sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common&lt;/code>
（斜线换行，一条命令）&lt;/p>
&lt;p>4.添加Docker的官方GPG密钥:
&lt;code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&lt;/code>
&lt;code>sudo apt-key fingerprint 0EBFCD88&lt;/code>&lt;/p>
&lt;p>5.使用以下命令设置稳定存储库。要添加 夜间或测试存储库，请在下面的命令中的单词后添加单词nightly或test（或两者）stable。
&lt;code>$ sudo add-apt-repository \ &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) \ stable&amp;quot;&lt;/code>
(lsb_release -cs子命令返回Ubuntu发行版的名称)&lt;/p>
&lt;p>6.安装最新版本的Docker CE和containerd，或者转到下一步安装特定版本：
&lt;code>sudo apt-get install docker-ce docker-ce-cli containerd.io&lt;/code>&lt;/p></description></item></channel></rss>